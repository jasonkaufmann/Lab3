
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000428  00800100  00000ca2  00000d36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  00800528  00800528  0000115e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000115e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a08  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a98  00000000  00000000  00002d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a32  00000000  00000000  000037a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  000041d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e9  00000000  00000000  00004650  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a95  00000000  00000000  00004c39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000066ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	15 e0       	ldi	r17, 0x05	; 5
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ea       	ldi	r30, 0xA2	; 162
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	a8 e2       	ldi	r26, 0x28	; 40
  8e:	b5 e0       	ldi	r27, 0x05	; 5
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 34       	cpi	r26, 0x46	; 70
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8f 01 	call	0x31e	; 0x31e <main>
  9e:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_command>:
void drawchar(uint8_t *buff, uint8_t x, uint8_t line, uint8_t c) {
	for (uint8_t i =0; i<5; i++ ) {
		buff[x + (line*128) ] = pgm_read_byte(font+(c*5)+i);
		x++;
	}
}
  a6:	5c 98       	cbi	0x0b, 4	; 11
  a8:	27 e0       	ldi	r18, 0x07	; 7
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	5d 98       	cbi	0x0b, 5	; 11
  b0:	ac 01       	movw	r20, r24
  b2:	02 2e       	mov	r0, r18
  b4:	02 c0       	rjmp	.+4      	; 0xba <lcd_command+0x14>
  b6:	55 95       	asr	r21
  b8:	47 95       	ror	r20
  ba:	0a 94       	dec	r0
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <lcd_command+0x10>
  be:	40 ff       	sbrs	r20, 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <lcd_command+0x20>
  c2:	5e 9a       	sbi	0x0b, 6	; 11
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_command+0x22>
  c6:	5e 98       	cbi	0x0b, 6	; 11
  c8:	5d 9a       	sbi	0x0b, 5	; 11
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	31 09       	sbc	r19, r1
  ce:	78 f7       	brcc	.-34     	; 0xae <lcd_command+0x8>
  d0:	08 95       	ret

000000d2 <lcd_init>:
  d2:	56 9a       	sbi	0x0a, 6	; 10
  d4:	55 9a       	sbi	0x0a, 5	; 10
  d6:	54 9a       	sbi	0x0a, 4	; 10
  d8:	53 9a       	sbi	0x0a, 3	; 10
  da:	52 9a       	sbi	0x0a, 2	; 10
  dc:	5a 98       	cbi	0x0b, 2	; 11
  de:	5b 98       	cbi	0x0b, 3	; 11
  e0:	2f e9       	ldi	r18, 0x9F	; 159
  e2:	86 e8       	ldi	r24, 0x86	; 134
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <lcd_init+0x14>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_init+0x1e>
  f0:	00 00       	nop
  f2:	5b 9a       	sbi	0x0b, 3	; 11
  f4:	83 ea       	ldi	r24, 0xA3	; 163
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
  fa:	80 ea       	ldi	r24, 0xA0	; 160
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 100:	80 ec       	ldi	r24, 0xC0	; 192
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 10c:	8c e2       	ldi	r24, 0x2C	; 44
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 112:	83 ed       	ldi	r24, 0xD3	; 211
 114:	90 e3       	ldi	r25, 0x30	; 48
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <lcd_init+0x44>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <lcd_init+0x4a>
 11c:	00 00       	nop
 11e:	8e e2       	ldi	r24, 0x2E	; 46
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 124:	83 ed       	ldi	r24, 0xD3	; 211
 126:	90 e3       	ldi	r25, 0x30	; 48
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_init+0x56>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_init+0x5c>
 12e:	00 00       	nop
 130:	8f e2       	ldi	r24, 0x2F	; 47
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 136:	83 ec       	ldi	r24, 0xC3	; 195
 138:	99 e0       	ldi	r25, 0x09	; 9
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x68>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x6e>
 140:	00 00       	nop
 142:	86 e2       	ldi	r24, 0x26	; 38
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 148:	08 95       	ret

0000014a <lcd_data>:
 14a:	5c 9a       	sbi	0x0b, 4	; 11
 14c:	27 e0       	ldi	r18, 0x07	; 7
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	5d 98       	cbi	0x0b, 5	; 11
 154:	ac 01       	movw	r20, r24
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <lcd_data+0x14>
 15a:	55 95       	asr	r21
 15c:	47 95       	ror	r20
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <lcd_data+0x10>
 162:	40 ff       	sbrs	r20, 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <lcd_data+0x20>
 166:	5e 9a       	sbi	0x0b, 6	; 11
 168:	01 c0       	rjmp	.+2      	; 0x16c <lcd_data+0x22>
 16a:	5e 98       	cbi	0x0b, 6	; 11
 16c:	5d 9a       	sbi	0x0b, 5	; 11
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	31 09       	sbc	r19, r1
 172:	78 f7       	brcc	.-34     	; 0x152 <lcd_data+0x8>
 174:	08 95       	ret

00000176 <lcd_set_brightness>:
 176:	cf 93       	push	r28
 178:	c8 2f       	mov	r28, r24
 17a:	81 e8       	ldi	r24, 0x81	; 129
 17c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 180:	8c 2f       	mov	r24, r28
 182:	8f 73       	andi	r24, 0x3F	; 63
 184:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <write_buffer>:
 18c:	cf 92       	push	r12
 18e:	df 92       	push	r13
 190:	ef 92       	push	r14
 192:	ff 92       	push	r15
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	0f 2e       	mov	r0, r31
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	ef 2e       	mov	r14, r31
 1a2:	f5 e0       	ldi	r31, 0x05	; 5
 1a4:	ff 2e       	mov	r15, r31
 1a6:	f0 2d       	mov	r31, r0
 1a8:	ec 01       	movw	r28, r24
 1aa:	0f 2e       	mov	r0, r31
 1ac:	f0 e1       	ldi	r31, 0x10	; 16
 1ae:	cf 2e       	mov	r12, r31
 1b0:	f5 e0       	ldi	r31, 0x05	; 5
 1b2:	df 2e       	mov	r13, r31
 1b4:	f0 2d       	mov	r31, r0
 1b6:	f7 01       	movw	r30, r14
 1b8:	80 81       	ld	r24, Z
 1ba:	f2 e0       	ldi	r31, 0x02	; 2
 1bc:	ef 0e       	add	r14, r31
 1be:	f1 1c       	adc	r15, r1
 1c0:	80 6b       	ori	r24, 0xB0	; 176
 1c2:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1cc:	80 e1       	ldi	r24, 0x10	; 16
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1d2:	80 ee       	ldi	r24, 0xE0	; 224
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_data>
 1de:	8e 01       	movw	r16, r28
 1e0:	00 58       	subi	r16, 0x80	; 128
 1e2:	1f 4f       	sbci	r17, 0xFF	; 255
 1e4:	89 91       	ld	r24, Y+
 1e6:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_data>
 1ea:	c0 17       	cp	r28, r16
 1ec:	d1 07       	cpc	r29, r17
 1ee:	d1 f7       	brne	.-12     	; 0x1e4 <write_buffer+0x58>
 1f0:	e8 01       	movw	r28, r16
 1f2:	ce 14       	cp	r12, r14
 1f4:	df 04       	cpc	r13, r15
 1f6:	f9 f6       	brne	.-66     	; 0x1b6 <write_buffer+0x2a>
 1f8:	df 91       	pop	r29
 1fa:	cf 91       	pop	r28
 1fc:	1f 91       	pop	r17
 1fe:	0f 91       	pop	r16
 200:	ff 90       	pop	r15
 202:	ef 90       	pop	r14
 204:	df 90       	pop	r13
 206:	cf 90       	pop	r12
 208:	08 95       	ret

0000020a <clear_buffer>:
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	34 e0       	ldi	r19, 0x04	; 4
 20e:	fc 01       	movw	r30, r24
 210:	a9 01       	movw	r20, r18
 212:	11 92       	st	Z+, r1
 214:	41 50       	subi	r20, 0x01	; 1
 216:	50 40       	sbci	r21, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <clear_buffer+0x8>
 21a:	08 95       	ret

0000021c <setpixel>:

// the most basic function, set a single pixel
void setpixel(uint8_t *buff, uint8_t x, uint8_t y, uint8_t color) {
	unsigned int index = x + (y/8)*128-1;
	unsigned int shift = 7 - (y % 8);
	buff[index] |= (color<<shift);
 21c:	34 2f       	mov	r19, r20
 21e:	36 95       	lsr	r19
 220:	36 95       	lsr	r19
 222:	36 95       	lsr	r19
 224:	e6 2f       	mov	r30, r22
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	50 e8       	ldi	r21, 0x80	; 128
 22a:	35 9f       	mul	r19, r21
 22c:	e0 0d       	add	r30, r0
 22e:	f1 1d       	adc	r31, r1
 230:	11 24       	eor	r1, r1
 232:	31 97       	sbiw	r30, 0x01	; 1
 234:	e8 0f       	add	r30, r24
 236:	f9 1f       	adc	r31, r25
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	50 e0       	ldi	r21, 0x00	; 0
 23c:	40 95       	com	r20
 23e:	50 95       	com	r21
 240:	47 70       	andi	r20, 0x07	; 7
 242:	55 27       	eor	r21, r21
 244:	02 c0       	rjmp	.+4      	; 0x24a <setpixel+0x2e>
 246:	22 0f       	add	r18, r18
 248:	33 1f       	adc	r19, r19
 24a:	4a 95       	dec	r20
 24c:	e2 f7       	brpl	.-8      	; 0x246 <setpixel+0x2a>
 24e:	80 81       	ld	r24, Z
 250:	28 2b       	or	r18, r24
 252:	20 83       	st	Z, r18
 254:	08 95       	ret

00000256 <USART_init>:
	
	//check if Y- is high, A3
	int r = readADC(3);
	
	return r;
}
 256:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 25a:	87 e6       	ldi	r24, 0x67	; 103
 25c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 260:	88 e1       	ldi	r24, 0x18	; 24
 262:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 266:	8e e0       	ldi	r24, 0x0E	; 14
 268:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 26c:	08 95       	ret

0000026e <USART_send>:
 26e:	e0 ec       	ldi	r30, 0xC0	; 192
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	90 81       	ld	r25, Z
 274:	95 ff       	sbrs	r25, 5
 276:	fd cf       	rjmp	.-6      	; 0x272 <USART_send+0x4>
 278:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 27c:	08 95       	ret

0000027e <USART_putstring>:
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	ec 01       	movw	r28, r24
 284:	88 81       	ld	r24, Y
 286:	88 23       	and	r24, r24
 288:	31 f0       	breq	.+12     	; 0x296 <USART_putstring+0x18>
 28a:	21 96       	adiw	r28, 0x01	; 1
 28c:	0e 94 37 01 	call	0x26e	; 0x26e <USART_send>
 290:	89 91       	ld	r24, Y+
 292:	81 11       	cpse	r24, r1
 294:	fb cf       	rjmp	.-10     	; 0x28c <USART_putstring+0xe>
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <readADC>:
 29c:	ec e7       	ldi	r30, 0x7C	; 124
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	90 81       	ld	r25, Z
 2a2:	9c 7f       	andi	r25, 0xFC	; 252
 2a4:	90 83       	st	Z, r25
 2a6:	90 81       	ld	r25, Z
 2a8:	89 2b       	or	r24, r25
 2aa:	80 83       	st	Z, r24
 2ac:	80 81       	ld	r24, Z
 2ae:	80 64       	ori	r24, 0x40	; 64
 2b0:	80 83       	st	Z, r24
 2b2:	ea e7       	ldi	r30, 0x7A	; 122
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	86 6c       	ori	r24, 0xC6	; 198
 2ba:	80 83       	st	Z, r24
 2bc:	80 81       	ld	r24, Z
 2be:	86 fd       	sbrc	r24, 6
 2c0:	fd cf       	rjmp	.-6      	; 0x2bc <readADC+0x20>
 2c2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2c6:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	0e 94 9c 02 	call	0x538	; 0x538 <__floatunsisf>
 2d2:	08 95       	ret

000002d4 <readTouch>:
	//PORTC = 0;
	//DDRC = 0;
	
	//X- A0, X+ A2, Y- A3, Y+ A1
	//1. To read X coordinate first, we will put X- and X+ in digital mode and set X- high and X+ low.
	DDRC |= (1 << PINC0) | (1 << PINC2);
 2d4:	87 b1       	in	r24, 0x07	; 7
 2d6:	85 60       	ori	r24, 0x05	; 5
 2d8:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC0);
 2da:	40 9a       	sbi	0x08, 0	; 8
	PORTC &= ~(1 << PINC2);
 2dc:	42 98       	cbi	0x08, 2	; 8
	//2. Then we set Y- , Y+ to ADC input mode and read the Y- ADC value as X coordinate on touchscreen
	DDRC &= ~((1 << PINC3) | (1 << PINC1));
 2de:	87 b1       	in	r24, 0x07	; 7
 2e0:	85 7f       	andi	r24, 0xF5	; 245
 2e2:	87 b9       	out	0x07, r24	; 7
	touchX = readADC(3);
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 4e 01 	call	0x29c	; 0x29c <readADC>
 2ec:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixsfsi>
 2f0:	70 93 31 05 	sts	0x0531, r23	; 0x800531 <touchX+0x1>
 2f4:	60 93 30 05 	sts	0x0530, r22	; 0x800530 <touchX>
	//3. Then we switch to read Y coordinate, for which we put Y- and Y+ to digital mode  and set Y+ to low and Y- to high.
	DDRC |= (1 << PINC3) | (1 << PINC1);
 2f8:	87 b1       	in	r24, 0x07	; 7
 2fa:	8a 60       	ori	r24, 0x0A	; 10
 2fc:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC3);
 2fe:	43 9a       	sbi	0x08, 3	; 8
	PORTC &= ~(1 << PINC1);
 300:	41 98       	cbi	0x08, 1	; 8
	//4. Set X- and X+ to ADC input, read X- ADC as y coord
	DDRC &= ~((1 << PINC0) | (1 << PINC2));
 302:	87 b1       	in	r24, 0x07	; 7
 304:	8a 7f       	andi	r24, 0xFA	; 250
 306:	87 b9       	out	0x07, r24	; 7
	touchY = readADC(0);
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 4e 01 	call	0x29c	; 0x29c <readADC>
 310:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixsfsi>
 314:	70 93 2f 05 	sts	0x052F, r23	; 0x80052f <touchY+0x1>
 318:	60 93 2e 05 	sts	0x052E, r22	; 0x80052e <touchY>
 31c:	08 95       	ret

0000031e <main>:
	//PORTC = 0;
	
}

int main(void)
{
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	cd b7       	in	r28, 0x3d	; 61
 324:	de b7       	in	r29, 0x3e	; 62
 326:	60 97       	sbiw	r28, 0x10	; 16
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	f8 94       	cli
 32c:	de bf       	out	0x3e, r29	; 62
 32e:	0f be       	out	0x3f, r0	; 63
 330:	cd bf       	out	0x3d, r28	; 61
	USART_init();
 332:	0e 94 2b 01 	call	0x256	; 0x256 <USART_init>
	//setting up the gpio for backlight
	DDRD |= 0x80;
 336:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
 338:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
 33a:	8b b1       	in	r24, 0x0b	; 11
 33c:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
 33e:	84 b1       	in	r24, 0x04	; 4
 340:	85 60       	ori	r24, 0x05	; 5
 342:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
 344:	85 b1       	in	r24, 0x05	; 5
 346:	8a 7f       	andi	r24, 0xFA	; 250
 348:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
 34a:	85 b1       	in	r24, 0x05	; 5
 34c:	85 b9       	out	0x05, r24	; 5
	
	//lcd initialisation
	lcd_init();
 34e:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
 352:	8f ea       	ldi	r24, 0xAF	; 175
 354:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
	lcd_set_brightness(0x18);
 358:	88 e1       	ldi	r24, 0x18	; 24
 35a:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_set_brightness>
	write_buffer(buff);
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	0e 94 c6 00 	call	0x18c	; 0x18c <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 366:	2f ef       	ldi	r18, 0xFF	; 255
 368:	81 ee       	ldi	r24, 0xE1	; 225
 36a:	94 e0       	ldi	r25, 0x04	; 4
 36c:	21 50       	subi	r18, 0x01	; 1
 36e:	80 40       	sbci	r24, 0x00	; 0
 370:	90 40       	sbci	r25, 0x00	; 0
 372:	e1 f7       	brne	.-8      	; 0x36c <main+0x4e>
 374:	00 c0       	rjmp	.+0      	; 0x376 <main+0x58>
 376:	00 00       	nop
	_delay_ms(100); //10k
	clear_buffer(buff);
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 05 01 	call	0x20a	; 0x20a <clear_buffer>
	write_buffer(buff);
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 c6 00 	call	0x18c	; 0x18c <write_buffer>
 388:	2f ef       	ldi	r18, 0xFF	; 255
 38a:	83 ed       	ldi	r24, 0xD3	; 211
 38c:	90 e3       	ldi	r25, 0x30	; 48
 38e:	21 50       	subi	r18, 0x01	; 1
 390:	80 40       	sbci	r24, 0x00	; 0
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	e1 f7       	brne	.-8      	; 0x38e <main+0x70>
 396:	00 c0       	rjmp	.+0      	; 0x398 <main+0x7a>
 398:	00 00       	nop
	_delay_ms(1000);
	
	char String[] = "Hello, world! \n";
 39a:	20 e1       	ldi	r18, 0x10	; 16
 39c:	e8 e1       	ldi	r30, 0x18	; 24
 39e:	f5 e0       	ldi	r31, 0x05	; 5
 3a0:	ce 01       	movw	r24, r28
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	dc 01       	movw	r26, r24
 3a6:	01 90       	ld	r0, Z+
 3a8:	0d 92       	st	X+, r0
 3aa:	2a 95       	dec	r18
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <main+0x88>
	int four = 4;
	sprintf(strbuff, String);
 3ae:	9f 93       	push	r25
 3b0:	8f 93       	push	r24
 3b2:	82 e3       	ldi	r24, 0x32	; 50
 3b4:	95 e0       	ldi	r25, 0x05	; 5
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	0e 94 65 03 	call	0x6ca	; 0x6ca <sprintf>
	USART_putstring(strbuff);
 3be:	82 e3       	ldi	r24, 0x32	; 50
 3c0:	95 e0       	ldi	r25, 0x05	; 5
 3c2:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_putstring>
 3c6:	0f 90       	pop	r0
 3c8:	0f 90       	pop	r0
 3ca:	0f 90       	pop	r0
 3cc:	0f 90       	pop	r0
		//fillcircle(buff, 64,32,20,1);
		//drawline(buff,1,0,50,5,1);
		//write_buffer(buff);
		//_delay_ms(1000); //5k
		//clearpixel(buff, 64, 32);
		touchIn = 951; //touch();
 3ce:	07 eb       	ldi	r16, 0xB7	; 183
 3d0:	13 e0       	ldi	r17, 0x03	; 3
 3d2:	10 93 2d 05 	sts	0x052D, r17	; 0x80052d <touchIn+0x1>
 3d6:	00 93 2c 05 	sts	0x052C, r16	; 0x80052c <touchIn>
		
		if(touchIn > 950) {
			//sprintf(strbuff, "touch: %d ", touchIn);
			//USART_putstring(strbuff);
			readTouch();
 3da:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <readTouch>
			//sprintf(strbuff, "x: %d ", touchX);
			//USART_putstring(strbuff);
			//sprintf(strbuff, "   y: %d \n", touchY);
			//USART_putstring(strbuff);
			
			drawX = map((long)touchX, (long)inxmin, (long)inxmax, 0, 127);
 3de:	80 90 16 05 	lds	r8, 0x0516	; 0x800516 <inxmin>
 3e2:	90 90 17 05 	lds	r9, 0x0517	; 0x800517 <inxmin+0x1>
 3e6:	09 2c       	mov	r0, r9
 3e8:	00 0c       	add	r0, r0
 3ea:	aa 08       	sbc	r10, r10
 3ec:	bb 08       	sbc	r11, r11
	return ADC;
}

//map function obtained from Arduino website to map one range to another
long map(long x, long in_min, long in_max, long out_min, long out_max) {
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 3ee:	20 91 30 05 	lds	r18, 0x0530	; 0x800530 <touchX>
 3f2:	30 91 31 05 	lds	r19, 0x0531	; 0x800531 <touchX+0x1>
 3f6:	c9 01       	movw	r24, r18
 3f8:	33 0f       	add	r19, r19
 3fa:	aa 0b       	sbc	r26, r26
 3fc:	bb 0b       	sbc	r27, r27
 3fe:	9c 01       	movw	r18, r24
 400:	ad 01       	movw	r20, r26
 402:	28 19       	sub	r18, r8
 404:	39 09       	sbc	r19, r9
 406:	4a 09       	sbc	r20, r10
 408:	5b 09       	sbc	r21, r11
 40a:	af e7       	ldi	r26, 0x7F	; 127
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	0e 94 21 03 	call	0x642	; 0x642 <__muluhisi3>
 412:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <inxmax>
 416:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <inxmax+0x1>
 41a:	69 01       	movw	r12, r18
 41c:	33 0f       	add	r19, r19
 41e:	ee 08       	sbc	r14, r14
 420:	ff 08       	sbc	r15, r15
 422:	a7 01       	movw	r20, r14
 424:	96 01       	movw	r18, r12
 426:	28 19       	sub	r18, r8
 428:	39 09       	sbc	r19, r9
 42a:	4a 09       	sbc	r20, r10
 42c:	5b 09       	sbc	r21, r11
 42e:	0e 94 02 03 	call	0x604	; 0x604 <__divmodsi4>
 432:	f2 2e       	mov	r15, r18
			//sprintf(strbuff, "x: %d ", touchX);
			//USART_putstring(strbuff);
			//sprintf(strbuff, "   y: %d \n", touchY);
			//USART_putstring(strbuff);
			
			drawX = map((long)touchX, (long)inxmin, (long)inxmax, 0, 127);
 434:	20 93 2a 05 	sts	0x052A, r18	; 0x80052a <drawX>
 438:	30 93 2b 05 	sts	0x052B, r19	; 0x80052b <drawX+0x1>
			drawY = map((long)touchY, (long)inymin, (long)inymax, 63, 0);
 43c:	80 90 12 05 	lds	r8, 0x0512	; 0x800512 <inymin>
 440:	90 90 13 05 	lds	r9, 0x0513	; 0x800513 <inymin+0x1>
 444:	09 2c       	mov	r0, r9
 446:	00 0c       	add	r0, r0
 448:	aa 08       	sbc	r10, r10
 44a:	bb 08       	sbc	r11, r11
	return ADC;
}

//map function obtained from Arduino website to map one range to another
long map(long x, long in_min, long in_max, long out_min, long out_max) {
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 44c:	20 91 2e 05 	lds	r18, 0x052E	; 0x80052e <touchY>
 450:	30 91 2f 05 	lds	r19, 0x052F	; 0x80052f <touchY+0x1>
 454:	c9 01       	movw	r24, r18
 456:	33 0f       	add	r19, r19
 458:	aa 0b       	sbc	r26, r26
 45a:	bb 0b       	sbc	r27, r27
 45c:	9c 01       	movw	r18, r24
 45e:	ad 01       	movw	r20, r26
 460:	28 19       	sub	r18, r8
 462:	39 09       	sbc	r19, r9
 464:	4a 09       	sbc	r20, r10
 466:	5b 09       	sbc	r21, r11
 468:	a1 ec       	ldi	r26, 0xC1	; 193
 46a:	bf ef       	ldi	r27, 0xFF	; 255
 46c:	0e 94 2f 03 	call	0x65e	; 0x65e <__mulohisi3>
 470:	20 91 10 05 	lds	r18, 0x0510	; 0x800510 <inymax>
 474:	30 91 11 05 	lds	r19, 0x0511	; 0x800511 <inymax+0x1>
 478:	29 01       	movw	r4, r18
 47a:	33 0f       	add	r19, r19
 47c:	66 08       	sbc	r6, r6
 47e:	77 08       	sbc	r7, r7
 480:	a3 01       	movw	r20, r6
 482:	92 01       	movw	r18, r4
 484:	28 19       	sub	r18, r8
 486:	39 09       	sbc	r19, r9
 488:	4a 09       	sbc	r20, r10
 48a:	5b 09       	sbc	r21, r11
 48c:	0e 94 02 03 	call	0x604	; 0x604 <__divmodsi4>
 490:	ba 01       	movw	r22, r20
 492:	a9 01       	movw	r20, r18
 494:	41 5c       	subi	r20, 0xC1	; 193
 496:	5f 4f       	sbci	r21, 0xFF	; 255
 498:	6f 4f       	sbci	r22, 0xFF	; 255
 49a:	7f 4f       	sbci	r23, 0xFF	; 255
			//USART_putstring(strbuff);
			//sprintf(strbuff, "   y: %d \n", touchY);
			//USART_putstring(strbuff);
			
			drawX = map((long)touchX, (long)inxmin, (long)inxmax, 0, 127);
			drawY = map((long)touchY, (long)inymin, (long)inymax, 63, 0);
 49c:	50 93 29 05 	sts	0x0529, r21	; 0x800529 <__data_end+0x1>
 4a0:	40 93 28 05 	sts	0x0528, r20	; 0x800528 <__data_end>
			setpixel(buff, drawX, drawY, 1);
 4a4:	21 e0       	ldi	r18, 0x01	; 1
 4a6:	6f 2d       	mov	r22, r15
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	91 e0       	ldi	r25, 0x01	; 1
 4ac:	0e 94 0e 01 	call	0x21c	; 0x21c <setpixel>
			write_buffer(buff);
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	91 e0       	ldi	r25, 0x01	; 1
 4b4:	0e 94 c6 00 	call	0x18c	; 0x18c <write_buffer>
 4b8:	2f ef       	ldi	r18, 0xFF	; 255
 4ba:	80 e7       	ldi	r24, 0x70	; 112
 4bc:	92 e0       	ldi	r25, 0x02	; 2
 4be:	21 50       	subi	r18, 0x01	; 1
 4c0:	80 40       	sbci	r24, 0x00	; 0
 4c2:	90 40       	sbci	r25, 0x00	; 0
 4c4:	e1 f7       	brne	.-8      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c8:	00 00       	nop
 4ca:	83 cf       	rjmp	.-250    	; 0x3d2 <main+0xb4>

000004cc <__fixsfsi>:
 4cc:	0e 94 6d 02 	call	0x4da	; 0x4da <__fixunssfsi>
 4d0:	68 94       	set
 4d2:	b1 11       	cpse	r27, r1
 4d4:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 4d8:	08 95       	ret

000004da <__fixunssfsi>:
 4da:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_splitA>
 4de:	88 f0       	brcs	.+34     	; 0x502 <__fixunssfsi+0x28>
 4e0:	9f 57       	subi	r25, 0x7F	; 127
 4e2:	98 f0       	brcs	.+38     	; 0x50a <__fixunssfsi+0x30>
 4e4:	b9 2f       	mov	r27, r25
 4e6:	99 27       	eor	r25, r25
 4e8:	b7 51       	subi	r27, 0x17	; 23
 4ea:	b0 f0       	brcs	.+44     	; 0x518 <__fixunssfsi+0x3e>
 4ec:	e1 f0       	breq	.+56     	; 0x526 <__fixunssfsi+0x4c>
 4ee:	66 0f       	add	r22, r22
 4f0:	77 1f       	adc	r23, r23
 4f2:	88 1f       	adc	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	1a f0       	brmi	.+6      	; 0x4fe <__fixunssfsi+0x24>
 4f8:	ba 95       	dec	r27
 4fa:	c9 f7       	brne	.-14     	; 0x4ee <__fixunssfsi+0x14>
 4fc:	14 c0       	rjmp	.+40     	; 0x526 <__fixunssfsi+0x4c>
 4fe:	b1 30       	cpi	r27, 0x01	; 1
 500:	91 f0       	breq	.+36     	; 0x526 <__fixunssfsi+0x4c>
 502:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_zero>
 506:	b1 e0       	ldi	r27, 0x01	; 1
 508:	08 95       	ret
 50a:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_zero>
 50e:	67 2f       	mov	r22, r23
 510:	78 2f       	mov	r23, r24
 512:	88 27       	eor	r24, r24
 514:	b8 5f       	subi	r27, 0xF8	; 248
 516:	39 f0       	breq	.+14     	; 0x526 <__fixunssfsi+0x4c>
 518:	b9 3f       	cpi	r27, 0xF9	; 249
 51a:	cc f3       	brlt	.-14     	; 0x50e <__fixunssfsi+0x34>
 51c:	86 95       	lsr	r24
 51e:	77 95       	ror	r23
 520:	67 95       	ror	r22
 522:	b3 95       	inc	r27
 524:	d9 f7       	brne	.-10     	; 0x51c <__fixunssfsi+0x42>
 526:	3e f4       	brtc	.+14     	; 0x536 <__fixunssfsi+0x5c>
 528:	90 95       	com	r25
 52a:	80 95       	com	r24
 52c:	70 95       	com	r23
 52e:	61 95       	neg	r22
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	08 95       	ret

00000538 <__floatunsisf>:
 538:	e8 94       	clt
 53a:	09 c0       	rjmp	.+18     	; 0x54e <__floatsisf+0x12>

0000053c <__floatsisf>:
 53c:	97 fb       	bst	r25, 7
 53e:	3e f4       	brtc	.+14     	; 0x54e <__floatsisf+0x12>
 540:	90 95       	com	r25
 542:	80 95       	com	r24
 544:	70 95       	com	r23
 546:	61 95       	neg	r22
 548:	7f 4f       	sbci	r23, 0xFF	; 255
 54a:	8f 4f       	sbci	r24, 0xFF	; 255
 54c:	9f 4f       	sbci	r25, 0xFF	; 255
 54e:	99 23       	and	r25, r25
 550:	a9 f0       	breq	.+42     	; 0x57c <__floatsisf+0x40>
 552:	f9 2f       	mov	r31, r25
 554:	96 e9       	ldi	r25, 0x96	; 150
 556:	bb 27       	eor	r27, r27
 558:	93 95       	inc	r25
 55a:	f6 95       	lsr	r31
 55c:	87 95       	ror	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b7 95       	ror	r27
 564:	f1 11       	cpse	r31, r1
 566:	f8 cf       	rjmp	.-16     	; 0x558 <__floatsisf+0x1c>
 568:	fa f4       	brpl	.+62     	; 0x5a8 <__floatsisf+0x6c>
 56a:	bb 0f       	add	r27, r27
 56c:	11 f4       	brne	.+4      	; 0x572 <__floatsisf+0x36>
 56e:	60 ff       	sbrs	r22, 0
 570:	1b c0       	rjmp	.+54     	; 0x5a8 <__floatsisf+0x6c>
 572:	6f 5f       	subi	r22, 0xFF	; 255
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	16 c0       	rjmp	.+44     	; 0x5a8 <__floatsisf+0x6c>
 57c:	88 23       	and	r24, r24
 57e:	11 f0       	breq	.+4      	; 0x584 <__floatsisf+0x48>
 580:	96 e9       	ldi	r25, 0x96	; 150
 582:	11 c0       	rjmp	.+34     	; 0x5a6 <__floatsisf+0x6a>
 584:	77 23       	and	r23, r23
 586:	21 f0       	breq	.+8      	; 0x590 <__floatsisf+0x54>
 588:	9e e8       	ldi	r25, 0x8E	; 142
 58a:	87 2f       	mov	r24, r23
 58c:	76 2f       	mov	r23, r22
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__floatsisf+0x5e>
 590:	66 23       	and	r22, r22
 592:	71 f0       	breq	.+28     	; 0x5b0 <__floatsisf+0x74>
 594:	96 e8       	ldi	r25, 0x86	; 134
 596:	86 2f       	mov	r24, r22
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	2a f0       	brmi	.+10     	; 0x5a8 <__floatsisf+0x6c>
 59e:	9a 95       	dec	r25
 5a0:	66 0f       	add	r22, r22
 5a2:	77 1f       	adc	r23, r23
 5a4:	88 1f       	adc	r24, r24
 5a6:	da f7       	brpl	.-10     	; 0x59e <__floatsisf+0x62>
 5a8:	88 0f       	add	r24, r24
 5aa:	96 95       	lsr	r25
 5ac:	87 95       	ror	r24
 5ae:	97 f9       	bld	r25, 7
 5b0:	08 95       	ret

000005b2 <__fp_split3>:
 5b2:	57 fd       	sbrc	r21, 7
 5b4:	90 58       	subi	r25, 0x80	; 128
 5b6:	44 0f       	add	r20, r20
 5b8:	55 1f       	adc	r21, r21
 5ba:	59 f0       	breq	.+22     	; 0x5d2 <__fp_splitA+0x10>
 5bc:	5f 3f       	cpi	r21, 0xFF	; 255
 5be:	71 f0       	breq	.+28     	; 0x5dc <__fp_splitA+0x1a>
 5c0:	47 95       	ror	r20

000005c2 <__fp_splitA>:
 5c2:	88 0f       	add	r24, r24
 5c4:	97 fb       	bst	r25, 7
 5c6:	99 1f       	adc	r25, r25
 5c8:	61 f0       	breq	.+24     	; 0x5e2 <__fp_splitA+0x20>
 5ca:	9f 3f       	cpi	r25, 0xFF	; 255
 5cc:	79 f0       	breq	.+30     	; 0x5ec <__fp_splitA+0x2a>
 5ce:	87 95       	ror	r24
 5d0:	08 95       	ret
 5d2:	12 16       	cp	r1, r18
 5d4:	13 06       	cpc	r1, r19
 5d6:	14 06       	cpc	r1, r20
 5d8:	55 1f       	adc	r21, r21
 5da:	f2 cf       	rjmp	.-28     	; 0x5c0 <__fp_split3+0xe>
 5dc:	46 95       	lsr	r20
 5de:	f1 df       	rcall	.-30     	; 0x5c2 <__fp_splitA>
 5e0:	08 c0       	rjmp	.+16     	; 0x5f2 <__fp_splitA+0x30>
 5e2:	16 16       	cp	r1, r22
 5e4:	17 06       	cpc	r1, r23
 5e6:	18 06       	cpc	r1, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	f1 cf       	rjmp	.-30     	; 0x5ce <__fp_splitA+0xc>
 5ec:	86 95       	lsr	r24
 5ee:	71 05       	cpc	r23, r1
 5f0:	61 05       	cpc	r22, r1
 5f2:	08 94       	sec
 5f4:	08 95       	ret

000005f6 <__fp_zero>:
 5f6:	e8 94       	clt

000005f8 <__fp_szero>:
 5f8:	bb 27       	eor	r27, r27
 5fa:	66 27       	eor	r22, r22
 5fc:	77 27       	eor	r23, r23
 5fe:	cb 01       	movw	r24, r22
 600:	97 f9       	bld	r25, 7
 602:	08 95       	ret

00000604 <__divmodsi4>:
 604:	05 2e       	mov	r0, r21
 606:	97 fb       	bst	r25, 7
 608:	1e f4       	brtc	.+6      	; 0x610 <__divmodsi4+0xc>
 60a:	00 94       	com	r0
 60c:	0e 94 19 03 	call	0x632	; 0x632 <__negsi2>
 610:	57 fd       	sbrc	r21, 7
 612:	07 d0       	rcall	.+14     	; 0x622 <__divmodsi4_neg2>
 614:	0e 94 34 03 	call	0x668	; 0x668 <__udivmodsi4>
 618:	07 fc       	sbrc	r0, 7
 61a:	03 d0       	rcall	.+6      	; 0x622 <__divmodsi4_neg2>
 61c:	4e f4       	brtc	.+18     	; 0x630 <__divmodsi4_exit>
 61e:	0c 94 19 03 	jmp	0x632	; 0x632 <__negsi2>

00000622 <__divmodsi4_neg2>:
 622:	50 95       	com	r21
 624:	40 95       	com	r20
 626:	30 95       	com	r19
 628:	21 95       	neg	r18
 62a:	3f 4f       	sbci	r19, 0xFF	; 255
 62c:	4f 4f       	sbci	r20, 0xFF	; 255
 62e:	5f 4f       	sbci	r21, 0xFF	; 255

00000630 <__divmodsi4_exit>:
 630:	08 95       	ret

00000632 <__negsi2>:
 632:	90 95       	com	r25
 634:	80 95       	com	r24
 636:	70 95       	com	r23
 638:	61 95       	neg	r22
 63a:	7f 4f       	sbci	r23, 0xFF	; 255
 63c:	8f 4f       	sbci	r24, 0xFF	; 255
 63e:	9f 4f       	sbci	r25, 0xFF	; 255
 640:	08 95       	ret

00000642 <__muluhisi3>:
 642:	0e 94 56 03 	call	0x6ac	; 0x6ac <__umulhisi3>
 646:	a5 9f       	mul	r26, r21
 648:	90 0d       	add	r25, r0
 64a:	b4 9f       	mul	r27, r20
 64c:	90 0d       	add	r25, r0
 64e:	a4 9f       	mul	r26, r20
 650:	80 0d       	add	r24, r0
 652:	91 1d       	adc	r25, r1
 654:	11 24       	eor	r1, r1
 656:	08 95       	ret

00000658 <__mulshisi3>:
 658:	b7 ff       	sbrs	r27, 7
 65a:	0c 94 21 03 	jmp	0x642	; 0x642 <__muluhisi3>

0000065e <__mulohisi3>:
 65e:	0e 94 21 03 	call	0x642	; 0x642 <__muluhisi3>
 662:	82 1b       	sub	r24, r18
 664:	93 0b       	sbc	r25, r19
 666:	08 95       	ret

00000668 <__udivmodsi4>:
 668:	a1 e2       	ldi	r26, 0x21	; 33
 66a:	1a 2e       	mov	r1, r26
 66c:	aa 1b       	sub	r26, r26
 66e:	bb 1b       	sub	r27, r27
 670:	fd 01       	movw	r30, r26
 672:	0d c0       	rjmp	.+26     	; 0x68e <__udivmodsi4_ep>

00000674 <__udivmodsi4_loop>:
 674:	aa 1f       	adc	r26, r26
 676:	bb 1f       	adc	r27, r27
 678:	ee 1f       	adc	r30, r30
 67a:	ff 1f       	adc	r31, r31
 67c:	a2 17       	cp	r26, r18
 67e:	b3 07       	cpc	r27, r19
 680:	e4 07       	cpc	r30, r20
 682:	f5 07       	cpc	r31, r21
 684:	20 f0       	brcs	.+8      	; 0x68e <__udivmodsi4_ep>
 686:	a2 1b       	sub	r26, r18
 688:	b3 0b       	sbc	r27, r19
 68a:	e4 0b       	sbc	r30, r20
 68c:	f5 0b       	sbc	r31, r21

0000068e <__udivmodsi4_ep>:
 68e:	66 1f       	adc	r22, r22
 690:	77 1f       	adc	r23, r23
 692:	88 1f       	adc	r24, r24
 694:	99 1f       	adc	r25, r25
 696:	1a 94       	dec	r1
 698:	69 f7       	brne	.-38     	; 0x674 <__udivmodsi4_loop>
 69a:	60 95       	com	r22
 69c:	70 95       	com	r23
 69e:	80 95       	com	r24
 6a0:	90 95       	com	r25
 6a2:	9b 01       	movw	r18, r22
 6a4:	ac 01       	movw	r20, r24
 6a6:	bd 01       	movw	r22, r26
 6a8:	cf 01       	movw	r24, r30
 6aa:	08 95       	ret

000006ac <__umulhisi3>:
 6ac:	a2 9f       	mul	r26, r18
 6ae:	b0 01       	movw	r22, r0
 6b0:	b3 9f       	mul	r27, r19
 6b2:	c0 01       	movw	r24, r0
 6b4:	a3 9f       	mul	r26, r19
 6b6:	70 0d       	add	r23, r0
 6b8:	81 1d       	adc	r24, r1
 6ba:	11 24       	eor	r1, r1
 6bc:	91 1d       	adc	r25, r1
 6be:	b2 9f       	mul	r27, r18
 6c0:	70 0d       	add	r23, r0
 6c2:	81 1d       	adc	r24, r1
 6c4:	11 24       	eor	r1, r1
 6c6:	91 1d       	adc	r25, r1
 6c8:	08 95       	ret

000006ca <sprintf>:
 6ca:	ae e0       	ldi	r26, 0x0E	; 14
 6cc:	b0 e0       	ldi	r27, 0x00	; 0
 6ce:	eb e6       	ldi	r30, 0x6B	; 107
 6d0:	f3 e0       	ldi	r31, 0x03	; 3
 6d2:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__prologue_saves__+0x1c>
 6d6:	0d 89       	ldd	r16, Y+21	; 0x15
 6d8:	1e 89       	ldd	r17, Y+22	; 0x16
 6da:	86 e0       	ldi	r24, 0x06	; 6
 6dc:	8c 83       	std	Y+4, r24	; 0x04
 6de:	1a 83       	std	Y+2, r17	; 0x02
 6e0:	09 83       	std	Y+1, r16	; 0x01
 6e2:	8f ef       	ldi	r24, 0xFF	; 255
 6e4:	9f e7       	ldi	r25, 0x7F	; 127
 6e6:	9e 83       	std	Y+6, r25	; 0x06
 6e8:	8d 83       	std	Y+5, r24	; 0x05
 6ea:	ae 01       	movw	r20, r28
 6ec:	47 5e       	subi	r20, 0xE7	; 231
 6ee:	5f 4f       	sbci	r21, 0xFF	; 255
 6f0:	6f 89       	ldd	r22, Y+23	; 0x17
 6f2:	78 8d       	ldd	r23, Y+24	; 0x18
 6f4:	ce 01       	movw	r24, r28
 6f6:	01 96       	adiw	r24, 0x01	; 1
 6f8:	0e 94 87 03 	call	0x70e	; 0x70e <vfprintf>
 6fc:	ef 81       	ldd	r30, Y+7	; 0x07
 6fe:	f8 85       	ldd	r31, Y+8	; 0x08
 700:	e0 0f       	add	r30, r16
 702:	f1 1f       	adc	r31, r17
 704:	10 82       	st	Z, r1
 706:	2e 96       	adiw	r28, 0x0e	; 14
 708:	e4 e0       	ldi	r30, 0x04	; 4
 70a:	0c 94 42 06 	jmp	0xc84	; 0xc84 <__epilogue_restores__+0x1c>

0000070e <vfprintf>:
 70e:	ab e0       	ldi	r26, 0x0B	; 11
 710:	b0 e0       	ldi	r27, 0x00	; 0
 712:	ed e8       	ldi	r30, 0x8D	; 141
 714:	f3 e0       	ldi	r31, 0x03	; 3
 716:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__prologue_saves__>
 71a:	6c 01       	movw	r12, r24
 71c:	7b 01       	movw	r14, r22
 71e:	8a 01       	movw	r16, r20
 720:	fc 01       	movw	r30, r24
 722:	17 82       	std	Z+7, r1	; 0x07
 724:	16 82       	std	Z+6, r1	; 0x06
 726:	83 81       	ldd	r24, Z+3	; 0x03
 728:	81 ff       	sbrs	r24, 1
 72a:	cc c1       	rjmp	.+920    	; 0xac4 <__stack+0x1c5>
 72c:	ce 01       	movw	r24, r28
 72e:	01 96       	adiw	r24, 0x01	; 1
 730:	3c 01       	movw	r6, r24
 732:	f6 01       	movw	r30, r12
 734:	93 81       	ldd	r25, Z+3	; 0x03
 736:	f7 01       	movw	r30, r14
 738:	93 fd       	sbrc	r25, 3
 73a:	85 91       	lpm	r24, Z+
 73c:	93 ff       	sbrs	r25, 3
 73e:	81 91       	ld	r24, Z+
 740:	7f 01       	movw	r14, r30
 742:	88 23       	and	r24, r24
 744:	09 f4       	brne	.+2      	; 0x748 <vfprintf+0x3a>
 746:	ba c1       	rjmp	.+884    	; 0xabc <__stack+0x1bd>
 748:	85 32       	cpi	r24, 0x25	; 37
 74a:	39 f4       	brne	.+14     	; 0x75a <vfprintf+0x4c>
 74c:	93 fd       	sbrc	r25, 3
 74e:	85 91       	lpm	r24, Z+
 750:	93 ff       	sbrs	r25, 3
 752:	81 91       	ld	r24, Z+
 754:	7f 01       	movw	r14, r30
 756:	85 32       	cpi	r24, 0x25	; 37
 758:	29 f4       	brne	.+10     	; 0x764 <vfprintf+0x56>
 75a:	b6 01       	movw	r22, r12
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 762:	e7 cf       	rjmp	.-50     	; 0x732 <vfprintf+0x24>
 764:	91 2c       	mov	r9, r1
 766:	21 2c       	mov	r2, r1
 768:	31 2c       	mov	r3, r1
 76a:	ff e1       	ldi	r31, 0x1F	; 31
 76c:	f3 15       	cp	r31, r3
 76e:	d8 f0       	brcs	.+54     	; 0x7a6 <vfprintf+0x98>
 770:	8b 32       	cpi	r24, 0x2B	; 43
 772:	79 f0       	breq	.+30     	; 0x792 <vfprintf+0x84>
 774:	38 f4       	brcc	.+14     	; 0x784 <vfprintf+0x76>
 776:	80 32       	cpi	r24, 0x20	; 32
 778:	79 f0       	breq	.+30     	; 0x798 <vfprintf+0x8a>
 77a:	83 32       	cpi	r24, 0x23	; 35
 77c:	a1 f4       	brne	.+40     	; 0x7a6 <vfprintf+0x98>
 77e:	23 2d       	mov	r18, r3
 780:	20 61       	ori	r18, 0x10	; 16
 782:	1d c0       	rjmp	.+58     	; 0x7be <vfprintf+0xb0>
 784:	8d 32       	cpi	r24, 0x2D	; 45
 786:	61 f0       	breq	.+24     	; 0x7a0 <vfprintf+0x92>
 788:	80 33       	cpi	r24, 0x30	; 48
 78a:	69 f4       	brne	.+26     	; 0x7a6 <vfprintf+0x98>
 78c:	23 2d       	mov	r18, r3
 78e:	21 60       	ori	r18, 0x01	; 1
 790:	16 c0       	rjmp	.+44     	; 0x7be <vfprintf+0xb0>
 792:	83 2d       	mov	r24, r3
 794:	82 60       	ori	r24, 0x02	; 2
 796:	38 2e       	mov	r3, r24
 798:	e3 2d       	mov	r30, r3
 79a:	e4 60       	ori	r30, 0x04	; 4
 79c:	3e 2e       	mov	r3, r30
 79e:	2a c0       	rjmp	.+84     	; 0x7f4 <vfprintf+0xe6>
 7a0:	f3 2d       	mov	r31, r3
 7a2:	f8 60       	ori	r31, 0x08	; 8
 7a4:	1d c0       	rjmp	.+58     	; 0x7e0 <vfprintf+0xd2>
 7a6:	37 fc       	sbrc	r3, 7
 7a8:	2d c0       	rjmp	.+90     	; 0x804 <vfprintf+0xf6>
 7aa:	20 ed       	ldi	r18, 0xD0	; 208
 7ac:	28 0f       	add	r18, r24
 7ae:	2a 30       	cpi	r18, 0x0A	; 10
 7b0:	40 f0       	brcs	.+16     	; 0x7c2 <vfprintf+0xb4>
 7b2:	8e 32       	cpi	r24, 0x2E	; 46
 7b4:	b9 f4       	brne	.+46     	; 0x7e4 <vfprintf+0xd6>
 7b6:	36 fc       	sbrc	r3, 6
 7b8:	81 c1       	rjmp	.+770    	; 0xabc <__stack+0x1bd>
 7ba:	23 2d       	mov	r18, r3
 7bc:	20 64       	ori	r18, 0x40	; 64
 7be:	32 2e       	mov	r3, r18
 7c0:	19 c0       	rjmp	.+50     	; 0x7f4 <vfprintf+0xe6>
 7c2:	36 fe       	sbrs	r3, 6
 7c4:	06 c0       	rjmp	.+12     	; 0x7d2 <vfprintf+0xc4>
 7c6:	8a e0       	ldi	r24, 0x0A	; 10
 7c8:	98 9e       	mul	r9, r24
 7ca:	20 0d       	add	r18, r0
 7cc:	11 24       	eor	r1, r1
 7ce:	92 2e       	mov	r9, r18
 7d0:	11 c0       	rjmp	.+34     	; 0x7f4 <vfprintf+0xe6>
 7d2:	ea e0       	ldi	r30, 0x0A	; 10
 7d4:	2e 9e       	mul	r2, r30
 7d6:	20 0d       	add	r18, r0
 7d8:	11 24       	eor	r1, r1
 7da:	22 2e       	mov	r2, r18
 7dc:	f3 2d       	mov	r31, r3
 7de:	f0 62       	ori	r31, 0x20	; 32
 7e0:	3f 2e       	mov	r3, r31
 7e2:	08 c0       	rjmp	.+16     	; 0x7f4 <vfprintf+0xe6>
 7e4:	8c 36       	cpi	r24, 0x6C	; 108
 7e6:	21 f4       	brne	.+8      	; 0x7f0 <vfprintf+0xe2>
 7e8:	83 2d       	mov	r24, r3
 7ea:	80 68       	ori	r24, 0x80	; 128
 7ec:	38 2e       	mov	r3, r24
 7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <vfprintf+0xe6>
 7f0:	88 36       	cpi	r24, 0x68	; 104
 7f2:	41 f4       	brne	.+16     	; 0x804 <vfprintf+0xf6>
 7f4:	f7 01       	movw	r30, r14
 7f6:	93 fd       	sbrc	r25, 3
 7f8:	85 91       	lpm	r24, Z+
 7fa:	93 ff       	sbrs	r25, 3
 7fc:	81 91       	ld	r24, Z+
 7fe:	7f 01       	movw	r14, r30
 800:	81 11       	cpse	r24, r1
 802:	b3 cf       	rjmp	.-154    	; 0x76a <vfprintf+0x5c>
 804:	98 2f       	mov	r25, r24
 806:	9f 7d       	andi	r25, 0xDF	; 223
 808:	95 54       	subi	r25, 0x45	; 69
 80a:	93 30       	cpi	r25, 0x03	; 3
 80c:	28 f4       	brcc	.+10     	; 0x818 <vfprintf+0x10a>
 80e:	0c 5f       	subi	r16, 0xFC	; 252
 810:	1f 4f       	sbci	r17, 0xFF	; 255
 812:	9f e3       	ldi	r25, 0x3F	; 63
 814:	99 83       	std	Y+1, r25	; 0x01
 816:	0d c0       	rjmp	.+26     	; 0x832 <vfprintf+0x124>
 818:	83 36       	cpi	r24, 0x63	; 99
 81a:	31 f0       	breq	.+12     	; 0x828 <vfprintf+0x11a>
 81c:	83 37       	cpi	r24, 0x73	; 115
 81e:	71 f0       	breq	.+28     	; 0x83c <vfprintf+0x12e>
 820:	83 35       	cpi	r24, 0x53	; 83
 822:	09 f0       	breq	.+2      	; 0x826 <vfprintf+0x118>
 824:	59 c0       	rjmp	.+178    	; 0x8d8 <vfprintf+0x1ca>
 826:	21 c0       	rjmp	.+66     	; 0x86a <vfprintf+0x15c>
 828:	f8 01       	movw	r30, r16
 82a:	80 81       	ld	r24, Z
 82c:	89 83       	std	Y+1, r24	; 0x01
 82e:	0e 5f       	subi	r16, 0xFE	; 254
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	88 24       	eor	r8, r8
 834:	83 94       	inc	r8
 836:	91 2c       	mov	r9, r1
 838:	53 01       	movw	r10, r6
 83a:	13 c0       	rjmp	.+38     	; 0x862 <vfprintf+0x154>
 83c:	28 01       	movw	r4, r16
 83e:	f2 e0       	ldi	r31, 0x02	; 2
 840:	4f 0e       	add	r4, r31
 842:	51 1c       	adc	r5, r1
 844:	f8 01       	movw	r30, r16
 846:	a0 80       	ld	r10, Z
 848:	b1 80       	ldd	r11, Z+1	; 0x01
 84a:	36 fe       	sbrs	r3, 6
 84c:	03 c0       	rjmp	.+6      	; 0x854 <vfprintf+0x146>
 84e:	69 2d       	mov	r22, r9
 850:	70 e0       	ldi	r23, 0x00	; 0
 852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x14a>
 854:	6f ef       	ldi	r22, 0xFF	; 255
 856:	7f ef       	ldi	r23, 0xFF	; 255
 858:	c5 01       	movw	r24, r10
 85a:	0e 94 73 05 	call	0xae6	; 0xae6 <strnlen>
 85e:	4c 01       	movw	r8, r24
 860:	82 01       	movw	r16, r4
 862:	f3 2d       	mov	r31, r3
 864:	ff 77       	andi	r31, 0x7F	; 127
 866:	3f 2e       	mov	r3, r31
 868:	16 c0       	rjmp	.+44     	; 0x896 <vfprintf+0x188>
 86a:	28 01       	movw	r4, r16
 86c:	22 e0       	ldi	r18, 0x02	; 2
 86e:	42 0e       	add	r4, r18
 870:	51 1c       	adc	r5, r1
 872:	f8 01       	movw	r30, r16
 874:	a0 80       	ld	r10, Z
 876:	b1 80       	ldd	r11, Z+1	; 0x01
 878:	36 fe       	sbrs	r3, 6
 87a:	03 c0       	rjmp	.+6      	; 0x882 <vfprintf+0x174>
 87c:	69 2d       	mov	r22, r9
 87e:	70 e0       	ldi	r23, 0x00	; 0
 880:	02 c0       	rjmp	.+4      	; 0x886 <vfprintf+0x178>
 882:	6f ef       	ldi	r22, 0xFF	; 255
 884:	7f ef       	ldi	r23, 0xFF	; 255
 886:	c5 01       	movw	r24, r10
 888:	0e 94 68 05 	call	0xad0	; 0xad0 <strnlen_P>
 88c:	4c 01       	movw	r8, r24
 88e:	f3 2d       	mov	r31, r3
 890:	f0 68       	ori	r31, 0x80	; 128
 892:	3f 2e       	mov	r3, r31
 894:	82 01       	movw	r16, r4
 896:	33 fc       	sbrc	r3, 3
 898:	1b c0       	rjmp	.+54     	; 0x8d0 <vfprintf+0x1c2>
 89a:	82 2d       	mov	r24, r2
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	88 16       	cp	r8, r24
 8a0:	99 06       	cpc	r9, r25
 8a2:	b0 f4       	brcc	.+44     	; 0x8d0 <vfprintf+0x1c2>
 8a4:	b6 01       	movw	r22, r12
 8a6:	80 e2       	ldi	r24, 0x20	; 32
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 8ae:	2a 94       	dec	r2
 8b0:	f4 cf       	rjmp	.-24     	; 0x89a <vfprintf+0x18c>
 8b2:	f5 01       	movw	r30, r10
 8b4:	37 fc       	sbrc	r3, 7
 8b6:	85 91       	lpm	r24, Z+
 8b8:	37 fe       	sbrs	r3, 7
 8ba:	81 91       	ld	r24, Z+
 8bc:	5f 01       	movw	r10, r30
 8be:	b6 01       	movw	r22, r12
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 8c6:	21 10       	cpse	r2, r1
 8c8:	2a 94       	dec	r2
 8ca:	21 e0       	ldi	r18, 0x01	; 1
 8cc:	82 1a       	sub	r8, r18
 8ce:	91 08       	sbc	r9, r1
 8d0:	81 14       	cp	r8, r1
 8d2:	91 04       	cpc	r9, r1
 8d4:	71 f7       	brne	.-36     	; 0x8b2 <vfprintf+0x1a4>
 8d6:	e8 c0       	rjmp	.+464    	; 0xaa8 <__stack+0x1a9>
 8d8:	84 36       	cpi	r24, 0x64	; 100
 8da:	11 f0       	breq	.+4      	; 0x8e0 <vfprintf+0x1d2>
 8dc:	89 36       	cpi	r24, 0x69	; 105
 8de:	41 f5       	brne	.+80     	; 0x930 <__stack+0x31>
 8e0:	f8 01       	movw	r30, r16
 8e2:	37 fe       	sbrs	r3, 7
 8e4:	07 c0       	rjmp	.+14     	; 0x8f4 <vfprintf+0x1e6>
 8e6:	60 81       	ld	r22, Z
 8e8:	71 81       	ldd	r23, Z+1	; 0x01
 8ea:	82 81       	ldd	r24, Z+2	; 0x02
 8ec:	93 81       	ldd	r25, Z+3	; 0x03
 8ee:	0c 5f       	subi	r16, 0xFC	; 252
 8f0:	1f 4f       	sbci	r17, 0xFF	; 255
 8f2:	08 c0       	rjmp	.+16     	; 0x904 <__stack+0x5>
 8f4:	60 81       	ld	r22, Z
 8f6:	71 81       	ldd	r23, Z+1	; 0x01
 8f8:	07 2e       	mov	r0, r23
 8fa:	00 0c       	add	r0, r0
 8fc:	88 0b       	sbc	r24, r24
 8fe:	99 0b       	sbc	r25, r25
 900:	0e 5f       	subi	r16, 0xFE	; 254
 902:	1f 4f       	sbci	r17, 0xFF	; 255
 904:	f3 2d       	mov	r31, r3
 906:	ff 76       	andi	r31, 0x6F	; 111
 908:	3f 2e       	mov	r3, r31
 90a:	97 ff       	sbrs	r25, 7
 90c:	09 c0       	rjmp	.+18     	; 0x920 <__stack+0x21>
 90e:	90 95       	com	r25
 910:	80 95       	com	r24
 912:	70 95       	com	r23
 914:	61 95       	neg	r22
 916:	7f 4f       	sbci	r23, 0xFF	; 255
 918:	8f 4f       	sbci	r24, 0xFF	; 255
 91a:	9f 4f       	sbci	r25, 0xFF	; 255
 91c:	f0 68       	ori	r31, 0x80	; 128
 91e:	3f 2e       	mov	r3, r31
 920:	2a e0       	ldi	r18, 0x0A	; 10
 922:	30 e0       	ldi	r19, 0x00	; 0
 924:	a3 01       	movw	r20, r6
 926:	0e 94 ba 05 	call	0xb74	; 0xb74 <__ultoa_invert>
 92a:	88 2e       	mov	r8, r24
 92c:	86 18       	sub	r8, r6
 92e:	45 c0       	rjmp	.+138    	; 0x9ba <__stack+0xbb>
 930:	85 37       	cpi	r24, 0x75	; 117
 932:	31 f4       	brne	.+12     	; 0x940 <__stack+0x41>
 934:	23 2d       	mov	r18, r3
 936:	2f 7e       	andi	r18, 0xEF	; 239
 938:	b2 2e       	mov	r11, r18
 93a:	2a e0       	ldi	r18, 0x0A	; 10
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	25 c0       	rjmp	.+74     	; 0x98a <__stack+0x8b>
 940:	93 2d       	mov	r25, r3
 942:	99 7f       	andi	r25, 0xF9	; 249
 944:	b9 2e       	mov	r11, r25
 946:	8f 36       	cpi	r24, 0x6F	; 111
 948:	c1 f0       	breq	.+48     	; 0x97a <__stack+0x7b>
 94a:	18 f4       	brcc	.+6      	; 0x952 <__stack+0x53>
 94c:	88 35       	cpi	r24, 0x58	; 88
 94e:	79 f0       	breq	.+30     	; 0x96e <__stack+0x6f>
 950:	b5 c0       	rjmp	.+362    	; 0xabc <__stack+0x1bd>
 952:	80 37       	cpi	r24, 0x70	; 112
 954:	19 f0       	breq	.+6      	; 0x95c <__stack+0x5d>
 956:	88 37       	cpi	r24, 0x78	; 120
 958:	21 f0       	breq	.+8      	; 0x962 <__stack+0x63>
 95a:	b0 c0       	rjmp	.+352    	; 0xabc <__stack+0x1bd>
 95c:	e9 2f       	mov	r30, r25
 95e:	e0 61       	ori	r30, 0x10	; 16
 960:	be 2e       	mov	r11, r30
 962:	b4 fe       	sbrs	r11, 4
 964:	0d c0       	rjmp	.+26     	; 0x980 <__stack+0x81>
 966:	fb 2d       	mov	r31, r11
 968:	f4 60       	ori	r31, 0x04	; 4
 96a:	bf 2e       	mov	r11, r31
 96c:	09 c0       	rjmp	.+18     	; 0x980 <__stack+0x81>
 96e:	34 fe       	sbrs	r3, 4
 970:	0a c0       	rjmp	.+20     	; 0x986 <__stack+0x87>
 972:	29 2f       	mov	r18, r25
 974:	26 60       	ori	r18, 0x06	; 6
 976:	b2 2e       	mov	r11, r18
 978:	06 c0       	rjmp	.+12     	; 0x986 <__stack+0x87>
 97a:	28 e0       	ldi	r18, 0x08	; 8
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	05 c0       	rjmp	.+10     	; 0x98a <__stack+0x8b>
 980:	20 e1       	ldi	r18, 0x10	; 16
 982:	30 e0       	ldi	r19, 0x00	; 0
 984:	02 c0       	rjmp	.+4      	; 0x98a <__stack+0x8b>
 986:	20 e1       	ldi	r18, 0x10	; 16
 988:	32 e0       	ldi	r19, 0x02	; 2
 98a:	f8 01       	movw	r30, r16
 98c:	b7 fe       	sbrs	r11, 7
 98e:	07 c0       	rjmp	.+14     	; 0x99e <__stack+0x9f>
 990:	60 81       	ld	r22, Z
 992:	71 81       	ldd	r23, Z+1	; 0x01
 994:	82 81       	ldd	r24, Z+2	; 0x02
 996:	93 81       	ldd	r25, Z+3	; 0x03
 998:	0c 5f       	subi	r16, 0xFC	; 252
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	06 c0       	rjmp	.+12     	; 0x9aa <__stack+0xab>
 99e:	60 81       	ld	r22, Z
 9a0:	71 81       	ldd	r23, Z+1	; 0x01
 9a2:	80 e0       	ldi	r24, 0x00	; 0
 9a4:	90 e0       	ldi	r25, 0x00	; 0
 9a6:	0e 5f       	subi	r16, 0xFE	; 254
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	a3 01       	movw	r20, r6
 9ac:	0e 94 ba 05 	call	0xb74	; 0xb74 <__ultoa_invert>
 9b0:	88 2e       	mov	r8, r24
 9b2:	86 18       	sub	r8, r6
 9b4:	fb 2d       	mov	r31, r11
 9b6:	ff 77       	andi	r31, 0x7F	; 127
 9b8:	3f 2e       	mov	r3, r31
 9ba:	36 fe       	sbrs	r3, 6
 9bc:	0d c0       	rjmp	.+26     	; 0x9d8 <__stack+0xd9>
 9be:	23 2d       	mov	r18, r3
 9c0:	2e 7f       	andi	r18, 0xFE	; 254
 9c2:	a2 2e       	mov	r10, r18
 9c4:	89 14       	cp	r8, r9
 9c6:	58 f4       	brcc	.+22     	; 0x9de <__stack+0xdf>
 9c8:	34 fe       	sbrs	r3, 4
 9ca:	0b c0       	rjmp	.+22     	; 0x9e2 <__stack+0xe3>
 9cc:	32 fc       	sbrc	r3, 2
 9ce:	09 c0       	rjmp	.+18     	; 0x9e2 <__stack+0xe3>
 9d0:	83 2d       	mov	r24, r3
 9d2:	8e 7e       	andi	r24, 0xEE	; 238
 9d4:	a8 2e       	mov	r10, r24
 9d6:	05 c0       	rjmp	.+10     	; 0x9e2 <__stack+0xe3>
 9d8:	b8 2c       	mov	r11, r8
 9da:	a3 2c       	mov	r10, r3
 9dc:	03 c0       	rjmp	.+6      	; 0x9e4 <__stack+0xe5>
 9de:	b8 2c       	mov	r11, r8
 9e0:	01 c0       	rjmp	.+2      	; 0x9e4 <__stack+0xe5>
 9e2:	b9 2c       	mov	r11, r9
 9e4:	a4 fe       	sbrs	r10, 4
 9e6:	0f c0       	rjmp	.+30     	; 0xa06 <__stack+0x107>
 9e8:	fe 01       	movw	r30, r28
 9ea:	e8 0d       	add	r30, r8
 9ec:	f1 1d       	adc	r31, r1
 9ee:	80 81       	ld	r24, Z
 9f0:	80 33       	cpi	r24, 0x30	; 48
 9f2:	21 f4       	brne	.+8      	; 0x9fc <__stack+0xfd>
 9f4:	9a 2d       	mov	r25, r10
 9f6:	99 7e       	andi	r25, 0xE9	; 233
 9f8:	a9 2e       	mov	r10, r25
 9fa:	09 c0       	rjmp	.+18     	; 0xa0e <__stack+0x10f>
 9fc:	a2 fe       	sbrs	r10, 2
 9fe:	06 c0       	rjmp	.+12     	; 0xa0c <__stack+0x10d>
 a00:	b3 94       	inc	r11
 a02:	b3 94       	inc	r11
 a04:	04 c0       	rjmp	.+8      	; 0xa0e <__stack+0x10f>
 a06:	8a 2d       	mov	r24, r10
 a08:	86 78       	andi	r24, 0x86	; 134
 a0a:	09 f0       	breq	.+2      	; 0xa0e <__stack+0x10f>
 a0c:	b3 94       	inc	r11
 a0e:	a3 fc       	sbrc	r10, 3
 a10:	11 c0       	rjmp	.+34     	; 0xa34 <__stack+0x135>
 a12:	a0 fe       	sbrs	r10, 0
 a14:	06 c0       	rjmp	.+12     	; 0xa22 <__stack+0x123>
 a16:	b2 14       	cp	r11, r2
 a18:	88 f4       	brcc	.+34     	; 0xa3c <__stack+0x13d>
 a1a:	28 0c       	add	r2, r8
 a1c:	92 2c       	mov	r9, r2
 a1e:	9b 18       	sub	r9, r11
 a20:	0e c0       	rjmp	.+28     	; 0xa3e <__stack+0x13f>
 a22:	b2 14       	cp	r11, r2
 a24:	60 f4       	brcc	.+24     	; 0xa3e <__stack+0x13f>
 a26:	b6 01       	movw	r22, r12
 a28:	80 e2       	ldi	r24, 0x20	; 32
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 a30:	b3 94       	inc	r11
 a32:	f7 cf       	rjmp	.-18     	; 0xa22 <__stack+0x123>
 a34:	b2 14       	cp	r11, r2
 a36:	18 f4       	brcc	.+6      	; 0xa3e <__stack+0x13f>
 a38:	2b 18       	sub	r2, r11
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <__stack+0x141>
 a3c:	98 2c       	mov	r9, r8
 a3e:	21 2c       	mov	r2, r1
 a40:	a4 fe       	sbrs	r10, 4
 a42:	10 c0       	rjmp	.+32     	; 0xa64 <__stack+0x165>
 a44:	b6 01       	movw	r22, r12
 a46:	80 e3       	ldi	r24, 0x30	; 48
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 a4e:	a2 fe       	sbrs	r10, 2
 a50:	17 c0       	rjmp	.+46     	; 0xa80 <__stack+0x181>
 a52:	a1 fc       	sbrc	r10, 1
 a54:	03 c0       	rjmp	.+6      	; 0xa5c <__stack+0x15d>
 a56:	88 e7       	ldi	r24, 0x78	; 120
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <__stack+0x161>
 a5c:	88 e5       	ldi	r24, 0x58	; 88
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	b6 01       	movw	r22, r12
 a62:	0c c0       	rjmp	.+24     	; 0xa7c <__stack+0x17d>
 a64:	8a 2d       	mov	r24, r10
 a66:	86 78       	andi	r24, 0x86	; 134
 a68:	59 f0       	breq	.+22     	; 0xa80 <__stack+0x181>
 a6a:	a1 fe       	sbrs	r10, 1
 a6c:	02 c0       	rjmp	.+4      	; 0xa72 <__stack+0x173>
 a6e:	8b e2       	ldi	r24, 0x2B	; 43
 a70:	01 c0       	rjmp	.+2      	; 0xa74 <__stack+0x175>
 a72:	80 e2       	ldi	r24, 0x20	; 32
 a74:	a7 fc       	sbrc	r10, 7
 a76:	8d e2       	ldi	r24, 0x2D	; 45
 a78:	b6 01       	movw	r22, r12
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 a80:	89 14       	cp	r8, r9
 a82:	38 f4       	brcc	.+14     	; 0xa92 <__stack+0x193>
 a84:	b6 01       	movw	r22, r12
 a86:	80 e3       	ldi	r24, 0x30	; 48
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 a8e:	9a 94       	dec	r9
 a90:	f7 cf       	rjmp	.-18     	; 0xa80 <__stack+0x181>
 a92:	8a 94       	dec	r8
 a94:	f3 01       	movw	r30, r6
 a96:	e8 0d       	add	r30, r8
 a98:	f1 1d       	adc	r31, r1
 a9a:	80 81       	ld	r24, Z
 a9c:	b6 01       	movw	r22, r12
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 aa4:	81 10       	cpse	r8, r1
 aa6:	f5 cf       	rjmp	.-22     	; 0xa92 <__stack+0x193>
 aa8:	22 20       	and	r2, r2
 aaa:	09 f4       	brne	.+2      	; 0xaae <__stack+0x1af>
 aac:	42 ce       	rjmp	.-892    	; 0x732 <vfprintf+0x24>
 aae:	b6 01       	movw	r22, r12
 ab0:	80 e2       	ldi	r24, 0x20	; 32
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 7e 05 	call	0xafc	; 0xafc <fputc>
 ab8:	2a 94       	dec	r2
 aba:	f6 cf       	rjmp	.-20     	; 0xaa8 <__stack+0x1a9>
 abc:	f6 01       	movw	r30, r12
 abe:	86 81       	ldd	r24, Z+6	; 0x06
 ac0:	97 81       	ldd	r25, Z+7	; 0x07
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <__stack+0x1c9>
 ac4:	8f ef       	ldi	r24, 0xFF	; 255
 ac6:	9f ef       	ldi	r25, 0xFF	; 255
 ac8:	2b 96       	adiw	r28, 0x0b	; 11
 aca:	e2 e1       	ldi	r30, 0x12	; 18
 acc:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__epilogue_restores__>

00000ad0 <strnlen_P>:
 ad0:	fc 01       	movw	r30, r24
 ad2:	05 90       	lpm	r0, Z+
 ad4:	61 50       	subi	r22, 0x01	; 1
 ad6:	70 40       	sbci	r23, 0x00	; 0
 ad8:	01 10       	cpse	r0, r1
 ada:	d8 f7       	brcc	.-10     	; 0xad2 <strnlen_P+0x2>
 adc:	80 95       	com	r24
 ade:	90 95       	com	r25
 ae0:	8e 0f       	add	r24, r30
 ae2:	9f 1f       	adc	r25, r31
 ae4:	08 95       	ret

00000ae6 <strnlen>:
 ae6:	fc 01       	movw	r30, r24
 ae8:	61 50       	subi	r22, 0x01	; 1
 aea:	70 40       	sbci	r23, 0x00	; 0
 aec:	01 90       	ld	r0, Z+
 aee:	01 10       	cpse	r0, r1
 af0:	d8 f7       	brcc	.-10     	; 0xae8 <strnlen+0x2>
 af2:	80 95       	com	r24
 af4:	90 95       	com	r25
 af6:	8e 0f       	add	r24, r30
 af8:	9f 1f       	adc	r25, r31
 afa:	08 95       	ret

00000afc <fputc>:
 afc:	0f 93       	push	r16
 afe:	1f 93       	push	r17
 b00:	cf 93       	push	r28
 b02:	df 93       	push	r29
 b04:	fb 01       	movw	r30, r22
 b06:	23 81       	ldd	r18, Z+3	; 0x03
 b08:	21 fd       	sbrc	r18, 1
 b0a:	03 c0       	rjmp	.+6      	; 0xb12 <fputc+0x16>
 b0c:	8f ef       	ldi	r24, 0xFF	; 255
 b0e:	9f ef       	ldi	r25, 0xFF	; 255
 b10:	2c c0       	rjmp	.+88     	; 0xb6a <fputc+0x6e>
 b12:	22 ff       	sbrs	r18, 2
 b14:	16 c0       	rjmp	.+44     	; 0xb42 <fputc+0x46>
 b16:	46 81       	ldd	r20, Z+6	; 0x06
 b18:	57 81       	ldd	r21, Z+7	; 0x07
 b1a:	24 81       	ldd	r18, Z+4	; 0x04
 b1c:	35 81       	ldd	r19, Z+5	; 0x05
 b1e:	42 17       	cp	r20, r18
 b20:	53 07       	cpc	r21, r19
 b22:	44 f4       	brge	.+16     	; 0xb34 <fputc+0x38>
 b24:	a0 81       	ld	r26, Z
 b26:	b1 81       	ldd	r27, Z+1	; 0x01
 b28:	9d 01       	movw	r18, r26
 b2a:	2f 5f       	subi	r18, 0xFF	; 255
 b2c:	3f 4f       	sbci	r19, 0xFF	; 255
 b2e:	31 83       	std	Z+1, r19	; 0x01
 b30:	20 83       	st	Z, r18
 b32:	8c 93       	st	X, r24
 b34:	26 81       	ldd	r18, Z+6	; 0x06
 b36:	37 81       	ldd	r19, Z+7	; 0x07
 b38:	2f 5f       	subi	r18, 0xFF	; 255
 b3a:	3f 4f       	sbci	r19, 0xFF	; 255
 b3c:	37 83       	std	Z+7, r19	; 0x07
 b3e:	26 83       	std	Z+6, r18	; 0x06
 b40:	14 c0       	rjmp	.+40     	; 0xb6a <fputc+0x6e>
 b42:	8b 01       	movw	r16, r22
 b44:	ec 01       	movw	r28, r24
 b46:	fb 01       	movw	r30, r22
 b48:	00 84       	ldd	r0, Z+8	; 0x08
 b4a:	f1 85       	ldd	r31, Z+9	; 0x09
 b4c:	e0 2d       	mov	r30, r0
 b4e:	09 95       	icall
 b50:	89 2b       	or	r24, r25
 b52:	e1 f6       	brne	.-72     	; 0xb0c <fputc+0x10>
 b54:	d8 01       	movw	r26, r16
 b56:	16 96       	adiw	r26, 0x06	; 6
 b58:	8d 91       	ld	r24, X+
 b5a:	9c 91       	ld	r25, X
 b5c:	17 97       	sbiw	r26, 0x07	; 7
 b5e:	01 96       	adiw	r24, 0x01	; 1
 b60:	17 96       	adiw	r26, 0x07	; 7
 b62:	9c 93       	st	X, r25
 b64:	8e 93       	st	-X, r24
 b66:	16 97       	sbiw	r26, 0x06	; 6
 b68:	ce 01       	movw	r24, r28
 b6a:	df 91       	pop	r29
 b6c:	cf 91       	pop	r28
 b6e:	1f 91       	pop	r17
 b70:	0f 91       	pop	r16
 b72:	08 95       	ret

00000b74 <__ultoa_invert>:
 b74:	fa 01       	movw	r30, r20
 b76:	aa 27       	eor	r26, r26
 b78:	28 30       	cpi	r18, 0x08	; 8
 b7a:	51 f1       	breq	.+84     	; 0xbd0 <__ultoa_invert+0x5c>
 b7c:	20 31       	cpi	r18, 0x10	; 16
 b7e:	81 f1       	breq	.+96     	; 0xbe0 <__ultoa_invert+0x6c>
 b80:	e8 94       	clt
 b82:	6f 93       	push	r22
 b84:	6e 7f       	andi	r22, 0xFE	; 254
 b86:	6e 5f       	subi	r22, 0xFE	; 254
 b88:	7f 4f       	sbci	r23, 0xFF	; 255
 b8a:	8f 4f       	sbci	r24, 0xFF	; 255
 b8c:	9f 4f       	sbci	r25, 0xFF	; 255
 b8e:	af 4f       	sbci	r26, 0xFF	; 255
 b90:	b1 e0       	ldi	r27, 0x01	; 1
 b92:	3e d0       	rcall	.+124    	; 0xc10 <__ultoa_invert+0x9c>
 b94:	b4 e0       	ldi	r27, 0x04	; 4
 b96:	3c d0       	rcall	.+120    	; 0xc10 <__ultoa_invert+0x9c>
 b98:	67 0f       	add	r22, r23
 b9a:	78 1f       	adc	r23, r24
 b9c:	89 1f       	adc	r24, r25
 b9e:	9a 1f       	adc	r25, r26
 ba0:	a1 1d       	adc	r26, r1
 ba2:	68 0f       	add	r22, r24
 ba4:	79 1f       	adc	r23, r25
 ba6:	8a 1f       	adc	r24, r26
 ba8:	91 1d       	adc	r25, r1
 baa:	a1 1d       	adc	r26, r1
 bac:	6a 0f       	add	r22, r26
 bae:	71 1d       	adc	r23, r1
 bb0:	81 1d       	adc	r24, r1
 bb2:	91 1d       	adc	r25, r1
 bb4:	a1 1d       	adc	r26, r1
 bb6:	20 d0       	rcall	.+64     	; 0xbf8 <__ultoa_invert+0x84>
 bb8:	09 f4       	brne	.+2      	; 0xbbc <__ultoa_invert+0x48>
 bba:	68 94       	set
 bbc:	3f 91       	pop	r19
 bbe:	2a e0       	ldi	r18, 0x0A	; 10
 bc0:	26 9f       	mul	r18, r22
 bc2:	11 24       	eor	r1, r1
 bc4:	30 19       	sub	r19, r0
 bc6:	30 5d       	subi	r19, 0xD0	; 208
 bc8:	31 93       	st	Z+, r19
 bca:	de f6       	brtc	.-74     	; 0xb82 <__ultoa_invert+0xe>
 bcc:	cf 01       	movw	r24, r30
 bce:	08 95       	ret
 bd0:	46 2f       	mov	r20, r22
 bd2:	47 70       	andi	r20, 0x07	; 7
 bd4:	40 5d       	subi	r20, 0xD0	; 208
 bd6:	41 93       	st	Z+, r20
 bd8:	b3 e0       	ldi	r27, 0x03	; 3
 bda:	0f d0       	rcall	.+30     	; 0xbfa <__ultoa_invert+0x86>
 bdc:	c9 f7       	brne	.-14     	; 0xbd0 <__ultoa_invert+0x5c>
 bde:	f6 cf       	rjmp	.-20     	; 0xbcc <__ultoa_invert+0x58>
 be0:	46 2f       	mov	r20, r22
 be2:	4f 70       	andi	r20, 0x0F	; 15
 be4:	40 5d       	subi	r20, 0xD0	; 208
 be6:	4a 33       	cpi	r20, 0x3A	; 58
 be8:	18 f0       	brcs	.+6      	; 0xbf0 <__ultoa_invert+0x7c>
 bea:	49 5d       	subi	r20, 0xD9	; 217
 bec:	31 fd       	sbrc	r19, 1
 bee:	40 52       	subi	r20, 0x20	; 32
 bf0:	41 93       	st	Z+, r20
 bf2:	02 d0       	rcall	.+4      	; 0xbf8 <__ultoa_invert+0x84>
 bf4:	a9 f7       	brne	.-22     	; 0xbe0 <__ultoa_invert+0x6c>
 bf6:	ea cf       	rjmp	.-44     	; 0xbcc <__ultoa_invert+0x58>
 bf8:	b4 e0       	ldi	r27, 0x04	; 4
 bfa:	a6 95       	lsr	r26
 bfc:	97 95       	ror	r25
 bfe:	87 95       	ror	r24
 c00:	77 95       	ror	r23
 c02:	67 95       	ror	r22
 c04:	ba 95       	dec	r27
 c06:	c9 f7       	brne	.-14     	; 0xbfa <__ultoa_invert+0x86>
 c08:	00 97       	sbiw	r24, 0x00	; 0
 c0a:	61 05       	cpc	r22, r1
 c0c:	71 05       	cpc	r23, r1
 c0e:	08 95       	ret
 c10:	9b 01       	movw	r18, r22
 c12:	ac 01       	movw	r20, r24
 c14:	0a 2e       	mov	r0, r26
 c16:	06 94       	lsr	r0
 c18:	57 95       	ror	r21
 c1a:	47 95       	ror	r20
 c1c:	37 95       	ror	r19
 c1e:	27 95       	ror	r18
 c20:	ba 95       	dec	r27
 c22:	c9 f7       	brne	.-14     	; 0xc16 <__ultoa_invert+0xa2>
 c24:	62 0f       	add	r22, r18
 c26:	73 1f       	adc	r23, r19
 c28:	84 1f       	adc	r24, r20
 c2a:	95 1f       	adc	r25, r21
 c2c:	a0 1d       	adc	r26, r0
 c2e:	08 95       	ret

00000c30 <__prologue_saves__>:
 c30:	2f 92       	push	r2
 c32:	3f 92       	push	r3
 c34:	4f 92       	push	r4
 c36:	5f 92       	push	r5
 c38:	6f 92       	push	r6
 c3a:	7f 92       	push	r7
 c3c:	8f 92       	push	r8
 c3e:	9f 92       	push	r9
 c40:	af 92       	push	r10
 c42:	bf 92       	push	r11
 c44:	cf 92       	push	r12
 c46:	df 92       	push	r13
 c48:	ef 92       	push	r14
 c4a:	ff 92       	push	r15
 c4c:	0f 93       	push	r16
 c4e:	1f 93       	push	r17
 c50:	cf 93       	push	r28
 c52:	df 93       	push	r29
 c54:	cd b7       	in	r28, 0x3d	; 61
 c56:	de b7       	in	r29, 0x3e	; 62
 c58:	ca 1b       	sub	r28, r26
 c5a:	db 0b       	sbc	r29, r27
 c5c:	0f b6       	in	r0, 0x3f	; 63
 c5e:	f8 94       	cli
 c60:	de bf       	out	0x3e, r29	; 62
 c62:	0f be       	out	0x3f, r0	; 63
 c64:	cd bf       	out	0x3d, r28	; 61
 c66:	09 94       	ijmp

00000c68 <__epilogue_restores__>:
 c68:	2a 88       	ldd	r2, Y+18	; 0x12
 c6a:	39 88       	ldd	r3, Y+17	; 0x11
 c6c:	48 88       	ldd	r4, Y+16	; 0x10
 c6e:	5f 84       	ldd	r5, Y+15	; 0x0f
 c70:	6e 84       	ldd	r6, Y+14	; 0x0e
 c72:	7d 84       	ldd	r7, Y+13	; 0x0d
 c74:	8c 84       	ldd	r8, Y+12	; 0x0c
 c76:	9b 84       	ldd	r9, Y+11	; 0x0b
 c78:	aa 84       	ldd	r10, Y+10	; 0x0a
 c7a:	b9 84       	ldd	r11, Y+9	; 0x09
 c7c:	c8 84       	ldd	r12, Y+8	; 0x08
 c7e:	df 80       	ldd	r13, Y+7	; 0x07
 c80:	ee 80       	ldd	r14, Y+6	; 0x06
 c82:	fd 80       	ldd	r15, Y+5	; 0x05
 c84:	0c 81       	ldd	r16, Y+4	; 0x04
 c86:	1b 81       	ldd	r17, Y+3	; 0x03
 c88:	aa 81       	ldd	r26, Y+2	; 0x02
 c8a:	b9 81       	ldd	r27, Y+1	; 0x01
 c8c:	ce 0f       	add	r28, r30
 c8e:	d1 1d       	adc	r29, r1
 c90:	0f b6       	in	r0, 0x3f	; 63
 c92:	f8 94       	cli
 c94:	de bf       	out	0x3e, r29	; 62
 c96:	0f be       	out	0x3f, r0	; 63
 c98:	cd bf       	out	0x3d, r28	; 61
 c9a:	ed 01       	movw	r28, r26
 c9c:	08 95       	ret

00000c9e <_exit>:
 c9e:	f8 94       	cli

00000ca0 <__stop_program>:
 ca0:	ff cf       	rjmp	.-2      	; 0xca0 <__stop_program>
