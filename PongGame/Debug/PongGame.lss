
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000045c  00800100  00001b6a  00001bfe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  0080055c  0080055c  0000205a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000205a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000020b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000020f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001df8  00000000  00000000  00002228  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae7  00000000  00000000  00004020  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c11  00000000  00000000  00004b07  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000580  00000000  00000000  00005718  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068e  00000000  00000000  00005c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001dfe  00000000  00000000  00006326  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00008124  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 02 	jmp	0x564	; 0x564 <__ctors_end>
       4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       8:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      10:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      14:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      18:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      1c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      20:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      24:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      28:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      2c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      30:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      34:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      38:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      3c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      40:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      44:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      48:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      4c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      50:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      54:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      58:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      5c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      60:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      64:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 7c       	andi	r16, 0xC0	; 192
      6e:	da f2       	brmi	.-74     	; 0x26 <__FUSE_REGION_LENGTH__+0x23>
      70:	da 7c       	andi	r29, 0xCA	; 202
      72:	7c d6       	rcall	.+3320   	; 0xd6c <newpos+0x68>
      74:	f2 d6       	rcall	.+3556   	; 0xe5a <twoplayers_move+0x68>
      76:	7c 38       	cpi	r23, 0x8C	; 140
      78:	7c 3e       	cpi	r23, 0xEC	; 236
      7a:	7c 38       	cpi	r23, 0x8C	; 140
      7c:	18 3c       	cpi	r17, 0xC8	; 200
      7e:	7e 3c       	cpi	r23, 0xCE	; 206
      80:	18 38       	cpi	r17, 0x88	; 136
      82:	ea be       	out	0x3a, r14	; 58
      84:	ea 38       	cpi	r30, 0x8A	; 138
      86:	38 7a       	andi	r19, 0xA8	; 168
      88:	fe 7a       	andi	r31, 0xAE	; 174
      8a:	38 00       	.word	0x0038	; ????
      8c:	18 3c       	cpi	r17, 0xC8	; 200
      8e:	18 00       	.word	0x0018	; ????
      90:	ff e7       	ldi	r31, 0x7F	; 127
      92:	c3 e7       	ldi	r28, 0x73	; 115
      94:	ff 00       	.word	0x00ff	; ????
      96:	18 24       	eor	r1, r8
      98:	18 00       	.word	0x0018	; ????
      9a:	ff e7       	ldi	r31, 0x7F	; 127
      9c:	db e7       	ldi	r29, 0x7B	; 123
      9e:	ff 0c       	add	r15, r15
      a0:	12 5c       	subi	r17, 0xC2	; 194
      a2:	60 70       	andi	r22, 0x00	; 0
      a4:	64 94       	.word	0x9464	; ????
      a6:	9e 94 64 02 	call	0x2404c8	; 0x2404c8 <__TEXT_REGION_LENGTH__+0x2204c8>
      aa:	fe a0       	ldd	r15, Y+38	; 0x26
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	02 fe       	sbrs	r0, 2
      b0:	a0 a4       	ldd	r10, Z+40	; 0x28
      b2:	fc 5a       	subi	r31, 0xAC	; 172
      b4:	3c e7       	ldi	r19, 0x7C	; 124
      b6:	3c 5a       	subi	r19, 0xAC	; 172
      b8:	fe 7c       	andi	r31, 0xCE	; 206
      ba:	38 38       	cpi	r19, 0x88	; 136
      bc:	10 10       	cpse	r1, r0
      be:	38 38       	cpi	r19, 0x88	; 136
      c0:	7c fe       	.word	0xfe7c	; ????
      c2:	28 44       	sbci	r18, 0x48	; 72
      c4:	fe 44       	sbci	r31, 0x4E	; 78
      c6:	28 fa       	.word	0xfa28	; ????
      c8:	fa 00       	.word	0x00fa	; ????
      ca:	fa fa       	.word	0xfafa	; ????
      cc:	60 90 fe 80 	lds	r6, 0x80FE	; 0x8080fe <__bss_end+0x7b78>
      d0:	fe 00       	.word	0x00fe	; ????
      d2:	66 91       	elpm	r22, Z
      d4:	a9 56       	subi	r26, 0x69	; 105
      d6:	06 06       	cpc	r0, r22
      d8:	06 06       	cpc	r0, r22
      da:	06 29       	or	r16, r6
      dc:	45 ff       	sbrs	r20, 5
      de:	45 29       	or	r20, r5
      e0:	10 20       	and	r1, r0
      e2:	7e 20       	and	r7, r14
      e4:	10 08       	sbc	r1, r0
      e6:	04 7e       	andi	r16, 0xE4	; 228
      e8:	04 08       	sbc	r0, r4
      ea:	10 10       	cpse	r1, r0
      ec:	54 38       	cpi	r21, 0x84	; 132
      ee:	10 10       	cpse	r1, r0
      f0:	38 54       	subi	r19, 0x48	; 72
      f2:	10 10       	cpse	r1, r0
      f4:	78 08       	sbc	r7, r8
      f6:	08 08       	sbc	r0, r8
      f8:	08 30       	cpi	r16, 0x08	; 8
      fa:	78 30       	cpi	r23, 0x08	; 8
      fc:	78 30       	cpi	r23, 0x08	; 8
      fe:	0c 1c       	adc	r0, r12
     100:	7c 1c       	adc	r7, r12
     102:	0c 60       	ori	r16, 0x0C	; 12
     104:	70 7c       	andi	r23, 0xC0	; 192
     106:	70 60       	ori	r23, 0x00	; 0
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	00 fa       	bst	r0, 0
     110:	00 00       	nop
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	00 e0       	ldi	r16, 0x00	; 0
     116:	00 28       	or	r0, r0
     118:	fe 28       	or	r15, r14
     11a:	fe 28       	or	r15, r14
     11c:	24 54       	subi	r18, 0x44	; 68
     11e:	fe 54       	subi	r31, 0x4E	; 78
     120:	48 c4       	rjmp	.+2192   	; 0x9b2 <fillrect+0x5c>
     122:	c8 10       	cpse	r12, r8
     124:	26 46       	sbci	r18, 0x66	; 102
     126:	6c 92       	st	X, r6
     128:	6a 04       	cpc	r6, r10
     12a:	0a 00       	.word	0x000a	; ????
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	c0 00       	.word	0x00c0	; ????
     130:	00 38       	cpi	r16, 0x80	; 128
     132:	44 82       	std	Z+4, r4	; 0x04
     134:	00 00       	nop
     136:	82 44       	sbci	r24, 0x42	; 66
     138:	38 00       	.word	0x0038	; ????
     13a:	54 38       	cpi	r21, 0x84	; 132
     13c:	fe 38       	cpi	r31, 0x8E	; 142
     13e:	54 10       	cpse	r5, r4
     140:	10 7c       	andi	r17, 0xC0	; 192
     142:	10 10       	cpse	r1, r0
     144:	00 01       	movw	r0, r0
     146:	0e 0c       	add	r0, r14
     148:	00 10       	cpse	r0, r0
     14a:	10 10       	cpse	r1, r0
     14c:	10 10       	cpse	r1, r0
     14e:	00 00       	nop
     150:	06 06       	cpc	r0, r22
     152:	00 04       	cpc	r0, r0
     154:	08 10       	cpse	r0, r8
     156:	20 40       	sbci	r18, 0x00	; 0
     158:	7c 8a       	std	Y+20, r7	; 0x14
     15a:	92 a2       	std	Z+34, r9	; 0x22
     15c:	7c 00       	.word	0x007c	; ????
     15e:	42 fe       	sbrs	r4, 2
     160:	02 00       	.word	0x0002	; ????
     162:	4e 92       	st	-X, r4
     164:	92 92       	st	-Z, r9
     166:	62 84       	ldd	r6, Z+10	; 0x0a
     168:	82 92       	st	-Z, r8
     16a:	b2 cc       	rjmp	.-1692   	; 0xfffffad0 <__eeprom_end+0xff7efad0>
     16c:	18 28       	or	r1, r8
     16e:	48 fe       	.word	0xfe48	; ????
     170:	08 e4       	ldi	r16, 0x48	; 72
     172:	a2 a2       	std	Z+34, r10	; 0x22
     174:	a2 9c       	mul	r10, r2
     176:	3c 52       	subi	r19, 0x2C	; 44
     178:	92 92       	st	-Z, r9
     17a:	8c 82       	std	Y+4, r8	; 0x04
     17c:	84 88       	ldd	r8, Z+20	; 0x14
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	6c 92       	st	X, r6
     182:	92 92       	st	-Z, r9
     184:	6c 62       	ori	r22, 0x2C	; 44
     186:	92 92       	st	-Z, r9
     188:	94 78       	andi	r25, 0x84	; 132
     18a:	00 00       	nop
     18c:	28 00       	.word	0x0028	; ????
     18e:	00 00       	nop
     190:	02 2c       	mov	r0, r2
     192:	00 00       	nop
     194:	00 10       	cpse	r0, r0
     196:	28 44       	sbci	r18, 0x48	; 72
     198:	82 28       	or	r8, r2
     19a:	28 28       	or	r2, r8
     19c:	28 28       	or	r2, r8
     19e:	00 82       	st	Z, r0
     1a0:	44 28       	or	r4, r4
     1a2:	10 40       	sbci	r17, 0x00	; 0
     1a4:	80 9a       	sbi	0x10, 0	; 16
     1a6:	90 60       	ori	r25, 0x00	; 0
     1a8:	7c 82       	std	Y+4, r7	; 0x04
     1aa:	ba 9a       	sbi	0x17, 2	; 23
     1ac:	72 3e       	cpi	r23, 0xE2	; 226
     1ae:	48 88       	ldd	r4, Y+16	; 0x10
     1b0:	48 3e       	cpi	r20, 0xE8	; 232
     1b2:	fe 92       	st	-X, r15
     1b4:	92 92       	st	-Z, r9
     1b6:	6c 7c       	andi	r22, 0xCC	; 204
     1b8:	82 82       	std	Z+2, r8	; 0x02
     1ba:	82 44       	sbci	r24, 0x42	; 66
     1bc:	fe 82       	std	Y+6, r15	; 0x06
     1be:	82 82       	std	Z+2, r8	; 0x02
     1c0:	7c fe       	.word	0xfe7c	; ????
     1c2:	92 92       	st	-Z, r9
     1c4:	92 82       	std	Z+2, r9	; 0x02
     1c6:	fe 90       	ld	r15, -X
     1c8:	90 90 80 7c 	lds	r9, 0x7C80	; 0x807c80 <__bss_end+0x76fa>
     1cc:	82 82       	std	Z+2, r8	; 0x02
     1ce:	8a ce       	rjmp	.-748    	; 0xfffffee4 <__eeprom_end+0xff7efee4>
     1d0:	fe 10       	cpse	r15, r14
     1d2:	10 10       	cpse	r1, r0
     1d4:	fe 00       	.word	0x00fe	; ????
     1d6:	82 fe       	sbrs	r8, 2
     1d8:	82 00       	.word	0x0082	; ????
     1da:	04 02       	muls	r16, r20
     1dc:	82 fc       	sbrc	r8, 2
     1de:	80 fe       	sbrs	r8, 0
     1e0:	10 28       	or	r1, r0
     1e2:	44 82       	std	Z+4, r4	; 0x04
     1e4:	fe 02       	muls	r31, r30
     1e6:	02 02       	muls	r16, r18
     1e8:	02 fe       	sbrs	r0, 2
     1ea:	40 38       	cpi	r20, 0x80	; 128
     1ec:	40 fe       	sbrs	r4, 0
     1ee:	fe 20       	and	r15, r14
     1f0:	10 08       	sbc	r1, r0
     1f2:	fe 7c       	andi	r31, 0xCE	; 206
     1f4:	82 82       	std	Z+2, r8	; 0x02
     1f6:	82 7c       	andi	r24, 0xC2	; 194
     1f8:	fe 90       	ld	r15, -X
     1fa:	90 90 60 7c 	lds	r9, 0x7C60	; 0x807c60 <__bss_end+0x76da>
     1fe:	82 8a       	std	Z+18, r8	; 0x12
     200:	84 7a       	andi	r24, 0xA4	; 164
     202:	fe 90       	ld	r15, -X
     204:	98 94       	clz
     206:	62 64       	ori	r22, 0x42	; 66
     208:	92 92       	st	-Z, r9
     20a:	92 4c       	sbci	r25, 0xC2	; 194
     20c:	c0 80       	ld	r12, Z
     20e:	fe 80       	ldd	r15, Y+6	; 0x06
     210:	c0 fc       	sbrc	r12, 0
     212:	02 02       	muls	r16, r18
     214:	02 fc       	sbrc	r0, 2
     216:	f8 04       	cpc	r15, r8
     218:	02 04       	cpc	r0, r2
     21a:	f8 fc       	.word	0xfcf8	; ????
     21c:	02 1c       	adc	r0, r2
     21e:	02 fc       	sbrc	r0, 2
     220:	c6 28       	or	r12, r6
     222:	10 28       	or	r1, r0
     224:	c6 c0       	rjmp	.+396    	; 0x3b2 <__trampolines_end+0x34a>
     226:	20 1e       	adc	r2, r16
     228:	20 c0       	rjmp	.+64     	; 0x26a <__trampolines_end+0x202>
     22a:	86 9a       	sbi	0x10, 6	; 16
     22c:	92 b2       	in	r9, 0x12	; 18
     22e:	c2 00       	.word	0x00c2	; ????
     230:	fe 82       	std	Y+6, r15	; 0x06
     232:	82 82       	std	Z+2, r8	; 0x02
     234:	40 20       	and	r4, r0
     236:	10 08       	sbc	r1, r0
     238:	04 00       	.word	0x0004	; ????
     23a:	82 82       	std	Z+2, r8	; 0x02
     23c:	82 fe       	sbrs	r8, 2
     23e:	20 40       	sbci	r18, 0x00	; 0
     240:	80 40       	sbci	r24, 0x00	; 0
     242:	20 02       	muls	r18, r16
     244:	02 02       	muls	r16, r18
     246:	02 02       	muls	r16, r18
     248:	00 c0       	rjmp	.+0      	; 0x24a <__trampolines_end+0x1e2>
     24a:	e0 10       	cpse	r14, r0
     24c:	00 04       	cpc	r0, r0
     24e:	2a 2a       	or	r2, r26
     250:	1e 02       	muls	r17, r30
     252:	fe 14       	cp	r15, r14
     254:	22 22       	and	r2, r18
     256:	1c 1c       	adc	r1, r12
     258:	22 22       	and	r2, r18
     25a:	22 14       	cp	r2, r2
     25c:	1c 22       	and	r1, r28
     25e:	22 14       	cp	r2, r2
     260:	fe 1c       	adc	r15, r14
     262:	2a 2a       	or	r2, r26
     264:	2a 18       	sub	r2, r10
     266:	00 10       	cpse	r0, r0
     268:	7e 90       	ld	r7, -X
     26a:	40 18       	sub	r4, r0
     26c:	25 25       	eor	r18, r5
     26e:	39 1e       	adc	r3, r25
     270:	fe 10       	cpse	r15, r14
     272:	20 20       	and	r2, r0
     274:	1e 00       	.word	0x001e	; ????
     276:	22 be       	out	0x32, r2	; 50
     278:	02 00       	.word	0x0002	; ????
     27a:	04 02       	muls	r16, r20
     27c:	02 bc       	out	0x22, r0	; 34
     27e:	00 fe       	sbrs	r0, 0
     280:	08 14       	cp	r0, r8
     282:	22 00       	.word	0x0022	; ????
     284:	00 82       	st	Z, r0
     286:	fe 02       	muls	r31, r30
     288:	00 3e       	cpi	r16, 0xE0	; 224
     28a:	20 1e       	adc	r2, r16
     28c:	20 1e       	adc	r2, r16
     28e:	3e 10       	cpse	r3, r14
     290:	20 20       	and	r2, r0
     292:	1e 1c       	adc	r1, r14
     294:	22 22       	and	r2, r18
     296:	22 1c       	adc	r2, r2
     298:	3f 18       	sub	r3, r15
     29a:	24 24       	eor	r2, r4
     29c:	18 18       	sub	r1, r8
     29e:	24 24       	eor	r2, r4
     2a0:	18 3f       	cpi	r17, 0xF8	; 248
     2a2:	3e 10       	cpse	r3, r14
     2a4:	20 20       	and	r2, r0
     2a6:	10 12       	cpse	r1, r16
     2a8:	2a 2a       	or	r2, r26
     2aa:	2a 24       	eor	r2, r10
     2ac:	20 20       	and	r2, r0
     2ae:	fc 22       	and	r15, r28
     2b0:	24 3c       	cpi	r18, 0xC4	; 196
     2b2:	02 02       	muls	r16, r18
     2b4:	04 3e       	cpi	r16, 0xE4	; 228
     2b6:	38 04       	cpc	r3, r8
     2b8:	02 04       	cpc	r0, r2
     2ba:	38 3c       	cpi	r19, 0xC8	; 200
     2bc:	02 0c       	add	r0, r2
     2be:	02 3c       	cpi	r16, 0xC2	; 194
     2c0:	22 14       	cp	r2, r2
     2c2:	08 14       	cp	r0, r8
     2c4:	22 32       	cpi	r18, 0x22	; 34
     2c6:	09 09       	sbc	r16, r9
     2c8:	09 3e       	cpi	r16, 0xE9	; 233
     2ca:	22 26       	eor	r2, r18
     2cc:	2a 32       	cpi	r18, 0x2A	; 42
     2ce:	22 00       	.word	0x0022	; ????
     2d0:	10 6c       	ori	r17, 0xC0	; 192
     2d2:	82 00       	.word	0x0082	; ????
     2d4:	00 00       	nop
     2d6:	ee 00       	.word	0x00ee	; ????
     2d8:	00 00       	nop
     2da:	82 6c       	ori	r24, 0xC2	; 194
     2dc:	10 00       	.word	0x0010	; ????
     2de:	40 80       	ld	r4, Z
     2e0:	40 20       	and	r4, r0
     2e2:	40 3c       	cpi	r20, 0xC0	; 192
     2e4:	64 c4       	rjmp	.+2248   	; 0xbae <drawStage+0x4>
     2e6:	64 3c       	cpi	r22, 0xC4	; 196
     2e8:	78 85       	ldd	r23, Y+8	; 0x08
     2ea:	85 86       	std	Z+13, r8	; 0x0d
     2ec:	48 5c       	subi	r20, 0xC8	; 200
     2ee:	02 02       	muls	r16, r18
     2f0:	04 5e       	subi	r16, 0xE4	; 228
     2f2:	1c 2a       	or	r1, r28
     2f4:	2a aa       	std	Y+50, r2	; 0x32
     2f6:	9a 84       	ldd	r9, Y+10	; 0x0a
     2f8:	aa aa       	std	Y+50, r10	; 0x32
     2fa:	9e 82       	std	Y+6, r9	; 0x06
     2fc:	84 2a       	or	r8, r20
     2fe:	2a 1e       	adc	r2, r26
     300:	82 84       	ldd	r8, Z+10	; 0x0a
     302:	aa 2a       	or	r10, r26
     304:	1e 02       	muls	r17, r30
     306:	04 2a       	or	r0, r20
     308:	aa 9e       	mul	r10, r26
     30a:	02 30       	cpi	r16, 0x02	; 2
     30c:	78 4a       	sbci	r23, 0xA8	; 168
     30e:	4e 48       	sbci	r20, 0x8E	; 142
     310:	9c aa       	std	Y+52, r9	; 0x34
     312:	aa aa       	std	Y+50, r10	; 0x32
     314:	9a 9c       	mul	r9, r10
     316:	2a 2a       	or	r2, r26
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	9c aa       	std	Y+52, r9	; 0x34
     31c:	2a 2a       	or	r2, r26
     31e:	1a 00       	.word	0x001a	; ????
     320:	00 a2       	std	Z+32, r0	; 0x20
     322:	3e 82       	std	Y+6, r3	; 0x06
     324:	00 40       	sbci	r16, 0x00	; 0
     326:	a2 be       	out	0x32, r10	; 50
     328:	42 00       	.word	0x0042	; ????
     32a:	80 a2       	std	Z+32, r8	; 0x20
     32c:	3e 02       	muls	r19, r30
     32e:	0f 94 24 94 	call	0x32848	; 0x32848 <__TEXT_REGION_LENGTH__+0x12848>
     332:	0f 0f       	add	r16, r31
     334:	14 a4       	ldd	r1, Z+44	; 0x2c
     336:	14 0f       	add	r17, r20
     338:	3e 2a       	or	r3, r30
     33a:	aa a2       	std	Y+34, r10	; 0x22
     33c:	00 04       	cpc	r0, r0
     33e:	2a 2a       	or	r2, r26
     340:	3e 2a       	or	r3, r30
     342:	3e 50       	subi	r19, 0x0E	; 14
     344:	90 fe       	sbrs	r9, 0
     346:	92 4c       	sbci	r25, 0xC2	; 194
     348:	92 92       	st	-Z, r9
     34a:	92 4c       	sbci	r25, 0xC2	; 194
     34c:	4c 12       	cpse	r4, r28
     34e:	12 12       	cpse	r1, r18
     350:	4c 4c       	sbci	r20, 0xCC	; 204
     352:	52 12       	cpse	r5, r18
     354:	12 0c       	add	r1, r2
     356:	5c 82       	std	Y+4, r5	; 0x04
     358:	82 84       	ldd	r8, Z+10	; 0x0a
     35a:	5e 5c       	subi	r21, 0xCE	; 206
     35c:	42 02       	muls	r20, r18
     35e:	04 1e       	adc	r0, r20
     360:	00 b9       	out	0x00, r16	; 0
     362:	05 05       	cpc	r16, r5
     364:	be 9c       	mul	r11, r14
     366:	22 22       	and	r2, r18
     368:	22 9c       	mul	r2, r2
     36a:	bc 02       	muls	r27, r28
     36c:	02 02       	muls	r16, r18
     36e:	bc 3c       	cpi	r27, 0xCC	; 204
     370:	24 ff       	sbrs	r18, 4
     372:	24 24       	eor	r2, r4
     374:	12 7e       	andi	r17, 0xE2	; 226
     376:	92 c2       	rjmp	.+1316   	; 0x89c <drawline+0x114>
     378:	66 d4       	rcall	.+2252   	; 0xc46 <serve+0x12>
     37a:	f4 3f       	cpi	r31, 0xF4	; 244
     37c:	f4 d4       	rcall	.+2536   	; 0xd66 <newpos+0x62>
     37e:	ff 90       	pop	r15
     380:	94 6f       	ori	r25, 0xF4	; 244
     382:	04 03       	mulsu	r16, r20
     384:	11 7e       	andi	r17, 0xE1	; 225
     386:	90 c0       	rjmp	.+288    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     388:	04 2a       	or	r0, r20
     38a:	2a 9e       	mul	r2, r26
     38c:	82 00       	.word	0x0082	; ????
     38e:	00 22       	and	r0, r16
     390:	be 82       	std	Y+6, r11	; 0x06
     392:	0c 12       	cpse	r0, r28
     394:	12 52       	subi	r17, 0x22	; 34
     396:	4c 1c       	adc	r4, r12
     398:	02 02       	muls	r16, r18
     39a:	44 5e       	subi	r20, 0xE4	; 228
     39c:	00 5e       	subi	r16, 0xE0	; 224
     39e:	50 50       	subi	r21, 0x00	; 0
     3a0:	4e be       	out	0x3e, r4	; 62
     3a2:	b0 98       	cbi	0x16, 0	; 22
     3a4:	8c be       	out	0x3c, r8	; 60
     3a6:	64 94       	.word	0x9464	; ????
     3a8:	94 f4       	brge	.+36     	; 0x3ce <__trampolines_end+0x366>
     3aa:	14 64       	ori	r17, 0x44	; 68
     3ac:	94 94       	.word	0x9494	; ????
     3ae:	94 64       	ori	r25, 0x44	; 68
     3b0:	0c 12       	cpse	r0, r28
     3b2:	b2 02       	muls	r27, r18
     3b4:	04 1c       	adc	r0, r4
     3b6:	10 10       	cpse	r1, r0
     3b8:	10 10       	cpse	r1, r0
     3ba:	10 10       	cpse	r1, r0
     3bc:	10 10       	cpse	r1, r0
     3be:	1c f4       	brge	.+6      	; 0x3c6 <__trampolines_end+0x35e>
     3c0:	08 13       	cpse	r16, r24
     3c2:	35 5d       	subi	r19, 0xD5	; 213
     3c4:	f4 08       	sbc	r15, r4
     3c6:	14 2c       	mov	r1, r4
     3c8:	5f 00       	.word	0x005f	; ????
     3ca:	00 de       	rcall	.-1024   	; 0xffffffcc <__eeprom_end+0xff7effcc>
     3cc:	00 00       	nop
     3ce:	10 28       	or	r1, r0
     3d0:	54 28       	or	r5, r4
     3d2:	44 44       	sbci	r20, 0x44	; 68
     3d4:	28 54       	subi	r18, 0x48	; 72
     3d6:	28 10       	cpse	r2, r8
     3d8:	55 00       	.word	0x0055	; ????
     3da:	aa 00       	.word	0x00aa	; ????
     3dc:	55 55       	subi	r21, 0x55	; 85
     3de:	aa 55       	subi	r26, 0x5A	; 90
     3e0:	aa 55       	subi	r26, 0x5A	; 90
     3e2:	aa 55       	subi	r26, 0x5A	; 90
     3e4:	aa 55       	subi	r26, 0x5A	; 90
     3e6:	aa 00       	.word	0x00aa	; ????
     3e8:	00 00       	nop
     3ea:	ff 00       	.word	0x00ff	; ????
     3ec:	08 08       	sbc	r0, r8
     3ee:	08 ff       	.word	0xff08	; ????
     3f0:	00 28       	or	r0, r0
     3f2:	28 28       	or	r2, r8
     3f4:	ff 00       	.word	0x00ff	; ????
     3f6:	08 08       	sbc	r0, r8
     3f8:	ff 00       	.word	0x00ff	; ????
     3fa:	ff 08       	sbc	r15, r15
     3fc:	08 0f       	add	r16, r24
     3fe:	08 0f       	add	r16, r24
     400:	28 28       	or	r2, r8
     402:	28 3f       	cpi	r18, 0xF8	; 248
     404:	00 28       	or	r0, r0
     406:	28 ef       	ldi	r18, 0xF8	; 248
     408:	00 ff       	sbrs	r16, 0
     40a:	00 00       	nop
     40c:	ff 00       	.word	0x00ff	; ????
     40e:	ff 28       	or	r15, r15
     410:	28 2f       	mov	r18, r24
     412:	20 3f       	cpi	r18, 0xF0	; 240
     414:	28 28       	or	r2, r8
     416:	e8 08       	sbc	r14, r8
     418:	f8 08       	sbc	r15, r8
     41a:	08 f8       	.word	0xf808	; ????
     41c:	08 f8       	.word	0xf808	; ????
     41e:	28 28       	or	r2, r8
     420:	28 f8       	.word	0xf828	; ????
     422:	00 08       	sbc	r0, r0
     424:	08 08       	sbc	r0, r8
     426:	0f 00       	.word	0x000f	; ????
     428:	00 00       	nop
     42a:	00 f8       	bld	r0, 0
     42c:	08 08       	sbc	r0, r8
     42e:	08 08       	sbc	r0, r8
     430:	f8 08       	sbc	r15, r8
     432:	08 08       	sbc	r0, r8
     434:	08 0f       	add	r16, r24
     436:	08 00       	.word	0x0008	; ????
     438:	00 00       	nop
     43a:	ff 08       	sbc	r15, r15
     43c:	08 08       	sbc	r0, r8
     43e:	08 08       	sbc	r0, r8
     440:	08 08       	sbc	r0, r8
     442:	08 08       	sbc	r0, r8
     444:	ff 08       	sbc	r15, r15
     446:	00 00       	nop
     448:	00 ff       	sbrs	r16, 0
     44a:	28 00       	.word	0x0028	; ????
     44c:	00 ff       	sbrs	r16, 0
     44e:	00 ff       	sbrs	r16, 0
     450:	00 00       	nop
     452:	f8 08       	sbc	r15, r8
     454:	e8 00       	.word	0x00e8	; ????
     456:	00 3f       	cpi	r16, 0xF0	; 240
     458:	20 2f       	mov	r18, r16
     45a:	28 28       	or	r2, r8
     45c:	e8 08       	sbc	r14, r8
     45e:	e8 28       	or	r14, r8
     460:	28 2f       	mov	r18, r24
     462:	20 2f       	mov	r18, r16
     464:	00 00       	nop
     466:	ff 00       	.word	0x00ff	; ????
     468:	ef 28       	or	r14, r15
     46a:	28 28       	or	r2, r8
     46c:	28 28       	or	r2, r8
     46e:	28 28       	or	r2, r8
     470:	ef 00       	.word	0x00ef	; ????
     472:	ef 28       	or	r14, r15
     474:	28 28       	or	r2, r8
     476:	e8 28       	or	r14, r8
     478:	08 08       	sbc	r0, r8
     47a:	f8 08       	sbc	r15, r8
     47c:	f8 28       	or	r15, r8
     47e:	28 28       	or	r2, r8
     480:	2f 28       	or	r2, r15
     482:	08 08       	sbc	r0, r8
     484:	0f 08       	sbc	r0, r15
     486:	0f 00       	.word	0x000f	; ????
     488:	00 f8       	bld	r0, 0
     48a:	08 f8       	.word	0xf808	; ????
     48c:	00 00       	nop
     48e:	00 f8       	bld	r0, 0
     490:	28 00       	.word	0x0028	; ????
     492:	00 00       	nop
     494:	3f 28       	or	r3, r15
     496:	00 00       	nop
     498:	0f 08       	sbc	r0, r15
     49a:	0f 08       	sbc	r0, r15
     49c:	08 ff       	.word	0xff08	; ????
     49e:	08 ff       	.word	0xff08	; ????
     4a0:	28 28       	or	r2, r8
     4a2:	28 ff       	.word	0xff28	; ????
     4a4:	28 08       	sbc	r2, r8
     4a6:	08 08       	sbc	r0, r8
     4a8:	f8 00       	.word	0x00f8	; ????
     4aa:	00 00       	nop
     4ac:	00 0f       	add	r16, r16
     4ae:	08 ff       	.word	0xff08	; ????
     4b0:	ff ff       	.word	0xffff	; ????
     4b2:	ff ff       	.word	0xffff	; ????
     4b4:	0f 0f       	add	r16, r31
     4b6:	0f 0f       	add	r16, r31
     4b8:	0f ff       	.word	0xff0f	; ????
     4ba:	ff ff       	.word	0xffff	; ????
     4bc:	00 00       	nop
     4be:	00 00       	nop
     4c0:	00 ff       	sbrs	r16, 0
     4c2:	ff f0       	brie	.+62     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c4:	f0 f0       	brcs	.+60     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c6:	f0 f0       	brcs	.+60     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     4c8:	1c 22       	and	r1, r28
     4ca:	22 1c       	adc	r2, r2
     4cc:	22 3e       	cpi	r18, 0xE2	; 226
     4ce:	54 54       	subi	r21, 0x44	; 68
     4d0:	7c 28       	or	r7, r12
     4d2:	7e 40       	sbci	r23, 0x0E	; 14
     4d4:	40 60       	ori	r20, 0x00	; 0
     4d6:	60 40       	sbci	r22, 0x00	; 0
     4d8:	7e 40       	sbci	r23, 0x0E	; 14
     4da:	7e 40       	sbci	r23, 0x0E	; 14
     4dc:	c6 aa       	std	Z+54, r12	; 0x36
     4de:	92 82       	std	Z+2, r9	; 0x02
     4e0:	c6 1c       	adc	r12, r6
     4e2:	22 22       	and	r2, r18
     4e4:	3c 20       	and	r3, r12
     4e6:	02 7e       	andi	r16, 0xE2	; 226
     4e8:	04 78       	andi	r16, 0x84	; 132
     4ea:	04 60       	ori	r16, 0x04	; 4
     4ec:	40 7e       	andi	r20, 0xE0	; 224
     4ee:	40 40       	sbci	r20, 0x00	; 0
     4f0:	99 a5       	ldd	r25, Y+41	; 0x29
     4f2:	e7 a5       	ldd	r30, Z+47	; 0x2f
     4f4:	99 38       	cpi	r25, 0x89	; 137
     4f6:	54 92       	xch	Z, r5
     4f8:	54 38       	cpi	r21, 0x84	; 132
     4fa:	32 4e       	sbci	r19, 0xE2	; 226
     4fc:	80 4e       	sbci	r24, 0xE0	; 224
     4fe:	32 0c       	add	r3, r2
     500:	52 b2       	in	r5, 0x12	; 18
     502:	b2 0c       	add	r11, r2
     504:	0c 12       	cpse	r0, r28
     506:	1e 12       	cpse	r1, r30
     508:	0c 3d       	cpi	r16, 0xDC	; 220
     50a:	46 5a       	subi	r20, 0xA6	; 166
     50c:	62 bc       	out	0x22, r6	; 34
     50e:	7c 92       	st	X, r7
     510:	92 92       	st	-Z, r9
     512:	00 7e       	andi	r16, 0xE0	; 224
     514:	80 80       	ld	r8, Z
     516:	80 7e       	andi	r24, 0xE0	; 224
     518:	54 54       	subi	r21, 0x44	; 68
     51a:	54 54       	subi	r21, 0x44	; 68
     51c:	54 22       	and	r5, r20
     51e:	22 fa       	bst	r2, 2
     520:	22 22       	and	r2, r18
     522:	02 8a       	std	Z+18, r0	; 0x12
     524:	52 22       	and	r5, r18
     526:	02 02       	muls	r16, r18
     528:	22 52       	subi	r18, 0x22	; 34
     52a:	8a 02       	muls	r24, r26
     52c:	00 00       	nop
     52e:	ff 80       	ldd	r15, Y+7	; 0x07
     530:	c0 07       	cpc	r28, r16
     532:	01 ff       	sbrs	r16, 1
     534:	00 00       	nop
     536:	10 10       	cpse	r1, r0
     538:	d6 d6       	rcall	.+3500   	; 0x12e6 <__floatsisf+0x3c>
     53a:	10 6c       	ori	r17, 0xC0	; 192
     53c:	48 6c       	ori	r20, 0xC8	; 200
     53e:	24 6c       	ori	r18, 0xC4	; 196
     540:	60 f0       	brcs	.+24     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
     542:	90 f0       	brcs	.+36     	; 0x568 <__ctors_end+0x4>
     544:	60 00       	.word	0x0060	; ????
     546:	00 18       	sub	r0, r0
     548:	18 00       	.word	0x0018	; ????
     54a:	00 00       	nop
     54c:	08 08       	sbc	r0, r8
     54e:	00 0c       	add	r0, r0
     550:	02 ff       	sbrs	r16, 2
     552:	80 80       	ld	r8, Z
     554:	00 f8       	bld	r0, 0
     556:	80 80       	ld	r8, Z
     558:	78 00       	.word	0x0078	; ????
     55a:	98 b8       	out	0x08, r9	; 8
     55c:	e8 48       	sbci	r30, 0x88	; 136
     55e:	00 3c       	cpi	r16, 0xC0	; 192
     560:	3c 3c       	cpi	r19, 0xCC	; 204
     562:	3c 00       	.word	0x003c	; ????

00000564 <__ctors_end>:
     564:	11 24       	eor	r1, r1
     566:	1f be       	out	0x3f, r1	; 63
     568:	cf ef       	ldi	r28, 0xFF	; 255
     56a:	d8 e0       	ldi	r29, 0x08	; 8
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	cd bf       	out	0x3d, r28	; 61

00000570 <__do_copy_data>:
     570:	15 e0       	ldi	r17, 0x05	; 5
     572:	a0 e0       	ldi	r26, 0x00	; 0
     574:	b1 e0       	ldi	r27, 0x01	; 1
     576:	ea e6       	ldi	r30, 0x6A	; 106
     578:	fb e1       	ldi	r31, 0x1B	; 27
     57a:	02 c0       	rjmp	.+4      	; 0x580 <__do_copy_data+0x10>
     57c:	05 90       	lpm	r0, Z+
     57e:	0d 92       	st	X+, r0
     580:	ac 35       	cpi	r26, 0x5C	; 92
     582:	b1 07       	cpc	r27, r17
     584:	d9 f7       	brne	.-10     	; 0x57c <__do_copy_data+0xc>

00000586 <__do_clear_bss>:
     586:	25 e0       	ldi	r18, 0x05	; 5
     588:	ac e5       	ldi	r26, 0x5C	; 92
     58a:	b5 e0       	ldi	r27, 0x05	; 5
     58c:	01 c0       	rjmp	.+2      	; 0x590 <.do_clear_bss_start>

0000058e <.do_clear_bss_loop>:
     58e:	1d 92       	st	X+, r1

00000590 <.do_clear_bss_start>:
     590:	a6 38       	cpi	r26, 0x86	; 134
     592:	b2 07       	cpc	r27, r18
     594:	e1 f7       	brne	.-8      	; 0x58e <.do_clear_bss_loop>
     596:	0e 94 99 07 	call	0xf32	; 0xf32 <main>
     59a:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <_exit>

0000059e <__bad_interrupt>:
     59e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005a2 <lcd_command>:
			if(dist<r) {
				setpixel(buff, i, j, color);
			}
		}
	}
}
     5a2:	5c 98       	cbi	0x0b, 4	; 11
     5a4:	27 e0       	ldi	r18, 0x07	; 7
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	5d 98       	cbi	0x0b, 5	; 11
     5ac:	ac 01       	movw	r20, r24
     5ae:	02 2e       	mov	r0, r18
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <lcd_command+0x14>
     5b2:	55 95       	asr	r21
     5b4:	47 95       	ror	r20
     5b6:	0a 94       	dec	r0
     5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <lcd_command+0x10>
     5ba:	40 ff       	sbrs	r20, 0
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <lcd_command+0x20>
     5be:	5e 9a       	sbi	0x0b, 6	; 11
     5c0:	01 c0       	rjmp	.+2      	; 0x5c4 <lcd_command+0x22>
     5c2:	5e 98       	cbi	0x0b, 6	; 11
     5c4:	5d 9a       	sbi	0x0b, 5	; 11
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	31 09       	sbc	r19, r1
     5ca:	78 f7       	brcc	.-34     	; 0x5aa <lcd_command+0x8>
     5cc:	08 95       	ret

000005ce <lcd_init>:
     5ce:	56 9a       	sbi	0x0a, 6	; 10
     5d0:	55 9a       	sbi	0x0a, 5	; 10
     5d2:	54 9a       	sbi	0x0a, 4	; 10
     5d4:	53 9a       	sbi	0x0a, 3	; 10
     5d6:	52 9a       	sbi	0x0a, 2	; 10
     5d8:	5a 98       	cbi	0x0b, 2	; 11
     5da:	5b 98       	cbi	0x0b, 3	; 11
     5dc:	2f e9       	ldi	r18, 0x9F	; 159
     5de:	86 e8       	ldi	r24, 0x86	; 134
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	21 50       	subi	r18, 0x01	; 1
     5e4:	80 40       	sbci	r24, 0x00	; 0
     5e6:	90 40       	sbci	r25, 0x00	; 0
     5e8:	e1 f7       	brne	.-8      	; 0x5e2 <lcd_init+0x14>
     5ea:	00 c0       	rjmp	.+0      	; 0x5ec <lcd_init+0x1e>
     5ec:	00 00       	nop
     5ee:	5b 9a       	sbi	0x0b, 3	; 11
     5f0:	83 ea       	ldi	r24, 0xA3	; 163
     5f2:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     5f6:	80 ea       	ldi	r24, 0xA0	; 160
     5f8:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     5fc:	80 ec       	ldi	r24, 0xC0	; 192
     5fe:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     602:	80 e4       	ldi	r24, 0x40	; 64
     604:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     608:	8c e2       	ldi	r24, 0x2C	; 44
     60a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     60e:	83 ed       	ldi	r24, 0xD3	; 211
     610:	90 e3       	ldi	r25, 0x30	; 48
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	f1 f7       	brne	.-4      	; 0x612 <lcd_init+0x44>
     616:	00 c0       	rjmp	.+0      	; 0x618 <lcd_init+0x4a>
     618:	00 00       	nop
     61a:	8e e2       	ldi	r24, 0x2E	; 46
     61c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     620:	83 ed       	ldi	r24, 0xD3	; 211
     622:	90 e3       	ldi	r25, 0x30	; 48
     624:	01 97       	sbiw	r24, 0x01	; 1
     626:	f1 f7       	brne	.-4      	; 0x624 <lcd_init+0x56>
     628:	00 c0       	rjmp	.+0      	; 0x62a <lcd_init+0x5c>
     62a:	00 00       	nop
     62c:	8f e2       	ldi	r24, 0x2F	; 47
     62e:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     632:	83 ec       	ldi	r24, 0xC3	; 195
     634:	99 e0       	ldi	r25, 0x09	; 9
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <lcd_init+0x68>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <lcd_init+0x6e>
     63c:	00 00       	nop
     63e:	86 e2       	ldi	r24, 0x26	; 38
     640:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     644:	08 95       	ret

00000646 <lcd_data>:
     646:	5c 9a       	sbi	0x0b, 4	; 11
     648:	27 e0       	ldi	r18, 0x07	; 7
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	5d 98       	cbi	0x0b, 5	; 11
     650:	ac 01       	movw	r20, r24
     652:	02 2e       	mov	r0, r18
     654:	02 c0       	rjmp	.+4      	; 0x65a <lcd_data+0x14>
     656:	55 95       	asr	r21
     658:	47 95       	ror	r20
     65a:	0a 94       	dec	r0
     65c:	e2 f7       	brpl	.-8      	; 0x656 <lcd_data+0x10>
     65e:	40 ff       	sbrs	r20, 0
     660:	02 c0       	rjmp	.+4      	; 0x666 <lcd_data+0x20>
     662:	5e 9a       	sbi	0x0b, 6	; 11
     664:	01 c0       	rjmp	.+2      	; 0x668 <lcd_data+0x22>
     666:	5e 98       	cbi	0x0b, 6	; 11
     668:	5d 9a       	sbi	0x0b, 5	; 11
     66a:	21 50       	subi	r18, 0x01	; 1
     66c:	31 09       	sbc	r19, r1
     66e:	78 f7       	brcc	.-34     	; 0x64e <lcd_data+0x8>
     670:	08 95       	ret

00000672 <lcd_set_brightness>:
     672:	cf 93       	push	r28
     674:	c8 2f       	mov	r28, r24
     676:	81 e8       	ldi	r24, 0x81	; 129
     678:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     67c:	8c 2f       	mov	r24, r28
     67e:	8f 73       	andi	r24, 0x3F	; 63
     680:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     684:	cf 91       	pop	r28
     686:	08 95       	ret

00000688 <write_buffer>:
     688:	cf 92       	push	r12
     68a:	df 92       	push	r13
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	0f 2e       	mov	r0, r31
     69a:	f4 e0       	ldi	r31, 0x04	; 4
     69c:	ef 2e       	mov	r14, r31
     69e:	f5 e0       	ldi	r31, 0x05	; 5
     6a0:	ff 2e       	mov	r15, r31
     6a2:	f0 2d       	mov	r31, r0
     6a4:	ec 01       	movw	r28, r24
     6a6:	0f 2e       	mov	r0, r31
     6a8:	f4 e1       	ldi	r31, 0x14	; 20
     6aa:	cf 2e       	mov	r12, r31
     6ac:	f5 e0       	ldi	r31, 0x05	; 5
     6ae:	df 2e       	mov	r13, r31
     6b0:	f0 2d       	mov	r31, r0
     6b2:	f7 01       	movw	r30, r14
     6b4:	80 81       	ld	r24, Z
     6b6:	f2 e0       	ldi	r31, 0x02	; 2
     6b8:	ef 0e       	add	r14, r31
     6ba:	f1 1c       	adc	r15, r1
     6bc:	80 6b       	ori	r24, 0xB0	; 176
     6be:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6c8:	80 e1       	ldi	r24, 0x10	; 16
     6ca:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6ce:	80 ee       	ldi	r24, 0xE0	; 224
     6d0:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6d4:	8f ef       	ldi	r24, 0xFF	; 255
     6d6:	0e 94 23 03 	call	0x646	; 0x646 <lcd_data>
     6da:	8e 01       	movw	r16, r28
     6dc:	00 58       	subi	r16, 0x80	; 128
     6de:	1f 4f       	sbci	r17, 0xFF	; 255
     6e0:	89 91       	ld	r24, Y+
     6e2:	0e 94 23 03 	call	0x646	; 0x646 <lcd_data>
     6e6:	c0 17       	cp	r28, r16
     6e8:	d1 07       	cpc	r29, r17
     6ea:	d1 f7       	brne	.-12     	; 0x6e0 <write_buffer+0x58>
     6ec:	e8 01       	movw	r28, r16
     6ee:	ce 14       	cp	r12, r14
     6f0:	df 04       	cpc	r13, r15
     6f2:	f9 f6       	brne	.-66     	; 0x6b2 <write_buffer+0x2a>
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	1f 91       	pop	r17
     6fa:	0f 91       	pop	r16
     6fc:	ff 90       	pop	r15
     6fe:	ef 90       	pop	r14
     700:	df 90       	pop	r13
     702:	cf 90       	pop	r12
     704:	08 95       	ret

00000706 <clear_buffer>:
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	34 e0       	ldi	r19, 0x04	; 4
     70a:	fc 01       	movw	r30, r24
     70c:	a9 01       	movw	r20, r18
     70e:	11 92       	st	Z+, r1
     710:	41 50       	subi	r20, 0x01	; 1
     712:	50 40       	sbci	r21, 0x00	; 0
     714:	e1 f7       	brne	.-8      	; 0x70e <clear_buffer+0x8>
     716:	08 95       	ret

00000718 <drawchar>:
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	f9 01       	movw	r30, r18
     71c:	ee 0f       	add	r30, r30
     71e:	ff 1f       	adc	r31, r31
     720:	ee 0f       	add	r30, r30
     722:	ff 1f       	adc	r31, r31
     724:	e2 0f       	add	r30, r18
     726:	f3 1f       	adc	r31, r19
     728:	e8 59       	subi	r30, 0x98	; 152
     72a:	ff 4f       	sbci	r31, 0xFF	; 255
     72c:	55 e0       	ldi	r21, 0x05	; 5
     72e:	56 0f       	add	r21, r22
     730:	9c 01       	movw	r18, r24
     732:	70 e8       	ldi	r23, 0x80	; 128
     734:	47 9f       	mul	r20, r23
     736:	20 0d       	add	r18, r0
     738:	31 1d       	adc	r19, r1
     73a:	11 24       	eor	r1, r1
     73c:	94 91       	lpm	r25, Z
     73e:	d9 01       	movw	r26, r18
     740:	a6 0f       	add	r26, r22
     742:	b1 1d       	adc	r27, r1
     744:	9c 93       	st	X, r25
     746:	6f 5f       	subi	r22, 0xFF	; 255
     748:	31 96       	adiw	r30, 0x01	; 1
     74a:	65 13       	cpse	r22, r21
     74c:	f7 cf       	rjmp	.-18     	; 0x73c <drawchar+0x24>
     74e:	08 95       	ret

00000750 <setpixel>:
     750:	34 2f       	mov	r19, r20
     752:	36 95       	lsr	r19
     754:	36 95       	lsr	r19
     756:	36 95       	lsr	r19
     758:	e6 2f       	mov	r30, r22
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	50 e8       	ldi	r21, 0x80	; 128
     75e:	35 9f       	mul	r19, r21
     760:	e0 0d       	add	r30, r0
     762:	f1 1d       	adc	r31, r1
     764:	11 24       	eor	r1, r1
     766:	e8 0f       	add	r30, r24
     768:	f9 1f       	adc	r31, r25
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	50 e0       	ldi	r21, 0x00	; 0
     76e:	40 95       	com	r20
     770:	50 95       	com	r21
     772:	47 70       	andi	r20, 0x07	; 7
     774:	55 27       	eor	r21, r21
     776:	02 c0       	rjmp	.+4      	; 0x77c <setpixel+0x2c>
     778:	22 0f       	add	r18, r18
     77a:	33 1f       	adc	r19, r19
     77c:	4a 95       	dec	r20
     77e:	e2 f7       	brpl	.-8      	; 0x778 <setpixel+0x28>
     780:	80 81       	ld	r24, Z
     782:	28 2b       	or	r18, r24
     784:	20 83       	st	Z, r18
     786:	08 95       	ret

00000788 <drawline>:
     788:	2f 92       	push	r2
     78a:	3f 92       	push	r3
     78c:	4f 92       	push	r4
     78e:	5f 92       	push	r5
     790:	6f 92       	push	r6
     792:	7f 92       	push	r7
     794:	8f 92       	push	r8
     796:	9f 92       	push	r9
     798:	af 92       	push	r10
     79a:	bf 92       	push	r11
     79c:	cf 92       	push	r12
     79e:	df 92       	push	r13
     7a0:	ef 92       	push	r14
     7a2:	ff 92       	push	r15
     7a4:	0f 93       	push	r16
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
     7ac:	00 d0       	rcall	.+0      	; 0x7ae <drawline+0x26>
     7ae:	1f 92       	push	r1
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	1c 01       	movw	r2, r24
     7b6:	e9 82       	std	Y+1, r14	; 0x01
     7b8:	82 2e       	mov	r8, r18
     7ba:	91 2c       	mov	r9, r1
     7bc:	86 2f       	mov	r24, r22
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	9b 83       	std	Y+3, r25	; 0x03
     7c2:	8a 83       	std	Y+2, r24	; 0x02
     7c4:	a4 2e       	mov	r10, r20
     7c6:	b1 2c       	mov	r11, r1
     7c8:	10 e0       	ldi	r17, 0x00	; 0
     7ca:	0a 19       	sub	r16, r10
     7cc:	1b 09       	sbc	r17, r11
     7ce:	b8 01       	movw	r22, r16
     7d0:	01 2e       	mov	r0, r17
     7d2:	00 0c       	add	r0, r0
     7d4:	88 0b       	sbc	r24, r24
     7d6:	99 0b       	sbc	r25, r25
     7d8:	0e 94 55 09 	call	0x12aa	; 0x12aa <__floatsisf>
     7dc:	6b 01       	movw	r12, r22
     7de:	7c 01       	movw	r14, r24
     7e0:	b4 01       	movw	r22, r8
     7e2:	8a 81       	ldd	r24, Y+2	; 0x02
     7e4:	9b 81       	ldd	r25, Y+3	; 0x03
     7e6:	68 1b       	sub	r22, r24
     7e8:	79 0b       	sbc	r23, r25
     7ea:	07 2e       	mov	r0, r23
     7ec:	00 0c       	add	r0, r0
     7ee:	88 0b       	sbc	r24, r24
     7f0:	99 0b       	sbc	r25, r25
     7f2:	0e 94 55 09 	call	0x12aa	; 0x12aa <__floatsisf>
     7f6:	9b 01       	movw	r18, r22
     7f8:	ac 01       	movw	r20, r24
     7fa:	c7 01       	movw	r24, r14
     7fc:	b6 01       	movw	r22, r12
     7fe:	0e 94 ab 08 	call	0x1156	; 0x1156 <__divsf3>
     802:	0e 94 1d 09 	call	0x123a	; 0x123a <__fixsfsi>
     806:	9b 01       	movw	r18, r22
     808:	77 23       	and	r23, r23
     80a:	24 f4       	brge	.+8      	; 0x814 <drawline+0x8c>
     80c:	22 27       	eor	r18, r18
     80e:	33 27       	eor	r19, r19
     810:	26 1b       	sub	r18, r22
     812:	37 0b       	sbc	r19, r23
     814:	b9 01       	movw	r22, r18
     816:	33 0f       	add	r19, r19
     818:	88 0b       	sbc	r24, r24
     81a:	99 0b       	sbc	r25, r25
     81c:	0e 94 55 09 	call	0x12aa	; 0x12aa <__floatsisf>
     820:	2b 01       	movw	r4, r22
     822:	3c 01       	movw	r6, r24
     824:	8a 81       	ldd	r24, Y+2	; 0x02
     826:	9b 81       	ldd	r25, Y+3	; 0x03
     828:	88 16       	cp	r8, r24
     82a:	99 06       	cpc	r9, r25
     82c:	b4 f1       	brlt	.+108    	; 0x89a <drawline+0x112>
     82e:	11 23       	and	r17, r17
     830:	1c f4       	brge	.+6      	; 0x838 <drawline+0xb0>
     832:	9f ef       	ldi	r25, 0xFF	; 255
     834:	8f ef       	ldi	r24, 0xFF	; 255
     836:	02 c0       	rjmp	.+4      	; 0x83c <drawline+0xb4>
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	09 2f       	mov	r16, r25
     83e:	18 2f       	mov	r17, r24
     840:	c1 2c       	mov	r12, r1
     842:	d1 2c       	mov	r13, r1
     844:	76 01       	movw	r14, r12
     846:	29 81       	ldd	r18, Y+1	; 0x01
     848:	4a 2d       	mov	r20, r10
     84a:	6a 81       	ldd	r22, Y+2	; 0x02
     84c:	c1 01       	movw	r24, r2
     84e:	0e 94 a8 03 	call	0x750	; 0x750 <setpixel>
     852:	a3 01       	movw	r20, r6
     854:	92 01       	movw	r18, r4
     856:	c7 01       	movw	r24, r14
     858:	b6 01       	movw	r22, r12
     85a:	0e 94 3f 08 	call	0x107e	; 0x107e <__addsf3>
     85e:	6b 01       	movw	r12, r22
     860:	7c 01       	movw	r14, r24
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	40 e0       	ldi	r20, 0x00	; 0
     868:	5f e3       	ldi	r21, 0x3F	; 63
     86a:	0e 94 05 0a 	call	0x140a	; 0x140a <__gesf2>
     86e:	88 23       	and	r24, r24
     870:	64 f0       	brlt	.+24     	; 0x88a <drawline+0x102>
     872:	a0 0e       	add	r10, r16
     874:	b1 1e       	adc	r11, r17
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	40 e8       	ldi	r20, 0x80	; 128
     87c:	5f e3       	ldi	r21, 0x3F	; 63
     87e:	c7 01       	movw	r24, r14
     880:	b6 01       	movw	r22, r12
     882:	0e 94 3e 08 	call	0x107c	; 0x107c <__subsf3>
     886:	6b 01       	movw	r12, r22
     888:	7c 01       	movw	r14, r24
     88a:	8a 81       	ldd	r24, Y+2	; 0x02
     88c:	9b 81       	ldd	r25, Y+3	; 0x03
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	9b 83       	std	Y+3, r25	; 0x03
     892:	8a 83       	std	Y+2, r24	; 0x02
     894:	88 16       	cp	r8, r24
     896:	99 06       	cpc	r9, r25
     898:	b4 f6       	brge	.-84     	; 0x846 <drawline+0xbe>
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	0f 90       	pop	r0
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	ef 90       	pop	r14
     8ac:	df 90       	pop	r13
     8ae:	cf 90       	pop	r12
     8b0:	bf 90       	pop	r11
     8b2:	af 90       	pop	r10
     8b4:	9f 90       	pop	r9
     8b6:	8f 90       	pop	r8
     8b8:	7f 90       	pop	r7
     8ba:	6f 90       	pop	r6
     8bc:	5f 90       	pop	r5
     8be:	4f 90       	pop	r4
     8c0:	3f 90       	pop	r3
     8c2:	2f 90       	pop	r2
     8c4:	08 95       	ret

000008c6 <drawline_vert>:
     8c6:	cf 92       	push	r12
     8c8:	df 92       	push	r13
     8ca:	ef 92       	push	r14
     8cc:	ff 92       	push	r15
     8ce:	0f 93       	push	r16
     8d0:	1f 93       	push	r17
     8d2:	cf 93       	push	r28
     8d4:	df 93       	push	r29
     8d6:	6c 01       	movw	r12, r24
     8d8:	16 2f       	mov	r17, r22
     8da:	c4 2f       	mov	r28, r20
     8dc:	d0 e0       	ldi	r29, 0x00	; 0
     8de:	e2 2e       	mov	r14, r18
     8e0:	f1 2c       	mov	r15, r1
     8e2:	ec 16       	cp	r14, r28
     8e4:	fd 06       	cpc	r15, r29
     8e6:	54 f0       	brlt	.+20     	; 0x8fc <drawline_vert+0x36>
     8e8:	20 2f       	mov	r18, r16
     8ea:	4c 2f       	mov	r20, r28
     8ec:	61 2f       	mov	r22, r17
     8ee:	c6 01       	movw	r24, r12
     8f0:	0e 94 a8 03 	call	0x750	; 0x750 <setpixel>
     8f4:	21 96       	adiw	r28, 0x01	; 1
     8f6:	ec 16       	cp	r14, r28
     8f8:	fd 06       	cpc	r15, r29
     8fa:	b4 f7       	brge	.-20     	; 0x8e8 <drawline_vert+0x22>
     8fc:	df 91       	pop	r29
     8fe:	cf 91       	pop	r28
     900:	1f 91       	pop	r17
     902:	0f 91       	pop	r16
     904:	ff 90       	pop	r15
     906:	ef 90       	pop	r14
     908:	df 90       	pop	r13
     90a:	cf 90       	pop	r12
     90c:	08 95       	ret

0000090e <drawline_horz>:
     90e:	cf 92       	push	r12
     910:	df 92       	push	r13
     912:	ef 92       	push	r14
     914:	ff 92       	push	r15
     916:	0f 93       	push	r16
     918:	1f 93       	push	r17
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	6c 01       	movw	r12, r24
     920:	16 2f       	mov	r17, r22
     922:	c4 2f       	mov	r28, r20
     924:	d0 e0       	ldi	r29, 0x00	; 0
     926:	e2 2e       	mov	r14, r18
     928:	f1 2c       	mov	r15, r1
     92a:	ec 16       	cp	r14, r28
     92c:	fd 06       	cpc	r15, r29
     92e:	54 f0       	brlt	.+20     	; 0x944 <drawline_horz+0x36>
     930:	20 2f       	mov	r18, r16
     932:	41 2f       	mov	r20, r17
     934:	6c 2f       	mov	r22, r28
     936:	c6 01       	movw	r24, r12
     938:	0e 94 a8 03 	call	0x750	; 0x750 <setpixel>
     93c:	21 96       	adiw	r28, 0x01	; 1
     93e:	ec 16       	cp	r14, r28
     940:	fd 06       	cpc	r15, r29
     942:	b4 f7       	brge	.-20     	; 0x930 <drawline_horz+0x22>
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	0f 91       	pop	r16
     94c:	ff 90       	pop	r15
     94e:	ef 90       	pop	r14
     950:	df 90       	pop	r13
     952:	cf 90       	pop	r12
     954:	08 95       	ret

00000956 <fillrect>:
     956:	af 92       	push	r10
     958:	bf 92       	push	r11
     95a:	cf 92       	push	r12
     95c:	df 92       	push	r13
     95e:	ef 92       	push	r14
     960:	ff 92       	push	r15
     962:	0f 93       	push	r16
     964:	1f 93       	push	r17
     966:	cf 93       	push	r28
     968:	df 93       	push	r29
     96a:	c4 2f       	mov	r28, r20
     96c:	d0 e0       	ldi	r29, 0x00	; 0
     96e:	6e 01       	movw	r12, r28
     970:	c0 0e       	add	r12, r16
     972:	d1 1c       	adc	r13, r1
     974:	31 e0       	ldi	r19, 0x01	; 1
     976:	c3 1a       	sub	r12, r19
     978:	d1 08       	sbc	r13, r1
     97a:	cc 16       	cp	r12, r28
     97c:	dd 06       	cpc	r13, r29
     97e:	84 f0       	brlt	.+32     	; 0x9a0 <fillrect+0x4a>
     980:	12 2f       	mov	r17, r18
     982:	f6 2e       	mov	r15, r22
     984:	5c 01       	movw	r10, r24
     986:	11 50       	subi	r17, 0x01	; 1
     988:	16 0f       	add	r17, r22
     98a:	0e 2d       	mov	r16, r14
     98c:	21 2f       	mov	r18, r17
     98e:	4f 2d       	mov	r20, r15
     990:	6c 2f       	mov	r22, r28
     992:	c5 01       	movw	r24, r10
     994:	0e 94 87 04 	call	0x90e	; 0x90e <drawline_horz>
     998:	21 96       	adiw	r28, 0x01	; 1
     99a:	cc 16       	cp	r12, r28
     99c:	dd 06       	cpc	r13, r29
     99e:	ac f7       	brge	.-22     	; 0x98a <fillrect+0x34>
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	ff 90       	pop	r15
     9aa:	ef 90       	pop	r14
     9ac:	df 90       	pop	r13
     9ae:	cf 90       	pop	r12
     9b0:	bf 90       	pop	r11
     9b2:	af 90       	pop	r10
     9b4:	08 95       	ret

000009b6 <drawrect>:
     9b6:	bf 92       	push	r11
     9b8:	cf 92       	push	r12
     9ba:	df 92       	push	r13
     9bc:	ef 92       	push	r14
     9be:	ff 92       	push	r15
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	6c 01       	movw	r12, r24
     9ca:	f6 2e       	mov	r15, r22
     9cc:	d4 2f       	mov	r29, r20
     9ce:	12 2f       	mov	r17, r18
     9d0:	c4 2f       	mov	r28, r20
     9d2:	c0 0f       	add	r28, r16
     9d4:	0e 2d       	mov	r16, r14
     9d6:	2c 2f       	mov	r18, r28
     9d8:	0e 94 63 04 	call	0x8c6	; 0x8c6 <drawline_vert>
     9dc:	1f 0d       	add	r17, r15
     9de:	0c 2f       	mov	r16, r28
     9e0:	21 2f       	mov	r18, r17
     9e2:	4c 2f       	mov	r20, r28
     9e4:	6f 2d       	mov	r22, r15
     9e6:	c6 01       	movw	r24, r12
     9e8:	0e 94 c4 03 	call	0x788	; 0x788 <drawline>
     9ec:	0e 2d       	mov	r16, r14
     9ee:	2c 2f       	mov	r18, r28
     9f0:	4d 2f       	mov	r20, r29
     9f2:	61 2f       	mov	r22, r17
     9f4:	c6 01       	movw	r24, r12
     9f6:	0e 94 63 04 	call	0x8c6	; 0x8c6 <drawline_vert>
     9fa:	0d 2f       	mov	r16, r29
     9fc:	21 2f       	mov	r18, r17
     9fe:	4d 2f       	mov	r20, r29
     a00:	6f 2d       	mov	r22, r15
     a02:	c6 01       	movw	r24, r12
     a04:	0e 94 c4 03 	call	0x788	; 0x788 <drawline>
     a08:	df 91       	pop	r29
     a0a:	cf 91       	pop	r28
     a0c:	1f 91       	pop	r17
     a0e:	0f 91       	pop	r16
     a10:	ff 90       	pop	r15
     a12:	ef 90       	pop	r14
     a14:	df 90       	pop	r13
     a16:	cf 90       	pop	r12
     a18:	bf 90       	pop	r11
     a1a:	08 95       	ret

00000a1c <drawball>:

//draw the ball for pong
void drawball(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t color) {
     a1c:	5f 92       	push	r5
     a1e:	6f 92       	push	r6
     a20:	7f 92       	push	r7
     a22:	8f 92       	push	r8
     a24:	9f 92       	push	r9
     a26:	af 92       	push	r10
     a28:	bf 92       	push	r11
     a2a:	cf 92       	push	r12
     a2c:	df 92       	push	r13
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	0f 93       	push	r16
     a34:	1f 93       	push	r17
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
	int r = 2;
	//int d;
	for(int i = x0-r; i<=x0+r; i++) {
     a3a:	c6 2e       	mov	r12, r22
     a3c:	d1 2c       	mov	r13, r1
     a3e:	56 01       	movw	r10, r12
     a40:	32 e0       	ldi	r19, 0x02	; 2
     a42:	a3 1a       	sub	r10, r19
     a44:	b1 08       	sbc	r11, r1
     a46:	32 e0       	ldi	r19, 0x02	; 2
     a48:	c3 0e       	add	r12, r19
     a4a:	d1 1c       	adc	r13, r1
     a4c:	ca 14       	cp	r12, r10
     a4e:	db 04       	cpc	r13, r11
     a50:	5c f1       	brlt	.+86     	; 0xaa8 <drawball+0x8c>
     a52:	52 2e       	mov	r5, r18
     a54:	3c 01       	movw	r6, r24
     a56:	85 01       	movw	r16, r10
		for(int j = y0-r; j<=y0+r; j++) {
     a58:	e4 2e       	mov	r14, r20
     a5a:	f1 2c       	mov	r15, r1
     a5c:	47 01       	movw	r8, r14
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	88 1a       	sub	r8, r24
     a62:	91 08       	sbc	r9, r1
     a64:	32 e0       	ldi	r19, 0x02	; 2
     a66:	e3 0e       	add	r14, r19
     a68:	f1 1c       	adc	r15, r1
     a6a:	e8 14       	cp	r14, r8
     a6c:	f9 04       	cpc	r15, r9
     a6e:	bc f0       	brlt	.+46     	; 0xa9e <drawball+0x82>
     a70:	e4 01       	movw	r28, r8
			//d = abs(i - x0) + abs(j - y0);
			if ((i == x0-r || i == x0+r) && (j == y0 -r || j == y0 + r)) {
     a72:	a0 16       	cp	r10, r16
     a74:	b1 06       	cpc	r11, r17
     a76:	19 f0       	breq	.+6      	; 0xa7e <drawball+0x62>
     a78:	c0 16       	cp	r12, r16
     a7a:	d1 06       	cpc	r13, r17
     a7c:	31 f4       	brne	.+12     	; 0xa8a <drawball+0x6e>
     a7e:	8c 16       	cp	r8, r28
     a80:	9d 06       	cpc	r9, r29
     a82:	49 f0       	breq	.+18     	; 0xa96 <drawball+0x7a>
     a84:	ec 16       	cp	r14, r28
     a86:	fd 06       	cpc	r15, r29
     a88:	31 f0       	breq	.+12     	; 0xa96 <drawball+0x7a>
			} else {
				setpixel(buff, i, j, color);
     a8a:	25 2d       	mov	r18, r5
     a8c:	4c 2f       	mov	r20, r28
     a8e:	60 2f       	mov	r22, r16
     a90:	c3 01       	movw	r24, r6
     a92:	0e 94 a8 03 	call	0x750	; 0x750 <setpixel>
//draw the ball for pong
void drawball(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t color) {
	int r = 2;
	//int d;
	for(int i = x0-r; i<=x0+r; i++) {
		for(int j = y0-r; j<=y0+r; j++) {
     a96:	21 96       	adiw	r28, 0x01	; 1
     a98:	ec 16       	cp	r14, r28
     a9a:	fd 06       	cpc	r15, r29
     a9c:	54 f7       	brge	.-44     	; 0xa72 <drawball+0x56>

//draw the ball for pong
void drawball(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t color) {
	int r = 2;
	//int d;
	for(int i = x0-r; i<=x0+r; i++) {
     a9e:	0f 5f       	subi	r16, 0xFF	; 255
     aa0:	1f 4f       	sbci	r17, 0xFF	; 255
     aa2:	c0 16       	cp	r12, r16
     aa4:	d1 06       	cpc	r13, r17
     aa6:	0c f7       	brge	.-62     	; 0xa6a <drawball+0x4e>
			} else {
				setpixel(buff, i, j, color);
			}
		}
	}
}
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	1f 91       	pop	r17
     aae:	0f 91       	pop	r16
     ab0:	ff 90       	pop	r15
     ab2:	ef 90       	pop	r14
     ab4:	df 90       	pop	r13
     ab6:	cf 90       	pop	r12
     ab8:	bf 90       	pop	r11
     aba:	af 90       	pop	r10
     abc:	9f 90       	pop	r9
     abe:	8f 90       	pop	r8
     ac0:	7f 90       	pop	r7
     ac2:	6f 90       	pop	r6
     ac4:	5f 90       	pop	r5
     ac6:	08 95       	ret

00000ac8 <USART_init>:
}

//map function obtained from Arduino website to map one range to another
long map(long x, long in_min, long in_max, long out_min, long out_max) {
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
     ac8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     acc:	87 e6       	ldi	r24, 0x67	; 103
     ace:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     ad2:	88 e1       	ldi	r24, 0x18	; 24
     ad4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     ad8:	8e e0       	ldi	r24, 0x0E	; 14
     ada:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     ade:	08 95       	ret

00000ae0 <USART_send>:
     ae0:	e0 ec       	ldi	r30, 0xC0	; 192
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	90 81       	ld	r25, Z
     ae6:	95 ff       	sbrs	r25, 5
     ae8:	fd cf       	rjmp	.-6      	; 0xae4 <USART_send+0x4>
     aea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     aee:	08 95       	ret

00000af0 <USART_putstring>:
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	ec 01       	movw	r28, r24
     af6:	88 81       	ld	r24, Y
     af8:	88 23       	and	r24, r24
     afa:	31 f0       	breq	.+12     	; 0xb08 <USART_putstring+0x18>
     afc:	21 96       	adiw	r28, 0x01	; 1
     afe:	0e 94 70 05 	call	0xae0	; 0xae0 <USART_send>
     b02:	89 91       	ld	r24, Y+
     b04:	81 11       	cpse	r24, r1
     b06:	fb cf       	rjmp	.-10     	; 0xafe <USART_putstring+0xe>
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <readADC>:
     b0e:	ec e7       	ldi	r30, 0x7C	; 124
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	90 81       	ld	r25, Z
     b14:	9c 7f       	andi	r25, 0xFC	; 252
     b16:	90 83       	st	Z, r25
     b18:	90 81       	ld	r25, Z
     b1a:	89 2b       	or	r24, r25
     b1c:	80 83       	st	Z, r24
     b1e:	80 81       	ld	r24, Z
     b20:	80 64       	ori	r24, 0x40	; 64
     b22:	80 83       	st	Z, r24
     b24:	ea e7       	ldi	r30, 0x7A	; 122
     b26:	f0 e0       	ldi	r31, 0x00	; 0
     b28:	80 81       	ld	r24, Z
     b2a:	86 6c       	ori	r24, 0xC6	; 198
     b2c:	80 83       	st	Z, r24
     b2e:	80 81       	ld	r24, Z
     b30:	86 fd       	sbrc	r24, 6
     b32:	fd cf       	rjmp	.-6      	; 0xb2e <readADC+0x20>
     b34:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     b38:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__floatunsisf>
     b44:	08 95       	ret

00000b46 <touch>:


int touch() {
	PORTC = 0;
     b46:	18 b8       	out	0x08, r1	; 8
	DDRC = 0;
     b48:	17 b8       	out	0x07, r1	; 7
	DDRC &= ~((1 << PINC0) | (1 << PINC1) | (1 << PINC2) | (1 << PINC3));
     b4a:	87 b1       	in	r24, 0x07	; 7
     b4c:	80 7f       	andi	r24, 0xF0	; 240
     b4e:	87 b9       	out	0x07, r24	; 7
	//X+ A2 -> ground
	//DDRC |= (1 << PINC2); 
	//PORTC &= ~(1 << PINC2);
	
	//check if Y- is high, A3
	int r = readADC(3);
     b50:	83 e0       	ldi	r24, 0x03	; 3
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 87 05 	call	0xb0e	; 0xb0e <readADC>
	
	return r;
     b58:	0e 94 1d 09 	call	0x123a	; 0x123a <__fixsfsi>
}
     b5c:	cb 01       	movw	r24, r22
     b5e:	08 95       	ret

00000b60 <readTouch>:
	//PORTC = 0;
	//DDRC = 0;
	
	//X- A0, X+ A2, Y- A3, Y+ A1
	//1. To read X coordinate first, we will put X- and X+ in digital mode and set X- high and X+ low.
	DDRC |= (1 << PINC0) | (1 << PINC2);
     b60:	87 b1       	in	r24, 0x07	; 7
     b62:	85 60       	ori	r24, 0x05	; 5
     b64:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC0);
     b66:	40 9a       	sbi	0x08, 0	; 8
	PORTC &= ~(1 << PINC2);
     b68:	42 98       	cbi	0x08, 2	; 8
	//2. Then we set Y- , Y+ to ADC input mode and read the Y- ADC value as X coordinate on touchscreen
	DDRC &= ~((1 << PINC3) | (1 << PINC1));
     b6a:	87 b1       	in	r24, 0x07	; 7
     b6c:	85 7f       	andi	r24, 0xF5	; 245
     b6e:	87 b9       	out	0x07, r24	; 7
	touchX = readADC(3);
     b70:	83 e0       	ldi	r24, 0x03	; 3
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 87 05 	call	0xb0e	; 0xb0e <readADC>
     b78:	0e 94 1d 09 	call	0x123a	; 0x123a <__fixsfsi>
     b7c:	70 93 69 05 	sts	0x0569, r23	; 0x800569 <touchX+0x1>
     b80:	60 93 68 05 	sts	0x0568, r22	; 0x800568 <touchX>
	//3. Then we switch to read Y coordinate, for which we put Y- and Y+ to digital mode  and set Y+ to low and Y- to high.
	DDRC |= (1 << PINC3) | (1 << PINC1);
     b84:	87 b1       	in	r24, 0x07	; 7
     b86:	8a 60       	ori	r24, 0x0A	; 10
     b88:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC3);
     b8a:	43 9a       	sbi	0x08, 3	; 8
	PORTC &= ~(1 << PINC1);
     b8c:	41 98       	cbi	0x08, 1	; 8
	//4. Set X- and X+ to ADC input, read X- ADC as y coord
	DDRC &= ~((1 << PINC0) | (1 << PINC2));
     b8e:	87 b1       	in	r24, 0x07	; 7
     b90:	8a 7f       	andi	r24, 0xFA	; 250
     b92:	87 b9       	out	0x07, r24	; 7
	touchY = readADC(0);
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 87 05 	call	0xb0e	; 0xb0e <readADC>
     b9c:	0e 94 1d 09 	call	0x123a	; 0x123a <__fixsfsi>
     ba0:	70 93 67 05 	sts	0x0567, r23	; 0x800567 <touchY+0x1>
     ba4:	60 93 66 05 	sts	0x0566, r22	; 0x800566 <touchY>
     ba8:	08 95       	ret

00000baa <drawStage>:
	//turn off ports
	//PORTC = 0;
	
}

void drawStage() {
     baa:	ef 92       	push	r14
     bac:	0f 93       	push	r16
	drawrect(buff, 0,0,127, 63, 1);
     bae:	ee 24       	eor	r14, r14
     bb0:	e3 94       	inc	r14
     bb2:	0f e3       	ldi	r16, 0x3F	; 63
     bb4:	2f e7       	ldi	r18, 0x7F	; 127
     bb6:	40 e0       	ldi	r20, 0x00	; 0
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	84 e0       	ldi	r24, 0x04	; 4
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	0e 94 db 04 	call	0x9b6	; 0x9b6 <drawrect>
	drawchar(buff, 54,7, 48 + p1score);
     bc2:	20 91 62 05 	lds	r18, 0x0562	; 0x800562 <p1score>
     bc6:	20 5d       	subi	r18, 0xD0	; 208
     bc8:	47 e0       	ldi	r20, 0x07	; 7
     bca:	66 e3       	ldi	r22, 0x36	; 54
     bcc:	84 e0       	ldi	r24, 0x04	; 4
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	0e 94 8c 03 	call	0x718	; 0x718 <drawchar>
	drawchar(buff, 67, 7, 48 + p2score);
     bd4:	20 91 60 05 	lds	r18, 0x0560	; 0x800560 <p2score>
     bd8:	20 5d       	subi	r18, 0xD0	; 208
     bda:	47 e0       	ldi	r20, 0x07	; 7
     bdc:	63 e4       	ldi	r22, 0x43	; 67
     bde:	84 e0       	ldi	r24, 0x04	; 4
     be0:	91 e0       	ldi	r25, 0x01	; 1
     be2:	0e 94 8c 03 	call	0x718	; 0x718 <drawchar>
	
	//draw paddles
	fillrect(buff,player1.x, player1.y, player1.w, player1.h, 1);
     be6:	e0 e3       	ldi	r30, 0x30	; 48
     be8:	f5 e0       	ldi	r31, 0x05	; 5
     bea:	06 81       	ldd	r16, Z+6	; 0x06
     bec:	24 81       	ldd	r18, Z+4	; 0x04
     bee:	42 81       	ldd	r20, Z+2	; 0x02
     bf0:	60 81       	ld	r22, Z
     bf2:	84 e0       	ldi	r24, 0x04	; 4
     bf4:	91 e0       	ldi	r25, 0x01	; 1
     bf6:	0e 94 ab 04 	call	0x956	; 0x956 <fillrect>
	fillrect(buff,player2.x, player2.y, player2.w, player2.h, 1);
     bfa:	e6 e2       	ldi	r30, 0x26	; 38
     bfc:	f5 e0       	ldi	r31, 0x05	; 5
     bfe:	06 81       	ldd	r16, Z+6	; 0x06
     c00:	24 81       	ldd	r18, Z+4	; 0x04
     c02:	42 81       	ldd	r20, Z+2	; 0x02
     c04:	60 81       	ld	r22, Z
     c06:	84 e0       	ldi	r24, 0x04	; 4
     c08:	91 e0       	ldi	r25, 0x01	; 1
     c0a:	0e 94 ab 04 	call	0x956	; 0x956 <fillrect>
	
	//draw the ball (and past balls)
	for (int i = 0; i < lenpastpos; i++) {
     c0e:	80 91 40 05 	lds	r24, 0x0540	; 0x800540 <lenpastpos>
     c12:	90 91 41 05 	lds	r25, 0x0541	; 0x800541 <lenpastpos+0x1>
     c16:	18 16       	cp	r1, r24
     c18:	19 06       	cpc	r1, r25
     c1a:	4c f4       	brge	.+18     	; 0xc2e <drawStage+0x84>
		drawball(buff, pastposx[i], pastposy[i], 1);
     c1c:	21 e0       	ldi	r18, 0x01	; 1
     c1e:	40 91 84 05 	lds	r20, 0x0584	; 0x800584 <pastposy>
     c22:	60 91 82 05 	lds	r22, 0x0582	; 0x800582 <pastposx>
     c26:	84 e0       	ldi	r24, 0x04	; 4
     c28:	91 e0       	ldi	r25, 0x01	; 1
     c2a:	0e 94 0e 05 	call	0xa1c	; 0xa1c <drawball>
	}

}
     c2e:	0f 91       	pop	r16
     c30:	ef 90       	pop	r14
     c32:	08 95       	ret

00000c34 <serve>:

void serve() {
	long r = rand()-1;
     c34:	0e 94 b9 0a 	call	0x1572	; 0x1572 <rand>
	return ADC;
}

//map function obtained from Arduino website to map one range to another
long map(long x, long in_min, long in_max, long out_min, long out_max) {
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	09 2e       	mov	r0, r25
     c3c:	00 0c       	add	r0, r0
     c3e:	aa 0b       	sbc	r26, r26
     c40:	bb 0b       	sbc	r27, r27
     c42:	01 96       	adiw	r24, 0x01	; 1
     c44:	a1 1d       	adc	r26, r1
     c46:	b1 1d       	adc	r27, r1
}

void serve() {
	long r = rand()-1;
	int sign;
	sign = map(r, -1, RAND_MAX, 0,2);
     c48:	ac 01       	movw	r20, r24
     c4a:	bd 01       	movw	r22, r26
     c4c:	44 0f       	add	r20, r20
     c4e:	55 1f       	adc	r21, r21
     c50:	66 1f       	adc	r22, r22
     c52:	77 1f       	adc	r23, r23
     c54:	b6 ff       	sbrs	r27, 6
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <serve+0x2c>
     c58:	41 50       	subi	r20, 0x01	; 1
     c5a:	50 48       	sbci	r21, 0x80	; 128
     c5c:	6f 4f       	sbci	r22, 0xFF	; 255
     c5e:	7f 4f       	sbci	r23, 0xFF	; 255
     c60:	03 2e       	mov	r0, r19
     c62:	3f e0       	ldi	r19, 0x0F	; 15
     c64:	75 95       	asr	r23
     c66:	67 95       	ror	r22
     c68:	57 95       	ror	r21
     c6a:	47 95       	ror	r20
     c6c:	3a 95       	dec	r19
     c6e:	d1 f7       	brne	.-12     	; 0xc64 <serve+0x30>
     c70:	30 2d       	mov	r19, r0
     c72:	9a 01       	movw	r18, r20
	if (sign == 0) {
     c74:	45 2b       	or	r20, r21
     c76:	11 f4       	brne	.+4      	; 0xc7c <serve+0x48>
		sign = -1;
     c78:	2f ef       	ldi	r18, 0xFF	; 255
     c7a:	3f ef       	ldi	r19, 0xFF	; 255
	}
	long veli;
	veli = map(r, -1, RAND_MAX, 0, 3);
	ball0.vx = sign*ballvels[veli];
     c7c:	ac 01       	movw	r20, r24
     c7e:	bd 01       	movw	r22, r26
     c80:	44 0f       	add	r20, r20
     c82:	55 1f       	adc	r21, r21
     c84:	66 1f       	adc	r22, r22
     c86:	77 1f       	adc	r23, r23
     c88:	84 0f       	add	r24, r20
     c8a:	95 1f       	adc	r25, r21
     c8c:	a6 1f       	adc	r26, r22
     c8e:	b7 1f       	adc	r27, r23
     c90:	ac 01       	movw	r20, r24
     c92:	bd 01       	movw	r22, r26
     c94:	bb 23       	and	r27, r27
     c96:	24 f4       	brge	.+8      	; 0xca0 <serve+0x6c>
     c98:	41 50       	subi	r20, 0x01	; 1
     c9a:	50 48       	sbci	r21, 0x80	; 128
     c9c:	6f 4f       	sbci	r22, 0xFF	; 255
     c9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ca0:	03 2e       	mov	r0, r19
     ca2:	3f e0       	ldi	r19, 0x0F	; 15
     ca4:	75 95       	asr	r23
     ca6:	67 95       	ror	r22
     ca8:	57 95       	ror	r21
     caa:	47 95       	ror	r20
     cac:	3a 95       	dec	r19
     cae:	d1 f7       	brne	.-12     	; 0xca4 <serve+0x70>
     cb0:	30 2d       	mov	r19, r0
     cb2:	44 0f       	add	r20, r20
     cb4:	55 1f       	adc	r21, r21
     cb6:	fa 01       	movw	r30, r20
     cb8:	e6 5c       	subi	r30, 0xC6	; 198
     cba:	fa 4f       	sbci	r31, 0xFA	; 250
     cbc:	40 81       	ld	r20, Z
     cbe:	51 81       	ldd	r21, Z+1	; 0x01
     cc0:	24 9f       	mul	r18, r20
     cc2:	c0 01       	movw	r24, r0
     cc4:	25 9f       	mul	r18, r21
     cc6:	90 0d       	add	r25, r0
     cc8:	34 9f       	mul	r19, r20
     cca:	90 0d       	add	r25, r0
     ccc:	11 24       	eor	r1, r1
     cce:	90 93 23 05 	sts	0x0523, r25	; 0x800523 <ball0+0x7>
     cd2:	80 93 22 05 	sts	0x0522, r24	; 0x800522 <ball0+0x6>
	//sprintf(strbuff, "range: %d \n", r);
	//USART_putstring(strbuff);
	//sprintf(strbuff, "veli: %ld \n", veli);
	//USART_putstring(strbuff);
	sprintf(strbuff, "vx: %d \n", ball0.vx);
     cd6:	9f 93       	push	r25
     cd8:	8f 93       	push	r24
     cda:	82 e4       	ldi	r24, 0x42	; 66
     cdc:	95 e0       	ldi	r25, 0x05	; 5
     cde:	9f 93       	push	r25
     ce0:	8f 93       	push	r24
     ce2:	8e e6       	ldi	r24, 0x6E	; 110
     ce4:	95 e0       	ldi	r25, 0x05	; 5
     ce6:	9f 93       	push	r25
     ce8:	8f 93       	push	r24
     cea:	0e 94 c9 0a 	call	0x1592	; 0x1592 <sprintf>
	USART_putstring(strbuff);
     cee:	8e e6       	ldi	r24, 0x6E	; 110
     cf0:	95 e0       	ldi	r25, 0x05	; 5
     cf2:	0e 94 78 05 	call	0xaf0	; 0xaf0 <USART_putstring>
}
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	0f 90       	pop	r0
     cfe:	0f 90       	pop	r0
     d00:	0f 90       	pop	r0
     d02:	08 95       	ret

00000d04 <newpos>:

void newpos(long t) {
     d04:	0f 93       	push	r16
     d06:	1f 93       	push	r17
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
	ball0.x += ball0.vx;
     d0c:	ec e1       	ldi	r30, 0x1C	; 28
     d0e:	f5 e0       	ldi	r31, 0x05	; 5
     d10:	00 81       	ld	r16, Z
     d12:	11 81       	ldd	r17, Z+1	; 0x01
     d14:	26 81       	ldd	r18, Z+6	; 0x06
     d16:	37 81       	ldd	r19, Z+7	; 0x07
     d18:	02 0f       	add	r16, r18
     d1a:	13 1f       	adc	r17, r19
     d1c:	11 83       	std	Z+1, r17	; 0x01
     d1e:	00 83       	st	Z, r16
	ball0.y += ball0.vy;
     d20:	c2 81       	ldd	r28, Z+2	; 0x02
     d22:	d3 81       	ldd	r29, Z+3	; 0x03
     d24:	20 85       	ldd	r18, Z+8	; 0x08
     d26:	31 85       	ldd	r19, Z+9	; 0x09
     d28:	c2 0f       	add	r28, r18
     d2a:	d3 1f       	adc	r29, r19
     d2c:	d3 83       	std	Z+3, r29	; 0x03
     d2e:	c2 83       	std	Z+2, r28	; 0x02
	int i = t % lenpastpos;
     d30:	20 91 40 05 	lds	r18, 0x0540	; 0x800540 <lenpastpos>
     d34:	30 91 41 05 	lds	r19, 0x0541	; 0x800541 <lenpastpos+0x1>
     d38:	03 2e       	mov	r0, r19
     d3a:	00 0c       	add	r0, r0
     d3c:	44 0b       	sbc	r20, r20
     d3e:	55 0b       	sbc	r21, r21
     d40:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__divmodsi4>
	pastposx[i] = ball0.x;
     d44:	66 0f       	add	r22, r22
     d46:	77 1f       	adc	r23, r23
     d48:	fb 01       	movw	r30, r22
     d4a:	ee 57       	subi	r30, 0x7E	; 126
     d4c:	fa 4f       	sbci	r31, 0xFA	; 250
     d4e:	11 83       	std	Z+1, r17	; 0x01
     d50:	00 83       	st	Z, r16
	pastposy[i] = ball0.y;
     d52:	fb 01       	movw	r30, r22
     d54:	ec 57       	subi	r30, 0x7C	; 124
     d56:	fa 4f       	sbci	r31, 0xFA	; 250
     d58:	d1 83       	std	Z+1, r29	; 0x01
     d5a:	c0 83       	st	Z, r28
	
	player1.y += player1.v;
     d5c:	e0 e3       	ldi	r30, 0x30	; 48
     d5e:	f5 e0       	ldi	r31, 0x05	; 5
     d60:	22 81       	ldd	r18, Z+2	; 0x02
     d62:	33 81       	ldd	r19, Z+3	; 0x03
     d64:	80 85       	ldd	r24, Z+8	; 0x08
     d66:	91 85       	ldd	r25, Z+9	; 0x09
     d68:	28 0f       	add	r18, r24
     d6a:	39 1f       	adc	r19, r25
     d6c:	33 83       	std	Z+3, r19	; 0x03
     d6e:	22 83       	std	Z+2, r18	; 0x02
	player2.y += player2.v;
     d70:	e6 e2       	ldi	r30, 0x26	; 38
     d72:	f5 e0       	ldi	r31, 0x05	; 5
     d74:	42 81       	ldd	r20, Z+2	; 0x02
     d76:	53 81       	ldd	r21, Z+3	; 0x03
     d78:	80 85       	ldd	r24, Z+8	; 0x08
     d7a:	91 85       	ldd	r25, Z+9	; 0x09
     d7c:	84 0f       	add	r24, r20
     d7e:	95 1f       	adc	r25, r21
     d80:	93 83       	std	Z+3, r25	; 0x03
     d82:	82 83       	std	Z+2, r24	; 0x02
	//make sure it's not exiting the bounds
	if (player1.y < 1) {
     d84:	12 16       	cp	r1, r18
     d86:	13 06       	cpc	r1, r19
     d88:	3c f0       	brlt	.+14     	; 0xd98 <newpos+0x94>
		player1.y = 1;
     d8a:	21 e0       	ldi	r18, 0x01	; 1
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	30 93 33 05 	sts	0x0533, r19	; 0x800533 <player1+0x3>
     d92:	20 93 32 05 	sts	0x0532, r18	; 0x800532 <player1+0x2>
     d96:	0f c0       	rjmp	.+30     	; 0xdb6 <newpos+0xb2>
	}
	else if (player1.y > 63 - player1.h) {
     d98:	60 91 36 05 	lds	r22, 0x0536	; 0x800536 <player1+0x6>
     d9c:	70 91 37 05 	lds	r23, 0x0537	; 0x800537 <player1+0x7>
     da0:	4f e3       	ldi	r20, 0x3F	; 63
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	46 1b       	sub	r20, r22
     da6:	57 0b       	sbc	r21, r23
     da8:	42 17       	cp	r20, r18
     daa:	53 07       	cpc	r21, r19
     dac:	24 f4       	brge	.+8      	; 0xdb6 <newpos+0xb2>
		player1.y = 63 - player1.h;
     dae:	50 93 33 05 	sts	0x0533, r21	; 0x800533 <player1+0x3>
     db2:	40 93 32 05 	sts	0x0532, r20	; 0x800532 <player1+0x2>
	}
	if (player2.y < 1) {
     db6:	18 16       	cp	r1, r24
     db8:	19 06       	cpc	r1, r25
     dba:	3c f0       	brlt	.+14     	; 0xdca <newpos+0xc6>
		player2.y = 1;
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	90 93 29 05 	sts	0x0529, r25	; 0x800529 <player2+0x3>
     dc4:	80 93 28 05 	sts	0x0528, r24	; 0x800528 <player2+0x2>
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <newpos+0xe4>
	}
	else if (player2.y > 63 - player2.h) {
     dca:	40 91 2c 05 	lds	r20, 0x052C	; 0x80052c <player2+0x6>
     dce:	50 91 2d 05 	lds	r21, 0x052D	; 0x80052d <player2+0x7>
     dd2:	2f e3       	ldi	r18, 0x3F	; 63
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	24 1b       	sub	r18, r20
     dd8:	35 0b       	sbc	r19, r21
     dda:	28 17       	cp	r18, r24
     ddc:	39 07       	cpc	r19, r25
     dde:	24 f4       	brge	.+8      	; 0xde8 <newpos+0xe4>
		player2.y = 63 - player2.h;
     de0:	30 93 29 05 	sts	0x0529, r19	; 0x800529 <player2+0x3>
     de4:	20 93 28 05 	sts	0x0528, r18	; 0x800528 <player2+0x2>
	}
}
     de8:	df 91       	pop	r29
     dea:	cf 91       	pop	r28
     dec:	1f 91       	pop	r17
     dee:	0f 91       	pop	r16
     df0:	08 95       	ret

00000df2 <twoplayers_move>:

void twoplayers_move() {
     df2:	8f 92       	push	r8
     df4:	9f 92       	push	r9
     df6:	af 92       	push	r10
     df8:	bf 92       	push	r11
     dfa:	cf 92       	push	r12
     dfc:	df 92       	push	r13
     dfe:	ef 92       	push	r14
     e00:	ff 92       	push	r15
     e02:	0f 93       	push	r16
     e04:	1f 93       	push	r17
	readTouch();
     e06:	0e 94 b0 05 	call	0xb60	; 0xb60 <readTouch>
	drawX = map((long)touchX, (long)inxmin, (long)inxmax, 0, 127);
     e0a:	c0 90 1a 05 	lds	r12, 0x051A	; 0x80051a <inxmin>
     e0e:	d0 90 1b 05 	lds	r13, 0x051B	; 0x80051b <inxmin+0x1>
     e12:	0d 2c       	mov	r0, r13
     e14:	00 0c       	add	r0, r0
     e16:	ee 08       	sbc	r14, r14
     e18:	ff 08       	sbc	r15, r15
     e1a:	20 91 68 05 	lds	r18, 0x0568	; 0x800568 <touchX>
     e1e:	30 91 69 05 	lds	r19, 0x0569	; 0x800569 <touchX+0x1>
     e22:	c9 01       	movw	r24, r18
     e24:	33 0f       	add	r19, r19
     e26:	aa 0b       	sbc	r26, r26
     e28:	bb 0b       	sbc	r27, r27
     e2a:	9c 01       	movw	r18, r24
     e2c:	ad 01       	movw	r20, r26
     e2e:	2c 19       	sub	r18, r12
     e30:	3d 09       	sbc	r19, r13
     e32:	4e 09       	sbc	r20, r14
     e34:	5f 09       	sbc	r21, r15
     e36:	af e7       	ldi	r26, 0x7F	; 127
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	0e 94 29 0a 	call	0x1452	; 0x1452 <__muluhisi3>
     e3e:	20 91 18 05 	lds	r18, 0x0518	; 0x800518 <inxmax>
     e42:	30 91 19 05 	lds	r19, 0x0519	; 0x800519 <inxmax+0x1>
     e46:	89 01       	movw	r16, r18
     e48:	33 0f       	add	r19, r19
     e4a:	22 0b       	sbc	r18, r18
     e4c:	33 0b       	sbc	r19, r19
     e4e:	a9 01       	movw	r20, r18
     e50:	98 01       	movw	r18, r16
     e52:	2c 19       	sub	r18, r12
     e54:	3d 09       	sbc	r19, r13
     e56:	4e 09       	sbc	r20, r14
     e58:	5f 09       	sbc	r21, r15
     e5a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__divmodsi4>
     e5e:	69 01       	movw	r12, r18
     e60:	7a 01       	movw	r14, r20
     e62:	30 93 5f 05 	sts	0x055F, r19	; 0x80055f <drawX+0x1>
     e66:	20 93 5e 05 	sts	0x055E, r18	; 0x80055e <drawX>
	drawY = map((long)touchY, (long)inymin, (long)inymax, 63, 0);
     e6a:	80 90 16 05 	lds	r8, 0x0516	; 0x800516 <inymin>
     e6e:	90 90 17 05 	lds	r9, 0x0517	; 0x800517 <inymin+0x1>
     e72:	09 2c       	mov	r0, r9
     e74:	00 0c       	add	r0, r0
     e76:	aa 08       	sbc	r10, r10
     e78:	bb 08       	sbc	r11, r11
     e7a:	20 91 66 05 	lds	r18, 0x0566	; 0x800566 <touchY>
     e7e:	30 91 67 05 	lds	r19, 0x0567	; 0x800567 <touchY+0x1>
     e82:	c9 01       	movw	r24, r18
     e84:	33 0f       	add	r19, r19
     e86:	aa 0b       	sbc	r26, r26
     e88:	bb 0b       	sbc	r27, r27
     e8a:	9c 01       	movw	r18, r24
     e8c:	ad 01       	movw	r20, r26
     e8e:	28 19       	sub	r18, r8
     e90:	39 09       	sbc	r19, r9
     e92:	4a 09       	sbc	r20, r10
     e94:	5b 09       	sbc	r21, r11
     e96:	a1 ec       	ldi	r26, 0xC1	; 193
     e98:	bf ef       	ldi	r27, 0xFF	; 255
     e9a:	0e 94 37 0a 	call	0x146e	; 0x146e <__mulohisi3>
     e9e:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <inymax>
     ea2:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <inymax+0x1>
     ea6:	89 01       	movw	r16, r18
     ea8:	33 0f       	add	r19, r19
     eaa:	22 0b       	sbc	r18, r18
     eac:	33 0b       	sbc	r19, r19
     eae:	a9 01       	movw	r20, r18
     eb0:	98 01       	movw	r18, r16
     eb2:	28 19       	sub	r18, r8
     eb4:	39 09       	sbc	r19, r9
     eb6:	4a 09       	sbc	r20, r10
     eb8:	5b 09       	sbc	r21, r11
     eba:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__divmodsi4>
     ebe:	ba 01       	movw	r22, r20
     ec0:	a9 01       	movw	r20, r18
     ec2:	41 5c       	subi	r20, 0xC1	; 193
     ec4:	5f 4f       	sbci	r21, 0xFF	; 255
     ec6:	6f 4f       	sbci	r22, 0xFF	; 255
     ec8:	7f 4f       	sbci	r23, 0xFF	; 255
     eca:	50 93 5d 05 	sts	0x055D, r21	; 0x80055d <__data_end+0x1>
     ece:	40 93 5c 05 	sts	0x055C, r20	; 0x80055c <__data_end>
	if (drawX < 63) { //player 1
     ed2:	2f e3       	ldi	r18, 0x3F	; 63
     ed4:	c2 16       	cp	r12, r18
     ed6:	d1 04       	cpc	r13, r1
     ed8:	8c f4       	brge	.+34     	; 0xefc <twoplayers_move+0x10a>
		if (drawY < 31) {
     eda:	4f 31       	cpi	r20, 0x1F	; 31
     edc:	51 05       	cpc	r21, r1
     ede:	3c f4       	brge	.+14     	; 0xeee <twoplayers_move+0xfc>
			//player1 moves up (decreases y)
			player1.v = -1;
     ee0:	8f ef       	ldi	r24, 0xFF	; 255
     ee2:	9f ef       	ldi	r25, 0xFF	; 255
     ee4:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <player1+0x9>
     ee8:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <player1+0x8>
     eec:	17 c0       	rjmp	.+46     	; 0xf1c <twoplayers_move+0x12a>
		}
		else {
			player1.v = 1;
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <player1+0x9>
     ef6:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <player1+0x8>
     efa:	10 c0       	rjmp	.+32     	; 0xf1c <twoplayers_move+0x12a>
		}
	}
	else { //player 2
		if (drawY < 31) {
     efc:	4f 31       	cpi	r20, 0x1F	; 31
     efe:	51 05       	cpc	r21, r1
     f00:	3c f4       	brge	.+14     	; 0xf10 <twoplayers_move+0x11e>
			//player1 moves up (decreases y)
			player2.v = -1;
     f02:	8f ef       	ldi	r24, 0xFF	; 255
     f04:	9f ef       	ldi	r25, 0xFF	; 255
     f06:	90 93 2f 05 	sts	0x052F, r25	; 0x80052f <player2+0x9>
     f0a:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <player2+0x8>
     f0e:	06 c0       	rjmp	.+12     	; 0xf1c <twoplayers_move+0x12a>
		}
		else {
			player2.v = 1;
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	90 93 2f 05 	sts	0x052F, r25	; 0x80052f <player2+0x9>
     f18:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <player2+0x8>
		}
	}
}
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	df 90       	pop	r13
     f26:	cf 90       	pop	r12
     f28:	bf 90       	pop	r11
     f2a:	af 90       	pop	r10
     f2c:	9f 90       	pop	r9
     f2e:	8f 90       	pop	r8
     f30:	08 95       	ret

00000f32 <main>:

int main(void)
{
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	cd b7       	in	r28, 0x3d	; 61
     f38:	de b7       	in	r29, 0x3e	; 62
     f3a:	60 97       	sbiw	r28, 0x10	; 16
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	f8 94       	cli
     f40:	de bf       	out	0x3e, r29	; 62
     f42:	0f be       	out	0x3f, r0	; 63
     f44:	cd bf       	out	0x3d, r28	; 61
	USART_init();
     f46:	0e 94 64 05 	call	0xac8	; 0xac8 <USART_init>
	//setting up the gpio for backlight
	DDRD |= 0x80;
     f4a:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
     f4c:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
     f4e:	8b b1       	in	r24, 0x0b	; 11
     f50:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
     f52:	84 b1       	in	r24, 0x04	; 4
     f54:	85 60       	ori	r24, 0x05	; 5
     f56:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
     f58:	85 b1       	in	r24, 0x05	; 5
     f5a:	8a 7f       	andi	r24, 0xFA	; 250
     f5c:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
     f5e:	85 b1       	in	r24, 0x05	; 5
     f60:	85 b9       	out	0x05, r24	; 5
	
	//lcd initialisation
	lcd_init();
     f62:	0e 94 e7 02 	call	0x5ce	; 0x5ce <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
     f66:	8f ea       	ldi	r24, 0xAF	; 175
     f68:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
	lcd_set_brightness(0x18);
     f6c:	88 e1       	ldi	r24, 0x18	; 24
     f6e:	0e 94 39 03 	call	0x672	; 0x672 <lcd_set_brightness>
	write_buffer(buff);
     f72:	84 e0       	ldi	r24, 0x04	; 4
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 44 03 	call	0x688	; 0x688 <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f7a:	2f ef       	ldi	r18, 0xFF	; 255
     f7c:	81 ee       	ldi	r24, 0xE1	; 225
     f7e:	94 e0       	ldi	r25, 0x04	; 4
     f80:	21 50       	subi	r18, 0x01	; 1
     f82:	80 40       	sbci	r24, 0x00	; 0
     f84:	90 40       	sbci	r25, 0x00	; 0
     f86:	e1 f7       	brne	.-8      	; 0xf80 <main+0x4e>
     f88:	00 c0       	rjmp	.+0      	; 0xf8a <main+0x58>
     f8a:	00 00       	nop
	_delay_ms(100); //10k
	clear_buffer(buff);
     f8c:	84 e0       	ldi	r24, 0x04	; 4
     f8e:	91 e0       	ldi	r25, 0x01	; 1
     f90:	0e 94 83 03 	call	0x706	; 0x706 <clear_buffer>
	write_buffer(buff);
     f94:	84 e0       	ldi	r24, 0x04	; 4
     f96:	91 e0       	ldi	r25, 0x01	; 1
     f98:	0e 94 44 03 	call	0x688	; 0x688 <write_buffer>
     f9c:	ef ef       	ldi	r30, 0xFF	; 255
     f9e:	f3 ed       	ldi	r31, 0xD3	; 211
     fa0:	20 e3       	ldi	r18, 0x30	; 48
     fa2:	e1 50       	subi	r30, 0x01	; 1
     fa4:	f0 40       	sbci	r31, 0x00	; 0
     fa6:	20 40       	sbci	r18, 0x00	; 0
     fa8:	e1 f7       	brne	.-8      	; 0xfa2 <main+0x70>
     faa:	00 c0       	rjmp	.+0      	; 0xfac <main+0x7a>
     fac:	00 00       	nop
	_delay_ms(1000);
	
	char String[] = "Hello, world! \n";
     fae:	20 e1       	ldi	r18, 0x10	; 16
     fb0:	eb e4       	ldi	r30, 0x4B	; 75
     fb2:	f5 e0       	ldi	r31, 0x05	; 5
     fb4:	ce 01       	movw	r24, r28
     fb6:	01 96       	adiw	r24, 0x01	; 1
     fb8:	dc 01       	movw	r26, r24
     fba:	01 90       	ld	r0, Z+
     fbc:	0d 92       	st	X+, r0
     fbe:	2a 95       	dec	r18
     fc0:	e1 f7       	brne	.-8      	; 0xfba <main+0x88>
	sprintf(strbuff, String);
     fc2:	9f 93       	push	r25
     fc4:	8f 93       	push	r24
     fc6:	8e e6       	ldi	r24, 0x6E	; 110
     fc8:	95 e0       	ldi	r25, 0x05	; 5
     fca:	9f 93       	push	r25
     fcc:	8f 93       	push	r24
     fce:	0e 94 c9 0a 	call	0x1592	; 0x1592 <sprintf>
	USART_putstring(strbuff);
     fd2:	8e e6       	ldi	r24, 0x6E	; 110
     fd4:	95 e0       	ldi	r25, 0x05	; 5
     fd6:	0e 94 78 05 	call	0xaf0	; 0xaf0 <USART_putstring>
	
	serve();
     fda:	0e 94 1a 06 	call	0xc34	; 0xc34 <serve>
     fde:	0f 90       	pop	r0
     fe0:	0f 90       	pop	r0
     fe2:	0f 90       	pop	r0
     fe4:	0f 90       	pop	r0
		touchIn = touch();		
		if(touchIn > 150) {
			twoplayers_move();
		}
		else {
			player1.v = 0;
     fe6:	0f 2e       	mov	r0, r31
     fe8:	f0 e3       	ldi	r31, 0x30	; 48
     fea:	ef 2e       	mov	r14, r31
     fec:	f5 e0       	ldi	r31, 0x05	; 5
     fee:	ff 2e       	mov	r15, r31
     ff0:	f0 2d       	mov	r31, r0
			player2.v = 0;
     ff2:	06 e2       	ldi	r16, 0x26	; 38
     ff4:	15 e0       	ldi	r17, 0x05	; 5
	
	
	while (1)
	{
		
		touchIn = touch();		
     ff6:	0e 94 a3 05 	call	0xb46	; 0xb46 <touch>
     ffa:	90 93 65 05 	sts	0x0565, r25	; 0x800565 <touchIn+0x1>
     ffe:	80 93 64 05 	sts	0x0564, r24	; 0x800564 <touchIn>
		if(touchIn > 150) {
    1002:	87 39       	cpi	r24, 0x97	; 151
    1004:	91 05       	cpc	r25, r1
    1006:	1c f0       	brlt	.+6      	; 0x100e <main+0xdc>
			twoplayers_move();
    1008:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <twoplayers_move>
    100c:	06 c0       	rjmp	.+12     	; 0x101a <main+0xe8>
		}
		else {
			player1.v = 0;
    100e:	f7 01       	movw	r30, r14
    1010:	11 86       	std	Z+9, r1	; 0x09
    1012:	10 86       	std	Z+8, r1	; 0x08
			player2.v = 0;
    1014:	f8 01       	movw	r30, r16
    1016:	11 86       	std	Z+9, r1	; 0x09
    1018:	10 86       	std	Z+8, r1	; 0x08
		}
		clear_buffer(buff);
    101a:	84 e0       	ldi	r24, 0x04	; 4
    101c:	91 e0       	ldi	r25, 0x01	; 1
    101e:	0e 94 83 03 	call	0x706	; 0x706 <clear_buffer>
		newpos(t);
    1022:	60 91 6a 05 	lds	r22, 0x056A	; 0x80056a <t>
    1026:	70 91 6b 05 	lds	r23, 0x056B	; 0x80056b <t+0x1>
    102a:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <t+0x2>
    102e:	90 91 6d 05 	lds	r25, 0x056D	; 0x80056d <t+0x3>
    1032:	0e 94 82 06 	call	0xd04	; 0xd04 <newpos>
		drawStage();
    1036:	0e 94 d5 05 	call	0xbaa	; 0xbaa <drawStage>
		write_buffer(buff);
    103a:	84 e0       	ldi	r24, 0x04	; 4
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	0e 94 44 03 	call	0x688	; 0x688 <write_buffer>
    1042:	ff ef       	ldi	r31, 0xFF	; 255
    1044:	20 e7       	ldi	r18, 0x70	; 112
    1046:	82 e0       	ldi	r24, 0x02	; 2
    1048:	f1 50       	subi	r31, 0x01	; 1
    104a:	20 40       	sbci	r18, 0x00	; 0
    104c:	80 40       	sbci	r24, 0x00	; 0
    104e:	e1 f7       	brne	.-8      	; 0x1048 <main+0x116>
    1050:	00 c0       	rjmp	.+0      	; 0x1052 <main+0x120>
    1052:	00 00       	nop
		_delay_ms(50);
		t++;
    1054:	80 91 6a 05 	lds	r24, 0x056A	; 0x80056a <t>
    1058:	90 91 6b 05 	lds	r25, 0x056B	; 0x80056b <t+0x1>
    105c:	a0 91 6c 05 	lds	r26, 0x056C	; 0x80056c <t+0x2>
    1060:	b0 91 6d 05 	lds	r27, 0x056D	; 0x80056d <t+0x3>
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	a1 1d       	adc	r26, r1
    1068:	b1 1d       	adc	r27, r1
    106a:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <t>
    106e:	90 93 6b 05 	sts	0x056B, r25	; 0x80056b <t+0x1>
    1072:	a0 93 6c 05 	sts	0x056C, r26	; 0x80056c <t+0x2>
    1076:	b0 93 6d 05 	sts	0x056D, r27	; 0x80056d <t+0x3>

	}
    107a:	bd cf       	rjmp	.-134    	; 0xff6 <main+0xc4>

0000107c <__subsf3>:
    107c:	50 58       	subi	r21, 0x80	; 128

0000107e <__addsf3>:
    107e:	bb 27       	eor	r27, r27
    1080:	aa 27       	eor	r26, r26
    1082:	0e 94 56 08 	call	0x10ac	; 0x10ac <__addsf3x>
    1086:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__fp_round>
    108a:	0e 94 bd 09 	call	0x137a	; 0x137a <__fp_pscA>
    108e:	38 f0       	brcs	.+14     	; 0x109e <__addsf3+0x20>
    1090:	0e 94 c4 09 	call	0x1388	; 0x1388 <__fp_pscB>
    1094:	20 f0       	brcs	.+8      	; 0x109e <__addsf3+0x20>
    1096:	39 f4       	brne	.+14     	; 0x10a6 <__addsf3+0x28>
    1098:	9f 3f       	cpi	r25, 0xFF	; 255
    109a:	19 f4       	brne	.+6      	; 0x10a2 <__addsf3+0x24>
    109c:	26 f4       	brtc	.+8      	; 0x10a6 <__addsf3+0x28>
    109e:	0c 94 ba 09 	jmp	0x1374	; 0x1374 <__fp_nan>
    10a2:	0e f4       	brtc	.+2      	; 0x10a6 <__addsf3+0x28>
    10a4:	e0 95       	com	r30
    10a6:	e7 fb       	bst	r30, 7
    10a8:	0c 94 b4 09 	jmp	0x1368	; 0x1368 <__fp_inf>

000010ac <__addsf3x>:
    10ac:	e9 2f       	mov	r30, r25
    10ae:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__fp_split3>
    10b2:	58 f3       	brcs	.-42     	; 0x108a <__addsf3+0xc>
    10b4:	ba 17       	cp	r27, r26
    10b6:	62 07       	cpc	r22, r18
    10b8:	73 07       	cpc	r23, r19
    10ba:	84 07       	cpc	r24, r20
    10bc:	95 07       	cpc	r25, r21
    10be:	20 f0       	brcs	.+8      	; 0x10c8 <__addsf3x+0x1c>
    10c0:	79 f4       	brne	.+30     	; 0x10e0 <__addsf3x+0x34>
    10c2:	a6 f5       	brtc	.+104    	; 0x112c <__addsf3x+0x80>
    10c4:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__fp_zero>
    10c8:	0e f4       	brtc	.+2      	; 0x10cc <__addsf3x+0x20>
    10ca:	e0 95       	com	r30
    10cc:	0b 2e       	mov	r0, r27
    10ce:	ba 2f       	mov	r27, r26
    10d0:	a0 2d       	mov	r26, r0
    10d2:	0b 01       	movw	r0, r22
    10d4:	b9 01       	movw	r22, r18
    10d6:	90 01       	movw	r18, r0
    10d8:	0c 01       	movw	r0, r24
    10da:	ca 01       	movw	r24, r20
    10dc:	a0 01       	movw	r20, r0
    10de:	11 24       	eor	r1, r1
    10e0:	ff 27       	eor	r31, r31
    10e2:	59 1b       	sub	r21, r25
    10e4:	99 f0       	breq	.+38     	; 0x110c <__addsf3x+0x60>
    10e6:	59 3f       	cpi	r21, 0xF9	; 249
    10e8:	50 f4       	brcc	.+20     	; 0x10fe <__addsf3x+0x52>
    10ea:	50 3e       	cpi	r21, 0xE0	; 224
    10ec:	68 f1       	brcs	.+90     	; 0x1148 <__addsf3x+0x9c>
    10ee:	1a 16       	cp	r1, r26
    10f0:	f0 40       	sbci	r31, 0x00	; 0
    10f2:	a2 2f       	mov	r26, r18
    10f4:	23 2f       	mov	r18, r19
    10f6:	34 2f       	mov	r19, r20
    10f8:	44 27       	eor	r20, r20
    10fa:	58 5f       	subi	r21, 0xF8	; 248
    10fc:	f3 cf       	rjmp	.-26     	; 0x10e4 <__addsf3x+0x38>
    10fe:	46 95       	lsr	r20
    1100:	37 95       	ror	r19
    1102:	27 95       	ror	r18
    1104:	a7 95       	ror	r26
    1106:	f0 40       	sbci	r31, 0x00	; 0
    1108:	53 95       	inc	r21
    110a:	c9 f7       	brne	.-14     	; 0x10fe <__addsf3x+0x52>
    110c:	7e f4       	brtc	.+30     	; 0x112c <__addsf3x+0x80>
    110e:	1f 16       	cp	r1, r31
    1110:	ba 0b       	sbc	r27, r26
    1112:	62 0b       	sbc	r22, r18
    1114:	73 0b       	sbc	r23, r19
    1116:	84 0b       	sbc	r24, r20
    1118:	ba f0       	brmi	.+46     	; 0x1148 <__addsf3x+0x9c>
    111a:	91 50       	subi	r25, 0x01	; 1
    111c:	a1 f0       	breq	.+40     	; 0x1146 <__addsf3x+0x9a>
    111e:	ff 0f       	add	r31, r31
    1120:	bb 1f       	adc	r27, r27
    1122:	66 1f       	adc	r22, r22
    1124:	77 1f       	adc	r23, r23
    1126:	88 1f       	adc	r24, r24
    1128:	c2 f7       	brpl	.-16     	; 0x111a <__addsf3x+0x6e>
    112a:	0e c0       	rjmp	.+28     	; 0x1148 <__addsf3x+0x9c>
    112c:	ba 0f       	add	r27, r26
    112e:	62 1f       	adc	r22, r18
    1130:	73 1f       	adc	r23, r19
    1132:	84 1f       	adc	r24, r20
    1134:	48 f4       	brcc	.+18     	; 0x1148 <__addsf3x+0x9c>
    1136:	87 95       	ror	r24
    1138:	77 95       	ror	r23
    113a:	67 95       	ror	r22
    113c:	b7 95       	ror	r27
    113e:	f7 95       	ror	r31
    1140:	9e 3f       	cpi	r25, 0xFE	; 254
    1142:	08 f0       	brcs	.+2      	; 0x1146 <__addsf3x+0x9a>
    1144:	b0 cf       	rjmp	.-160    	; 0x10a6 <__addsf3+0x28>
    1146:	93 95       	inc	r25
    1148:	88 0f       	add	r24, r24
    114a:	08 f0       	brcs	.+2      	; 0x114e <__addsf3x+0xa2>
    114c:	99 27       	eor	r25, r25
    114e:	ee 0f       	add	r30, r30
    1150:	97 95       	ror	r25
    1152:	87 95       	ror	r24
    1154:	08 95       	ret

00001156 <__divsf3>:
    1156:	0e 94 bf 08 	call	0x117e	; 0x117e <__divsf3x>
    115a:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__fp_round>
    115e:	0e 94 c4 09 	call	0x1388	; 0x1388 <__fp_pscB>
    1162:	58 f0       	brcs	.+22     	; 0x117a <__divsf3+0x24>
    1164:	0e 94 bd 09 	call	0x137a	; 0x137a <__fp_pscA>
    1168:	40 f0       	brcs	.+16     	; 0x117a <__divsf3+0x24>
    116a:	29 f4       	brne	.+10     	; 0x1176 <__divsf3+0x20>
    116c:	5f 3f       	cpi	r21, 0xFF	; 255
    116e:	29 f0       	breq	.+10     	; 0x117a <__divsf3+0x24>
    1170:	0c 94 b4 09 	jmp	0x1368	; 0x1368 <__fp_inf>
    1174:	51 11       	cpse	r21, r1
    1176:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__fp_szero>
    117a:	0c 94 ba 09 	jmp	0x1374	; 0x1374 <__fp_nan>

0000117e <__divsf3x>:
    117e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__fp_split3>
    1182:	68 f3       	brcs	.-38     	; 0x115e <__divsf3+0x8>

00001184 <__divsf3_pse>:
    1184:	99 23       	and	r25, r25
    1186:	b1 f3       	breq	.-20     	; 0x1174 <__divsf3+0x1e>
    1188:	55 23       	and	r21, r21
    118a:	91 f3       	breq	.-28     	; 0x1170 <__divsf3+0x1a>
    118c:	95 1b       	sub	r25, r21
    118e:	55 0b       	sbc	r21, r21
    1190:	bb 27       	eor	r27, r27
    1192:	aa 27       	eor	r26, r26
    1194:	62 17       	cp	r22, r18
    1196:	73 07       	cpc	r23, r19
    1198:	84 07       	cpc	r24, r20
    119a:	38 f0       	brcs	.+14     	; 0x11aa <__divsf3_pse+0x26>
    119c:	9f 5f       	subi	r25, 0xFF	; 255
    119e:	5f 4f       	sbci	r21, 0xFF	; 255
    11a0:	22 0f       	add	r18, r18
    11a2:	33 1f       	adc	r19, r19
    11a4:	44 1f       	adc	r20, r20
    11a6:	aa 1f       	adc	r26, r26
    11a8:	a9 f3       	breq	.-22     	; 0x1194 <__divsf3_pse+0x10>
    11aa:	35 d0       	rcall	.+106    	; 0x1216 <__divsf3_pse+0x92>
    11ac:	0e 2e       	mov	r0, r30
    11ae:	3a f0       	brmi	.+14     	; 0x11be <__divsf3_pse+0x3a>
    11b0:	e0 e8       	ldi	r30, 0x80	; 128
    11b2:	32 d0       	rcall	.+100    	; 0x1218 <__divsf3_pse+0x94>
    11b4:	91 50       	subi	r25, 0x01	; 1
    11b6:	50 40       	sbci	r21, 0x00	; 0
    11b8:	e6 95       	lsr	r30
    11ba:	00 1c       	adc	r0, r0
    11bc:	ca f7       	brpl	.-14     	; 0x11b0 <__divsf3_pse+0x2c>
    11be:	2b d0       	rcall	.+86     	; 0x1216 <__divsf3_pse+0x92>
    11c0:	fe 2f       	mov	r31, r30
    11c2:	29 d0       	rcall	.+82     	; 0x1216 <__divsf3_pse+0x92>
    11c4:	66 0f       	add	r22, r22
    11c6:	77 1f       	adc	r23, r23
    11c8:	88 1f       	adc	r24, r24
    11ca:	bb 1f       	adc	r27, r27
    11cc:	26 17       	cp	r18, r22
    11ce:	37 07       	cpc	r19, r23
    11d0:	48 07       	cpc	r20, r24
    11d2:	ab 07       	cpc	r26, r27
    11d4:	b0 e8       	ldi	r27, 0x80	; 128
    11d6:	09 f0       	breq	.+2      	; 0x11da <__divsf3_pse+0x56>
    11d8:	bb 0b       	sbc	r27, r27
    11da:	80 2d       	mov	r24, r0
    11dc:	bf 01       	movw	r22, r30
    11de:	ff 27       	eor	r31, r31
    11e0:	93 58       	subi	r25, 0x83	; 131
    11e2:	5f 4f       	sbci	r21, 0xFF	; 255
    11e4:	3a f0       	brmi	.+14     	; 0x11f4 <__divsf3_pse+0x70>
    11e6:	9e 3f       	cpi	r25, 0xFE	; 254
    11e8:	51 05       	cpc	r21, r1
    11ea:	78 f0       	brcs	.+30     	; 0x120a <__divsf3_pse+0x86>
    11ec:	0c 94 b4 09 	jmp	0x1368	; 0x1368 <__fp_inf>
    11f0:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__fp_szero>
    11f4:	5f 3f       	cpi	r21, 0xFF	; 255
    11f6:	e4 f3       	brlt	.-8      	; 0x11f0 <__divsf3_pse+0x6c>
    11f8:	98 3e       	cpi	r25, 0xE8	; 232
    11fa:	d4 f3       	brlt	.-12     	; 0x11f0 <__divsf3_pse+0x6c>
    11fc:	86 95       	lsr	r24
    11fe:	77 95       	ror	r23
    1200:	67 95       	ror	r22
    1202:	b7 95       	ror	r27
    1204:	f7 95       	ror	r31
    1206:	9f 5f       	subi	r25, 0xFF	; 255
    1208:	c9 f7       	brne	.-14     	; 0x11fc <__divsf3_pse+0x78>
    120a:	88 0f       	add	r24, r24
    120c:	91 1d       	adc	r25, r1
    120e:	96 95       	lsr	r25
    1210:	87 95       	ror	r24
    1212:	97 f9       	bld	r25, 7
    1214:	08 95       	ret
    1216:	e1 e0       	ldi	r30, 0x01	; 1
    1218:	66 0f       	add	r22, r22
    121a:	77 1f       	adc	r23, r23
    121c:	88 1f       	adc	r24, r24
    121e:	bb 1f       	adc	r27, r27
    1220:	62 17       	cp	r22, r18
    1222:	73 07       	cpc	r23, r19
    1224:	84 07       	cpc	r24, r20
    1226:	ba 07       	cpc	r27, r26
    1228:	20 f0       	brcs	.+8      	; 0x1232 <__divsf3_pse+0xae>
    122a:	62 1b       	sub	r22, r18
    122c:	73 0b       	sbc	r23, r19
    122e:	84 0b       	sbc	r24, r20
    1230:	ba 0b       	sbc	r27, r26
    1232:	ee 1f       	adc	r30, r30
    1234:	88 f7       	brcc	.-30     	; 0x1218 <__divsf3_pse+0x94>
    1236:	e0 95       	com	r30
    1238:	08 95       	ret

0000123a <__fixsfsi>:
    123a:	0e 94 24 09 	call	0x1248	; 0x1248 <__fixunssfsi>
    123e:	68 94       	set
    1240:	b1 11       	cpse	r27, r1
    1242:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__fp_szero>
    1246:	08 95       	ret

00001248 <__fixunssfsi>:
    1248:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__fp_splitA>
    124c:	88 f0       	brcs	.+34     	; 0x1270 <__fixunssfsi+0x28>
    124e:	9f 57       	subi	r25, 0x7F	; 127
    1250:	98 f0       	brcs	.+38     	; 0x1278 <__fixunssfsi+0x30>
    1252:	b9 2f       	mov	r27, r25
    1254:	99 27       	eor	r25, r25
    1256:	b7 51       	subi	r27, 0x17	; 23
    1258:	b0 f0       	brcs	.+44     	; 0x1286 <__fixunssfsi+0x3e>
    125a:	e1 f0       	breq	.+56     	; 0x1294 <__fixunssfsi+0x4c>
    125c:	66 0f       	add	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	1a f0       	brmi	.+6      	; 0x126c <__fixunssfsi+0x24>
    1266:	ba 95       	dec	r27
    1268:	c9 f7       	brne	.-14     	; 0x125c <__fixunssfsi+0x14>
    126a:	14 c0       	rjmp	.+40     	; 0x1294 <__fixunssfsi+0x4c>
    126c:	b1 30       	cpi	r27, 0x01	; 1
    126e:	91 f0       	breq	.+36     	; 0x1294 <__fixunssfsi+0x4c>
    1270:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__fp_zero>
    1274:	b1 e0       	ldi	r27, 0x01	; 1
    1276:	08 95       	ret
    1278:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__fp_zero>
    127c:	67 2f       	mov	r22, r23
    127e:	78 2f       	mov	r23, r24
    1280:	88 27       	eor	r24, r24
    1282:	b8 5f       	subi	r27, 0xF8	; 248
    1284:	39 f0       	breq	.+14     	; 0x1294 <__fixunssfsi+0x4c>
    1286:	b9 3f       	cpi	r27, 0xF9	; 249
    1288:	cc f3       	brlt	.-14     	; 0x127c <__fixunssfsi+0x34>
    128a:	86 95       	lsr	r24
    128c:	77 95       	ror	r23
    128e:	67 95       	ror	r22
    1290:	b3 95       	inc	r27
    1292:	d9 f7       	brne	.-10     	; 0x128a <__fixunssfsi+0x42>
    1294:	3e f4       	brtc	.+14     	; 0x12a4 <__fixunssfsi+0x5c>
    1296:	90 95       	com	r25
    1298:	80 95       	com	r24
    129a:	70 95       	com	r23
    129c:	61 95       	neg	r22
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	8f 4f       	sbci	r24, 0xFF	; 255
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	08 95       	ret

000012a6 <__floatunsisf>:
    12a6:	e8 94       	clt
    12a8:	09 c0       	rjmp	.+18     	; 0x12bc <__floatsisf+0x12>

000012aa <__floatsisf>:
    12aa:	97 fb       	bst	r25, 7
    12ac:	3e f4       	brtc	.+14     	; 0x12bc <__floatsisf+0x12>
    12ae:	90 95       	com	r25
    12b0:	80 95       	com	r24
    12b2:	70 95       	com	r23
    12b4:	61 95       	neg	r22
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	99 23       	and	r25, r25
    12be:	a9 f0       	breq	.+42     	; 0x12ea <__floatsisf+0x40>
    12c0:	f9 2f       	mov	r31, r25
    12c2:	96 e9       	ldi	r25, 0x96	; 150
    12c4:	bb 27       	eor	r27, r27
    12c6:	93 95       	inc	r25
    12c8:	f6 95       	lsr	r31
    12ca:	87 95       	ror	r24
    12cc:	77 95       	ror	r23
    12ce:	67 95       	ror	r22
    12d0:	b7 95       	ror	r27
    12d2:	f1 11       	cpse	r31, r1
    12d4:	f8 cf       	rjmp	.-16     	; 0x12c6 <__floatsisf+0x1c>
    12d6:	fa f4       	brpl	.+62     	; 0x1316 <__floatsisf+0x6c>
    12d8:	bb 0f       	add	r27, r27
    12da:	11 f4       	brne	.+4      	; 0x12e0 <__floatsisf+0x36>
    12dc:	60 ff       	sbrs	r22, 0
    12de:	1b c0       	rjmp	.+54     	; 0x1316 <__floatsisf+0x6c>
    12e0:	6f 5f       	subi	r22, 0xFF	; 255
    12e2:	7f 4f       	sbci	r23, 0xFF	; 255
    12e4:	8f 4f       	sbci	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	16 c0       	rjmp	.+44     	; 0x1316 <__floatsisf+0x6c>
    12ea:	88 23       	and	r24, r24
    12ec:	11 f0       	breq	.+4      	; 0x12f2 <__floatsisf+0x48>
    12ee:	96 e9       	ldi	r25, 0x96	; 150
    12f0:	11 c0       	rjmp	.+34     	; 0x1314 <__floatsisf+0x6a>
    12f2:	77 23       	and	r23, r23
    12f4:	21 f0       	breq	.+8      	; 0x12fe <__floatsisf+0x54>
    12f6:	9e e8       	ldi	r25, 0x8E	; 142
    12f8:	87 2f       	mov	r24, r23
    12fa:	76 2f       	mov	r23, r22
    12fc:	05 c0       	rjmp	.+10     	; 0x1308 <__floatsisf+0x5e>
    12fe:	66 23       	and	r22, r22
    1300:	71 f0       	breq	.+28     	; 0x131e <__floatsisf+0x74>
    1302:	96 e8       	ldi	r25, 0x86	; 134
    1304:	86 2f       	mov	r24, r22
    1306:	70 e0       	ldi	r23, 0x00	; 0
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	2a f0       	brmi	.+10     	; 0x1316 <__floatsisf+0x6c>
    130c:	9a 95       	dec	r25
    130e:	66 0f       	add	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	da f7       	brpl	.-10     	; 0x130c <__floatsisf+0x62>
    1316:	88 0f       	add	r24, r24
    1318:	96 95       	lsr	r25
    131a:	87 95       	ror	r24
    131c:	97 f9       	bld	r25, 7
    131e:	08 95       	ret

00001320 <__fp_cmp>:
    1320:	99 0f       	add	r25, r25
    1322:	00 08       	sbc	r0, r0
    1324:	55 0f       	add	r21, r21
    1326:	aa 0b       	sbc	r26, r26
    1328:	e0 e8       	ldi	r30, 0x80	; 128
    132a:	fe ef       	ldi	r31, 0xFE	; 254
    132c:	16 16       	cp	r1, r22
    132e:	17 06       	cpc	r1, r23
    1330:	e8 07       	cpc	r30, r24
    1332:	f9 07       	cpc	r31, r25
    1334:	c0 f0       	brcs	.+48     	; 0x1366 <__fp_cmp+0x46>
    1336:	12 16       	cp	r1, r18
    1338:	13 06       	cpc	r1, r19
    133a:	e4 07       	cpc	r30, r20
    133c:	f5 07       	cpc	r31, r21
    133e:	98 f0       	brcs	.+38     	; 0x1366 <__fp_cmp+0x46>
    1340:	62 1b       	sub	r22, r18
    1342:	73 0b       	sbc	r23, r19
    1344:	84 0b       	sbc	r24, r20
    1346:	95 0b       	sbc	r25, r21
    1348:	39 f4       	brne	.+14     	; 0x1358 <__fp_cmp+0x38>
    134a:	0a 26       	eor	r0, r26
    134c:	61 f0       	breq	.+24     	; 0x1366 <__fp_cmp+0x46>
    134e:	23 2b       	or	r18, r19
    1350:	24 2b       	or	r18, r20
    1352:	25 2b       	or	r18, r21
    1354:	21 f4       	brne	.+8      	; 0x135e <__fp_cmp+0x3e>
    1356:	08 95       	ret
    1358:	0a 26       	eor	r0, r26
    135a:	09 f4       	brne	.+2      	; 0x135e <__fp_cmp+0x3e>
    135c:	a1 40       	sbci	r26, 0x01	; 1
    135e:	a6 95       	lsr	r26
    1360:	8f ef       	ldi	r24, 0xFF	; 255
    1362:	81 1d       	adc	r24, r1
    1364:	81 1d       	adc	r24, r1
    1366:	08 95       	ret

00001368 <__fp_inf>:
    1368:	97 f9       	bld	r25, 7
    136a:	9f 67       	ori	r25, 0x7F	; 127
    136c:	80 e8       	ldi	r24, 0x80	; 128
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	60 e0       	ldi	r22, 0x00	; 0
    1372:	08 95       	ret

00001374 <__fp_nan>:
    1374:	9f ef       	ldi	r25, 0xFF	; 255
    1376:	80 ec       	ldi	r24, 0xC0	; 192
    1378:	08 95       	ret

0000137a <__fp_pscA>:
    137a:	00 24       	eor	r0, r0
    137c:	0a 94       	dec	r0
    137e:	16 16       	cp	r1, r22
    1380:	17 06       	cpc	r1, r23
    1382:	18 06       	cpc	r1, r24
    1384:	09 06       	cpc	r0, r25
    1386:	08 95       	ret

00001388 <__fp_pscB>:
    1388:	00 24       	eor	r0, r0
    138a:	0a 94       	dec	r0
    138c:	12 16       	cp	r1, r18
    138e:	13 06       	cpc	r1, r19
    1390:	14 06       	cpc	r1, r20
    1392:	05 06       	cpc	r0, r21
    1394:	08 95       	ret

00001396 <__fp_round>:
    1396:	09 2e       	mov	r0, r25
    1398:	03 94       	inc	r0
    139a:	00 0c       	add	r0, r0
    139c:	11 f4       	brne	.+4      	; 0x13a2 <__fp_round+0xc>
    139e:	88 23       	and	r24, r24
    13a0:	52 f0       	brmi	.+20     	; 0x13b6 <__fp_round+0x20>
    13a2:	bb 0f       	add	r27, r27
    13a4:	40 f4       	brcc	.+16     	; 0x13b6 <__fp_round+0x20>
    13a6:	bf 2b       	or	r27, r31
    13a8:	11 f4       	brne	.+4      	; 0x13ae <__fp_round+0x18>
    13aa:	60 ff       	sbrs	r22, 0
    13ac:	04 c0       	rjmp	.+8      	; 0x13b6 <__fp_round+0x20>
    13ae:	6f 5f       	subi	r22, 0xFF	; 255
    13b0:	7f 4f       	sbci	r23, 0xFF	; 255
    13b2:	8f 4f       	sbci	r24, 0xFF	; 255
    13b4:	9f 4f       	sbci	r25, 0xFF	; 255
    13b6:	08 95       	ret

000013b8 <__fp_split3>:
    13b8:	57 fd       	sbrc	r21, 7
    13ba:	90 58       	subi	r25, 0x80	; 128
    13bc:	44 0f       	add	r20, r20
    13be:	55 1f       	adc	r21, r21
    13c0:	59 f0       	breq	.+22     	; 0x13d8 <__fp_splitA+0x10>
    13c2:	5f 3f       	cpi	r21, 0xFF	; 255
    13c4:	71 f0       	breq	.+28     	; 0x13e2 <__fp_splitA+0x1a>
    13c6:	47 95       	ror	r20

000013c8 <__fp_splitA>:
    13c8:	88 0f       	add	r24, r24
    13ca:	97 fb       	bst	r25, 7
    13cc:	99 1f       	adc	r25, r25
    13ce:	61 f0       	breq	.+24     	; 0x13e8 <__fp_splitA+0x20>
    13d0:	9f 3f       	cpi	r25, 0xFF	; 255
    13d2:	79 f0       	breq	.+30     	; 0x13f2 <__fp_splitA+0x2a>
    13d4:	87 95       	ror	r24
    13d6:	08 95       	ret
    13d8:	12 16       	cp	r1, r18
    13da:	13 06       	cpc	r1, r19
    13dc:	14 06       	cpc	r1, r20
    13de:	55 1f       	adc	r21, r21
    13e0:	f2 cf       	rjmp	.-28     	; 0x13c6 <__fp_split3+0xe>
    13e2:	46 95       	lsr	r20
    13e4:	f1 df       	rcall	.-30     	; 0x13c8 <__fp_splitA>
    13e6:	08 c0       	rjmp	.+16     	; 0x13f8 <__fp_splitA+0x30>
    13e8:	16 16       	cp	r1, r22
    13ea:	17 06       	cpc	r1, r23
    13ec:	18 06       	cpc	r1, r24
    13ee:	99 1f       	adc	r25, r25
    13f0:	f1 cf       	rjmp	.-30     	; 0x13d4 <__fp_splitA+0xc>
    13f2:	86 95       	lsr	r24
    13f4:	71 05       	cpc	r23, r1
    13f6:	61 05       	cpc	r22, r1
    13f8:	08 94       	sec
    13fa:	08 95       	ret

000013fc <__fp_zero>:
    13fc:	e8 94       	clt

000013fe <__fp_szero>:
    13fe:	bb 27       	eor	r27, r27
    1400:	66 27       	eor	r22, r22
    1402:	77 27       	eor	r23, r23
    1404:	cb 01       	movw	r24, r22
    1406:	97 f9       	bld	r25, 7
    1408:	08 95       	ret

0000140a <__gesf2>:
    140a:	0e 94 90 09 	call	0x1320	; 0x1320 <__fp_cmp>
    140e:	08 f4       	brcc	.+2      	; 0x1412 <__gesf2+0x8>
    1410:	8f ef       	ldi	r24, 0xFF	; 255
    1412:	08 95       	ret

00001414 <__divmodsi4>:
    1414:	05 2e       	mov	r0, r21
    1416:	97 fb       	bst	r25, 7
    1418:	1e f4       	brtc	.+6      	; 0x1420 <__divmodsi4+0xc>
    141a:	00 94       	com	r0
    141c:	0e 94 21 0a 	call	0x1442	; 0x1442 <__negsi2>
    1420:	57 fd       	sbrc	r21, 7
    1422:	07 d0       	rcall	.+14     	; 0x1432 <__divmodsi4_neg2>
    1424:	0e 94 3c 0a 	call	0x1478	; 0x1478 <__udivmodsi4>
    1428:	07 fc       	sbrc	r0, 7
    142a:	03 d0       	rcall	.+6      	; 0x1432 <__divmodsi4_neg2>
    142c:	4e f4       	brtc	.+18     	; 0x1440 <__divmodsi4_exit>
    142e:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__negsi2>

00001432 <__divmodsi4_neg2>:
    1432:	50 95       	com	r21
    1434:	40 95       	com	r20
    1436:	30 95       	com	r19
    1438:	21 95       	neg	r18
    143a:	3f 4f       	sbci	r19, 0xFF	; 255
    143c:	4f 4f       	sbci	r20, 0xFF	; 255
    143e:	5f 4f       	sbci	r21, 0xFF	; 255

00001440 <__divmodsi4_exit>:
    1440:	08 95       	ret

00001442 <__negsi2>:
    1442:	90 95       	com	r25
    1444:	80 95       	com	r24
    1446:	70 95       	com	r23
    1448:	61 95       	neg	r22
    144a:	7f 4f       	sbci	r23, 0xFF	; 255
    144c:	8f 4f       	sbci	r24, 0xFF	; 255
    144e:	9f 4f       	sbci	r25, 0xFF	; 255
    1450:	08 95       	ret

00001452 <__muluhisi3>:
    1452:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <__umulhisi3>
    1456:	a5 9f       	mul	r26, r21
    1458:	90 0d       	add	r25, r0
    145a:	b4 9f       	mul	r27, r20
    145c:	90 0d       	add	r25, r0
    145e:	a4 9f       	mul	r26, r20
    1460:	80 0d       	add	r24, r0
    1462:	91 1d       	adc	r25, r1
    1464:	11 24       	eor	r1, r1
    1466:	08 95       	ret

00001468 <__mulshisi3>:
    1468:	b7 ff       	sbrs	r27, 7
    146a:	0c 94 29 0a 	jmp	0x1452	; 0x1452 <__muluhisi3>

0000146e <__mulohisi3>:
    146e:	0e 94 29 0a 	call	0x1452	; 0x1452 <__muluhisi3>
    1472:	82 1b       	sub	r24, r18
    1474:	93 0b       	sbc	r25, r19
    1476:	08 95       	ret

00001478 <__udivmodsi4>:
    1478:	a1 e2       	ldi	r26, 0x21	; 33
    147a:	1a 2e       	mov	r1, r26
    147c:	aa 1b       	sub	r26, r26
    147e:	bb 1b       	sub	r27, r27
    1480:	fd 01       	movw	r30, r26
    1482:	0d c0       	rjmp	.+26     	; 0x149e <__udivmodsi4_ep>

00001484 <__udivmodsi4_loop>:
    1484:	aa 1f       	adc	r26, r26
    1486:	bb 1f       	adc	r27, r27
    1488:	ee 1f       	adc	r30, r30
    148a:	ff 1f       	adc	r31, r31
    148c:	a2 17       	cp	r26, r18
    148e:	b3 07       	cpc	r27, r19
    1490:	e4 07       	cpc	r30, r20
    1492:	f5 07       	cpc	r31, r21
    1494:	20 f0       	brcs	.+8      	; 0x149e <__udivmodsi4_ep>
    1496:	a2 1b       	sub	r26, r18
    1498:	b3 0b       	sbc	r27, r19
    149a:	e4 0b       	sbc	r30, r20
    149c:	f5 0b       	sbc	r31, r21

0000149e <__udivmodsi4_ep>:
    149e:	66 1f       	adc	r22, r22
    14a0:	77 1f       	adc	r23, r23
    14a2:	88 1f       	adc	r24, r24
    14a4:	99 1f       	adc	r25, r25
    14a6:	1a 94       	dec	r1
    14a8:	69 f7       	brne	.-38     	; 0x1484 <__udivmodsi4_loop>
    14aa:	60 95       	com	r22
    14ac:	70 95       	com	r23
    14ae:	80 95       	com	r24
    14b0:	90 95       	com	r25
    14b2:	9b 01       	movw	r18, r22
    14b4:	ac 01       	movw	r20, r24
    14b6:	bd 01       	movw	r22, r26
    14b8:	cf 01       	movw	r24, r30
    14ba:	08 95       	ret

000014bc <__umulhisi3>:
    14bc:	a2 9f       	mul	r26, r18
    14be:	b0 01       	movw	r22, r0
    14c0:	b3 9f       	mul	r27, r19
    14c2:	c0 01       	movw	r24, r0
    14c4:	a3 9f       	mul	r26, r19
    14c6:	70 0d       	add	r23, r0
    14c8:	81 1d       	adc	r24, r1
    14ca:	11 24       	eor	r1, r1
    14cc:	91 1d       	adc	r25, r1
    14ce:	b2 9f       	mul	r27, r18
    14d0:	70 0d       	add	r23, r0
    14d2:	81 1d       	adc	r24, r1
    14d4:	11 24       	eor	r1, r1
    14d6:	91 1d       	adc	r25, r1
    14d8:	08 95       	ret

000014da <do_rand>:
    14da:	8f 92       	push	r8
    14dc:	9f 92       	push	r9
    14de:	af 92       	push	r10
    14e0:	bf 92       	push	r11
    14e2:	cf 92       	push	r12
    14e4:	df 92       	push	r13
    14e6:	ef 92       	push	r14
    14e8:	ff 92       	push	r15
    14ea:	cf 93       	push	r28
    14ec:	df 93       	push	r29
    14ee:	ec 01       	movw	r28, r24
    14f0:	68 81       	ld	r22, Y
    14f2:	79 81       	ldd	r23, Y+1	; 0x01
    14f4:	8a 81       	ldd	r24, Y+2	; 0x02
    14f6:	9b 81       	ldd	r25, Y+3	; 0x03
    14f8:	61 15       	cp	r22, r1
    14fa:	71 05       	cpc	r23, r1
    14fc:	81 05       	cpc	r24, r1
    14fe:	91 05       	cpc	r25, r1
    1500:	21 f4       	brne	.+8      	; 0x150a <do_rand+0x30>
    1502:	64 e2       	ldi	r22, 0x24	; 36
    1504:	79 ed       	ldi	r23, 0xD9	; 217
    1506:	8b e5       	ldi	r24, 0x5B	; 91
    1508:	97 e0       	ldi	r25, 0x07	; 7
    150a:	2d e1       	ldi	r18, 0x1D	; 29
    150c:	33 ef       	ldi	r19, 0xF3	; 243
    150e:	41 e0       	ldi	r20, 0x01	; 1
    1510:	50 e0       	ldi	r21, 0x00	; 0
    1512:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__divmodsi4>
    1516:	49 01       	movw	r8, r18
    1518:	5a 01       	movw	r10, r20
    151a:	9b 01       	movw	r18, r22
    151c:	ac 01       	movw	r20, r24
    151e:	a7 ea       	ldi	r26, 0xA7	; 167
    1520:	b1 e4       	ldi	r27, 0x41	; 65
    1522:	0e 94 29 0a 	call	0x1452	; 0x1452 <__muluhisi3>
    1526:	6b 01       	movw	r12, r22
    1528:	7c 01       	movw	r14, r24
    152a:	ac ee       	ldi	r26, 0xEC	; 236
    152c:	b4 ef       	ldi	r27, 0xF4	; 244
    152e:	a5 01       	movw	r20, r10
    1530:	94 01       	movw	r18, r8
    1532:	0e 94 37 0a 	call	0x146e	; 0x146e <__mulohisi3>
    1536:	dc 01       	movw	r26, r24
    1538:	cb 01       	movw	r24, r22
    153a:	8c 0d       	add	r24, r12
    153c:	9d 1d       	adc	r25, r13
    153e:	ae 1d       	adc	r26, r14
    1540:	bf 1d       	adc	r27, r15
    1542:	b7 ff       	sbrs	r27, 7
    1544:	03 c0       	rjmp	.+6      	; 0x154c <do_rand+0x72>
    1546:	01 97       	sbiw	r24, 0x01	; 1
    1548:	a1 09       	sbc	r26, r1
    154a:	b0 48       	sbci	r27, 0x80	; 128
    154c:	88 83       	st	Y, r24
    154e:	99 83       	std	Y+1, r25	; 0x01
    1550:	aa 83       	std	Y+2, r26	; 0x02
    1552:	bb 83       	std	Y+3, r27	; 0x03
    1554:	9f 77       	andi	r25, 0x7F	; 127
    1556:	df 91       	pop	r29
    1558:	cf 91       	pop	r28
    155a:	ff 90       	pop	r15
    155c:	ef 90       	pop	r14
    155e:	df 90       	pop	r13
    1560:	cf 90       	pop	r12
    1562:	bf 90       	pop	r11
    1564:	af 90       	pop	r10
    1566:	9f 90       	pop	r9
    1568:	8f 90       	pop	r8
    156a:	08 95       	ret

0000156c <rand_r>:
    156c:	0e 94 6d 0a 	call	0x14da	; 0x14da <do_rand>
    1570:	08 95       	ret

00001572 <rand>:
    1572:	80 e0       	ldi	r24, 0x00	; 0
    1574:	91 e0       	ldi	r25, 0x01	; 1
    1576:	0e 94 6d 0a 	call	0x14da	; 0x14da <do_rand>
    157a:	08 95       	ret

0000157c <srand>:
    157c:	a0 e0       	ldi	r26, 0x00	; 0
    157e:	b0 e0       	ldi	r27, 0x00	; 0
    1580:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1584:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1588:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    158c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    1590:	08 95       	ret

00001592 <sprintf>:
    1592:	ae e0       	ldi	r26, 0x0E	; 14
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	ef ec       	ldi	r30, 0xCF	; 207
    1598:	fa e0       	ldi	r31, 0x0A	; 10
    159a:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__prologue_saves__+0x1c>
    159e:	0d 89       	ldd	r16, Y+21	; 0x15
    15a0:	1e 89       	ldd	r17, Y+22	; 0x16
    15a2:	86 e0       	ldi	r24, 0x06	; 6
    15a4:	8c 83       	std	Y+4, r24	; 0x04
    15a6:	1a 83       	std	Y+2, r17	; 0x02
    15a8:	09 83       	std	Y+1, r16	; 0x01
    15aa:	8f ef       	ldi	r24, 0xFF	; 255
    15ac:	9f e7       	ldi	r25, 0x7F	; 127
    15ae:	9e 83       	std	Y+6, r25	; 0x06
    15b0:	8d 83       	std	Y+5, r24	; 0x05
    15b2:	ae 01       	movw	r20, r28
    15b4:	47 5e       	subi	r20, 0xE7	; 231
    15b6:	5f 4f       	sbci	r21, 0xFF	; 255
    15b8:	6f 89       	ldd	r22, Y+23	; 0x17
    15ba:	78 8d       	ldd	r23, Y+24	; 0x18
    15bc:	ce 01       	movw	r24, r28
    15be:	01 96       	adiw	r24, 0x01	; 1
    15c0:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <vfprintf>
    15c4:	ef 81       	ldd	r30, Y+7	; 0x07
    15c6:	f8 85       	ldd	r31, Y+8	; 0x08
    15c8:	e0 0f       	add	r30, r16
    15ca:	f1 1f       	adc	r31, r17
    15cc:	10 82       	st	Z, r1
    15ce:	2e 96       	adiw	r28, 0x0e	; 14
    15d0:	e4 e0       	ldi	r30, 0x04	; 4
    15d2:	0c 94 a6 0d 	jmp	0x1b4c	; 0x1b4c <__epilogue_restores__+0x1c>

000015d6 <vfprintf>:
    15d6:	ab e0       	ldi	r26, 0x0B	; 11
    15d8:	b0 e0       	ldi	r27, 0x00	; 0
    15da:	e1 ef       	ldi	r30, 0xF1	; 241
    15dc:	fa e0       	ldi	r31, 0x0A	; 10
    15de:	0c 94 7c 0d 	jmp	0x1af8	; 0x1af8 <__prologue_saves__>
    15e2:	6c 01       	movw	r12, r24
    15e4:	7b 01       	movw	r14, r22
    15e6:	8a 01       	movw	r16, r20
    15e8:	fc 01       	movw	r30, r24
    15ea:	17 82       	std	Z+7, r1	; 0x07
    15ec:	16 82       	std	Z+6, r1	; 0x06
    15ee:	83 81       	ldd	r24, Z+3	; 0x03
    15f0:	81 ff       	sbrs	r24, 1
    15f2:	cc c1       	rjmp	.+920    	; 0x198c <vfprintf+0x3b6>
    15f4:	ce 01       	movw	r24, r28
    15f6:	01 96       	adiw	r24, 0x01	; 1
    15f8:	3c 01       	movw	r6, r24
    15fa:	f6 01       	movw	r30, r12
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	f7 01       	movw	r30, r14
    1600:	93 fd       	sbrc	r25, 3
    1602:	85 91       	lpm	r24, Z+
    1604:	93 ff       	sbrs	r25, 3
    1606:	81 91       	ld	r24, Z+
    1608:	7f 01       	movw	r14, r30
    160a:	88 23       	and	r24, r24
    160c:	09 f4       	brne	.+2      	; 0x1610 <vfprintf+0x3a>
    160e:	ba c1       	rjmp	.+884    	; 0x1984 <vfprintf+0x3ae>
    1610:	85 32       	cpi	r24, 0x25	; 37
    1612:	39 f4       	brne	.+14     	; 0x1622 <vfprintf+0x4c>
    1614:	93 fd       	sbrc	r25, 3
    1616:	85 91       	lpm	r24, Z+
    1618:	93 ff       	sbrs	r25, 3
    161a:	81 91       	ld	r24, Z+
    161c:	7f 01       	movw	r14, r30
    161e:	85 32       	cpi	r24, 0x25	; 37
    1620:	29 f4       	brne	.+10     	; 0x162c <vfprintf+0x56>
    1622:	b6 01       	movw	r22, r12
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    162a:	e7 cf       	rjmp	.-50     	; 0x15fa <vfprintf+0x24>
    162c:	91 2c       	mov	r9, r1
    162e:	21 2c       	mov	r2, r1
    1630:	31 2c       	mov	r3, r1
    1632:	ff e1       	ldi	r31, 0x1F	; 31
    1634:	f3 15       	cp	r31, r3
    1636:	d8 f0       	brcs	.+54     	; 0x166e <vfprintf+0x98>
    1638:	8b 32       	cpi	r24, 0x2B	; 43
    163a:	79 f0       	breq	.+30     	; 0x165a <vfprintf+0x84>
    163c:	38 f4       	brcc	.+14     	; 0x164c <vfprintf+0x76>
    163e:	80 32       	cpi	r24, 0x20	; 32
    1640:	79 f0       	breq	.+30     	; 0x1660 <vfprintf+0x8a>
    1642:	83 32       	cpi	r24, 0x23	; 35
    1644:	a1 f4       	brne	.+40     	; 0x166e <vfprintf+0x98>
    1646:	23 2d       	mov	r18, r3
    1648:	20 61       	ori	r18, 0x10	; 16
    164a:	1d c0       	rjmp	.+58     	; 0x1686 <vfprintf+0xb0>
    164c:	8d 32       	cpi	r24, 0x2D	; 45
    164e:	61 f0       	breq	.+24     	; 0x1668 <vfprintf+0x92>
    1650:	80 33       	cpi	r24, 0x30	; 48
    1652:	69 f4       	brne	.+26     	; 0x166e <vfprintf+0x98>
    1654:	23 2d       	mov	r18, r3
    1656:	21 60       	ori	r18, 0x01	; 1
    1658:	16 c0       	rjmp	.+44     	; 0x1686 <vfprintf+0xb0>
    165a:	83 2d       	mov	r24, r3
    165c:	82 60       	ori	r24, 0x02	; 2
    165e:	38 2e       	mov	r3, r24
    1660:	e3 2d       	mov	r30, r3
    1662:	e4 60       	ori	r30, 0x04	; 4
    1664:	3e 2e       	mov	r3, r30
    1666:	2a c0       	rjmp	.+84     	; 0x16bc <vfprintf+0xe6>
    1668:	f3 2d       	mov	r31, r3
    166a:	f8 60       	ori	r31, 0x08	; 8
    166c:	1d c0       	rjmp	.+58     	; 0x16a8 <vfprintf+0xd2>
    166e:	37 fc       	sbrc	r3, 7
    1670:	2d c0       	rjmp	.+90     	; 0x16cc <vfprintf+0xf6>
    1672:	20 ed       	ldi	r18, 0xD0	; 208
    1674:	28 0f       	add	r18, r24
    1676:	2a 30       	cpi	r18, 0x0A	; 10
    1678:	40 f0       	brcs	.+16     	; 0x168a <vfprintf+0xb4>
    167a:	8e 32       	cpi	r24, 0x2E	; 46
    167c:	b9 f4       	brne	.+46     	; 0x16ac <vfprintf+0xd6>
    167e:	36 fc       	sbrc	r3, 6
    1680:	81 c1       	rjmp	.+770    	; 0x1984 <vfprintf+0x3ae>
    1682:	23 2d       	mov	r18, r3
    1684:	20 64       	ori	r18, 0x40	; 64
    1686:	32 2e       	mov	r3, r18
    1688:	19 c0       	rjmp	.+50     	; 0x16bc <vfprintf+0xe6>
    168a:	36 fe       	sbrs	r3, 6
    168c:	06 c0       	rjmp	.+12     	; 0x169a <vfprintf+0xc4>
    168e:	8a e0       	ldi	r24, 0x0A	; 10
    1690:	98 9e       	mul	r9, r24
    1692:	20 0d       	add	r18, r0
    1694:	11 24       	eor	r1, r1
    1696:	92 2e       	mov	r9, r18
    1698:	11 c0       	rjmp	.+34     	; 0x16bc <vfprintf+0xe6>
    169a:	ea e0       	ldi	r30, 0x0A	; 10
    169c:	2e 9e       	mul	r2, r30
    169e:	20 0d       	add	r18, r0
    16a0:	11 24       	eor	r1, r1
    16a2:	22 2e       	mov	r2, r18
    16a4:	f3 2d       	mov	r31, r3
    16a6:	f0 62       	ori	r31, 0x20	; 32
    16a8:	3f 2e       	mov	r3, r31
    16aa:	08 c0       	rjmp	.+16     	; 0x16bc <vfprintf+0xe6>
    16ac:	8c 36       	cpi	r24, 0x6C	; 108
    16ae:	21 f4       	brne	.+8      	; 0x16b8 <vfprintf+0xe2>
    16b0:	83 2d       	mov	r24, r3
    16b2:	80 68       	ori	r24, 0x80	; 128
    16b4:	38 2e       	mov	r3, r24
    16b6:	02 c0       	rjmp	.+4      	; 0x16bc <vfprintf+0xe6>
    16b8:	88 36       	cpi	r24, 0x68	; 104
    16ba:	41 f4       	brne	.+16     	; 0x16cc <vfprintf+0xf6>
    16bc:	f7 01       	movw	r30, r14
    16be:	93 fd       	sbrc	r25, 3
    16c0:	85 91       	lpm	r24, Z+
    16c2:	93 ff       	sbrs	r25, 3
    16c4:	81 91       	ld	r24, Z+
    16c6:	7f 01       	movw	r14, r30
    16c8:	81 11       	cpse	r24, r1
    16ca:	b3 cf       	rjmp	.-154    	; 0x1632 <vfprintf+0x5c>
    16cc:	98 2f       	mov	r25, r24
    16ce:	9f 7d       	andi	r25, 0xDF	; 223
    16d0:	95 54       	subi	r25, 0x45	; 69
    16d2:	93 30       	cpi	r25, 0x03	; 3
    16d4:	28 f4       	brcc	.+10     	; 0x16e0 <vfprintf+0x10a>
    16d6:	0c 5f       	subi	r16, 0xFC	; 252
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	9f e3       	ldi	r25, 0x3F	; 63
    16dc:	99 83       	std	Y+1, r25	; 0x01
    16de:	0d c0       	rjmp	.+26     	; 0x16fa <vfprintf+0x124>
    16e0:	83 36       	cpi	r24, 0x63	; 99
    16e2:	31 f0       	breq	.+12     	; 0x16f0 <vfprintf+0x11a>
    16e4:	83 37       	cpi	r24, 0x73	; 115
    16e6:	71 f0       	breq	.+28     	; 0x1704 <vfprintf+0x12e>
    16e8:	83 35       	cpi	r24, 0x53	; 83
    16ea:	09 f0       	breq	.+2      	; 0x16ee <vfprintf+0x118>
    16ec:	59 c0       	rjmp	.+178    	; 0x17a0 <vfprintf+0x1ca>
    16ee:	21 c0       	rjmp	.+66     	; 0x1732 <vfprintf+0x15c>
    16f0:	f8 01       	movw	r30, r16
    16f2:	80 81       	ld	r24, Z
    16f4:	89 83       	std	Y+1, r24	; 0x01
    16f6:	0e 5f       	subi	r16, 0xFE	; 254
    16f8:	1f 4f       	sbci	r17, 0xFF	; 255
    16fa:	88 24       	eor	r8, r8
    16fc:	83 94       	inc	r8
    16fe:	91 2c       	mov	r9, r1
    1700:	53 01       	movw	r10, r6
    1702:	13 c0       	rjmp	.+38     	; 0x172a <vfprintf+0x154>
    1704:	28 01       	movw	r4, r16
    1706:	f2 e0       	ldi	r31, 0x02	; 2
    1708:	4f 0e       	add	r4, r31
    170a:	51 1c       	adc	r5, r1
    170c:	f8 01       	movw	r30, r16
    170e:	a0 80       	ld	r10, Z
    1710:	b1 80       	ldd	r11, Z+1	; 0x01
    1712:	36 fe       	sbrs	r3, 6
    1714:	03 c0       	rjmp	.+6      	; 0x171c <vfprintf+0x146>
    1716:	69 2d       	mov	r22, r9
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	02 c0       	rjmp	.+4      	; 0x1720 <vfprintf+0x14a>
    171c:	6f ef       	ldi	r22, 0xFF	; 255
    171e:	7f ef       	ldi	r23, 0xFF	; 255
    1720:	c5 01       	movw	r24, r10
    1722:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <strnlen>
    1726:	4c 01       	movw	r8, r24
    1728:	82 01       	movw	r16, r4
    172a:	f3 2d       	mov	r31, r3
    172c:	ff 77       	andi	r31, 0x7F	; 127
    172e:	3f 2e       	mov	r3, r31
    1730:	16 c0       	rjmp	.+44     	; 0x175e <vfprintf+0x188>
    1732:	28 01       	movw	r4, r16
    1734:	22 e0       	ldi	r18, 0x02	; 2
    1736:	42 0e       	add	r4, r18
    1738:	51 1c       	adc	r5, r1
    173a:	f8 01       	movw	r30, r16
    173c:	a0 80       	ld	r10, Z
    173e:	b1 80       	ldd	r11, Z+1	; 0x01
    1740:	36 fe       	sbrs	r3, 6
    1742:	03 c0       	rjmp	.+6      	; 0x174a <vfprintf+0x174>
    1744:	69 2d       	mov	r22, r9
    1746:	70 e0       	ldi	r23, 0x00	; 0
    1748:	02 c0       	rjmp	.+4      	; 0x174e <vfprintf+0x178>
    174a:	6f ef       	ldi	r22, 0xFF	; 255
    174c:	7f ef       	ldi	r23, 0xFF	; 255
    174e:	c5 01       	movw	r24, r10
    1750:	0e 94 cc 0c 	call	0x1998	; 0x1998 <strnlen_P>
    1754:	4c 01       	movw	r8, r24
    1756:	f3 2d       	mov	r31, r3
    1758:	f0 68       	ori	r31, 0x80	; 128
    175a:	3f 2e       	mov	r3, r31
    175c:	82 01       	movw	r16, r4
    175e:	33 fc       	sbrc	r3, 3
    1760:	1b c0       	rjmp	.+54     	; 0x1798 <vfprintf+0x1c2>
    1762:	82 2d       	mov	r24, r2
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	88 16       	cp	r8, r24
    1768:	99 06       	cpc	r9, r25
    176a:	b0 f4       	brcc	.+44     	; 0x1798 <vfprintf+0x1c2>
    176c:	b6 01       	movw	r22, r12
    176e:	80 e2       	ldi	r24, 0x20	; 32
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    1776:	2a 94       	dec	r2
    1778:	f4 cf       	rjmp	.-24     	; 0x1762 <vfprintf+0x18c>
    177a:	f5 01       	movw	r30, r10
    177c:	37 fc       	sbrc	r3, 7
    177e:	85 91       	lpm	r24, Z+
    1780:	37 fe       	sbrs	r3, 7
    1782:	81 91       	ld	r24, Z+
    1784:	5f 01       	movw	r10, r30
    1786:	b6 01       	movw	r22, r12
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    178e:	21 10       	cpse	r2, r1
    1790:	2a 94       	dec	r2
    1792:	21 e0       	ldi	r18, 0x01	; 1
    1794:	82 1a       	sub	r8, r18
    1796:	91 08       	sbc	r9, r1
    1798:	81 14       	cp	r8, r1
    179a:	91 04       	cpc	r9, r1
    179c:	71 f7       	brne	.-36     	; 0x177a <vfprintf+0x1a4>
    179e:	e8 c0       	rjmp	.+464    	; 0x1970 <vfprintf+0x39a>
    17a0:	84 36       	cpi	r24, 0x64	; 100
    17a2:	11 f0       	breq	.+4      	; 0x17a8 <vfprintf+0x1d2>
    17a4:	89 36       	cpi	r24, 0x69	; 105
    17a6:	41 f5       	brne	.+80     	; 0x17f8 <vfprintf+0x222>
    17a8:	f8 01       	movw	r30, r16
    17aa:	37 fe       	sbrs	r3, 7
    17ac:	07 c0       	rjmp	.+14     	; 0x17bc <vfprintf+0x1e6>
    17ae:	60 81       	ld	r22, Z
    17b0:	71 81       	ldd	r23, Z+1	; 0x01
    17b2:	82 81       	ldd	r24, Z+2	; 0x02
    17b4:	93 81       	ldd	r25, Z+3	; 0x03
    17b6:	0c 5f       	subi	r16, 0xFC	; 252
    17b8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ba:	08 c0       	rjmp	.+16     	; 0x17cc <vfprintf+0x1f6>
    17bc:	60 81       	ld	r22, Z
    17be:	71 81       	ldd	r23, Z+1	; 0x01
    17c0:	07 2e       	mov	r0, r23
    17c2:	00 0c       	add	r0, r0
    17c4:	88 0b       	sbc	r24, r24
    17c6:	99 0b       	sbc	r25, r25
    17c8:	0e 5f       	subi	r16, 0xFE	; 254
    17ca:	1f 4f       	sbci	r17, 0xFF	; 255
    17cc:	f3 2d       	mov	r31, r3
    17ce:	ff 76       	andi	r31, 0x6F	; 111
    17d0:	3f 2e       	mov	r3, r31
    17d2:	97 ff       	sbrs	r25, 7
    17d4:	09 c0       	rjmp	.+18     	; 0x17e8 <vfprintf+0x212>
    17d6:	90 95       	com	r25
    17d8:	80 95       	com	r24
    17da:	70 95       	com	r23
    17dc:	61 95       	neg	r22
    17de:	7f 4f       	sbci	r23, 0xFF	; 255
    17e0:	8f 4f       	sbci	r24, 0xFF	; 255
    17e2:	9f 4f       	sbci	r25, 0xFF	; 255
    17e4:	f0 68       	ori	r31, 0x80	; 128
    17e6:	3f 2e       	mov	r3, r31
    17e8:	2a e0       	ldi	r18, 0x0A	; 10
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	a3 01       	movw	r20, r6
    17ee:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <__ultoa_invert>
    17f2:	88 2e       	mov	r8, r24
    17f4:	86 18       	sub	r8, r6
    17f6:	45 c0       	rjmp	.+138    	; 0x1882 <vfprintf+0x2ac>
    17f8:	85 37       	cpi	r24, 0x75	; 117
    17fa:	31 f4       	brne	.+12     	; 0x1808 <vfprintf+0x232>
    17fc:	23 2d       	mov	r18, r3
    17fe:	2f 7e       	andi	r18, 0xEF	; 239
    1800:	b2 2e       	mov	r11, r18
    1802:	2a e0       	ldi	r18, 0x0A	; 10
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	25 c0       	rjmp	.+74     	; 0x1852 <vfprintf+0x27c>
    1808:	93 2d       	mov	r25, r3
    180a:	99 7f       	andi	r25, 0xF9	; 249
    180c:	b9 2e       	mov	r11, r25
    180e:	8f 36       	cpi	r24, 0x6F	; 111
    1810:	c1 f0       	breq	.+48     	; 0x1842 <vfprintf+0x26c>
    1812:	18 f4       	brcc	.+6      	; 0x181a <vfprintf+0x244>
    1814:	88 35       	cpi	r24, 0x58	; 88
    1816:	79 f0       	breq	.+30     	; 0x1836 <vfprintf+0x260>
    1818:	b5 c0       	rjmp	.+362    	; 0x1984 <vfprintf+0x3ae>
    181a:	80 37       	cpi	r24, 0x70	; 112
    181c:	19 f0       	breq	.+6      	; 0x1824 <vfprintf+0x24e>
    181e:	88 37       	cpi	r24, 0x78	; 120
    1820:	21 f0       	breq	.+8      	; 0x182a <vfprintf+0x254>
    1822:	b0 c0       	rjmp	.+352    	; 0x1984 <vfprintf+0x3ae>
    1824:	e9 2f       	mov	r30, r25
    1826:	e0 61       	ori	r30, 0x10	; 16
    1828:	be 2e       	mov	r11, r30
    182a:	b4 fe       	sbrs	r11, 4
    182c:	0d c0       	rjmp	.+26     	; 0x1848 <vfprintf+0x272>
    182e:	fb 2d       	mov	r31, r11
    1830:	f4 60       	ori	r31, 0x04	; 4
    1832:	bf 2e       	mov	r11, r31
    1834:	09 c0       	rjmp	.+18     	; 0x1848 <vfprintf+0x272>
    1836:	34 fe       	sbrs	r3, 4
    1838:	0a c0       	rjmp	.+20     	; 0x184e <vfprintf+0x278>
    183a:	29 2f       	mov	r18, r25
    183c:	26 60       	ori	r18, 0x06	; 6
    183e:	b2 2e       	mov	r11, r18
    1840:	06 c0       	rjmp	.+12     	; 0x184e <vfprintf+0x278>
    1842:	28 e0       	ldi	r18, 0x08	; 8
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	05 c0       	rjmp	.+10     	; 0x1852 <vfprintf+0x27c>
    1848:	20 e1       	ldi	r18, 0x10	; 16
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <vfprintf+0x27c>
    184e:	20 e1       	ldi	r18, 0x10	; 16
    1850:	32 e0       	ldi	r19, 0x02	; 2
    1852:	f8 01       	movw	r30, r16
    1854:	b7 fe       	sbrs	r11, 7
    1856:	07 c0       	rjmp	.+14     	; 0x1866 <vfprintf+0x290>
    1858:	60 81       	ld	r22, Z
    185a:	71 81       	ldd	r23, Z+1	; 0x01
    185c:	82 81       	ldd	r24, Z+2	; 0x02
    185e:	93 81       	ldd	r25, Z+3	; 0x03
    1860:	0c 5f       	subi	r16, 0xFC	; 252
    1862:	1f 4f       	sbci	r17, 0xFF	; 255
    1864:	06 c0       	rjmp	.+12     	; 0x1872 <vfprintf+0x29c>
    1866:	60 81       	ld	r22, Z
    1868:	71 81       	ldd	r23, Z+1	; 0x01
    186a:	80 e0       	ldi	r24, 0x00	; 0
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	0e 5f       	subi	r16, 0xFE	; 254
    1870:	1f 4f       	sbci	r17, 0xFF	; 255
    1872:	a3 01       	movw	r20, r6
    1874:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <__ultoa_invert>
    1878:	88 2e       	mov	r8, r24
    187a:	86 18       	sub	r8, r6
    187c:	fb 2d       	mov	r31, r11
    187e:	ff 77       	andi	r31, 0x7F	; 127
    1880:	3f 2e       	mov	r3, r31
    1882:	36 fe       	sbrs	r3, 6
    1884:	0d c0       	rjmp	.+26     	; 0x18a0 <vfprintf+0x2ca>
    1886:	23 2d       	mov	r18, r3
    1888:	2e 7f       	andi	r18, 0xFE	; 254
    188a:	a2 2e       	mov	r10, r18
    188c:	89 14       	cp	r8, r9
    188e:	58 f4       	brcc	.+22     	; 0x18a6 <vfprintf+0x2d0>
    1890:	34 fe       	sbrs	r3, 4
    1892:	0b c0       	rjmp	.+22     	; 0x18aa <vfprintf+0x2d4>
    1894:	32 fc       	sbrc	r3, 2
    1896:	09 c0       	rjmp	.+18     	; 0x18aa <vfprintf+0x2d4>
    1898:	83 2d       	mov	r24, r3
    189a:	8e 7e       	andi	r24, 0xEE	; 238
    189c:	a8 2e       	mov	r10, r24
    189e:	05 c0       	rjmp	.+10     	; 0x18aa <vfprintf+0x2d4>
    18a0:	b8 2c       	mov	r11, r8
    18a2:	a3 2c       	mov	r10, r3
    18a4:	03 c0       	rjmp	.+6      	; 0x18ac <vfprintf+0x2d6>
    18a6:	b8 2c       	mov	r11, r8
    18a8:	01 c0       	rjmp	.+2      	; 0x18ac <vfprintf+0x2d6>
    18aa:	b9 2c       	mov	r11, r9
    18ac:	a4 fe       	sbrs	r10, 4
    18ae:	0f c0       	rjmp	.+30     	; 0x18ce <vfprintf+0x2f8>
    18b0:	fe 01       	movw	r30, r28
    18b2:	e8 0d       	add	r30, r8
    18b4:	f1 1d       	adc	r31, r1
    18b6:	80 81       	ld	r24, Z
    18b8:	80 33       	cpi	r24, 0x30	; 48
    18ba:	21 f4       	brne	.+8      	; 0x18c4 <vfprintf+0x2ee>
    18bc:	9a 2d       	mov	r25, r10
    18be:	99 7e       	andi	r25, 0xE9	; 233
    18c0:	a9 2e       	mov	r10, r25
    18c2:	09 c0       	rjmp	.+18     	; 0x18d6 <vfprintf+0x300>
    18c4:	a2 fe       	sbrs	r10, 2
    18c6:	06 c0       	rjmp	.+12     	; 0x18d4 <vfprintf+0x2fe>
    18c8:	b3 94       	inc	r11
    18ca:	b3 94       	inc	r11
    18cc:	04 c0       	rjmp	.+8      	; 0x18d6 <vfprintf+0x300>
    18ce:	8a 2d       	mov	r24, r10
    18d0:	86 78       	andi	r24, 0x86	; 134
    18d2:	09 f0       	breq	.+2      	; 0x18d6 <vfprintf+0x300>
    18d4:	b3 94       	inc	r11
    18d6:	a3 fc       	sbrc	r10, 3
    18d8:	11 c0       	rjmp	.+34     	; 0x18fc <vfprintf+0x326>
    18da:	a0 fe       	sbrs	r10, 0
    18dc:	06 c0       	rjmp	.+12     	; 0x18ea <vfprintf+0x314>
    18de:	b2 14       	cp	r11, r2
    18e0:	88 f4       	brcc	.+34     	; 0x1904 <vfprintf+0x32e>
    18e2:	28 0c       	add	r2, r8
    18e4:	92 2c       	mov	r9, r2
    18e6:	9b 18       	sub	r9, r11
    18e8:	0e c0       	rjmp	.+28     	; 0x1906 <vfprintf+0x330>
    18ea:	b2 14       	cp	r11, r2
    18ec:	60 f4       	brcc	.+24     	; 0x1906 <vfprintf+0x330>
    18ee:	b6 01       	movw	r22, r12
    18f0:	80 e2       	ldi	r24, 0x20	; 32
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    18f8:	b3 94       	inc	r11
    18fa:	f7 cf       	rjmp	.-18     	; 0x18ea <vfprintf+0x314>
    18fc:	b2 14       	cp	r11, r2
    18fe:	18 f4       	brcc	.+6      	; 0x1906 <vfprintf+0x330>
    1900:	2b 18       	sub	r2, r11
    1902:	02 c0       	rjmp	.+4      	; 0x1908 <vfprintf+0x332>
    1904:	98 2c       	mov	r9, r8
    1906:	21 2c       	mov	r2, r1
    1908:	a4 fe       	sbrs	r10, 4
    190a:	10 c0       	rjmp	.+32     	; 0x192c <vfprintf+0x356>
    190c:	b6 01       	movw	r22, r12
    190e:	80 e3       	ldi	r24, 0x30	; 48
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    1916:	a2 fe       	sbrs	r10, 2
    1918:	17 c0       	rjmp	.+46     	; 0x1948 <vfprintf+0x372>
    191a:	a1 fc       	sbrc	r10, 1
    191c:	03 c0       	rjmp	.+6      	; 0x1924 <vfprintf+0x34e>
    191e:	88 e7       	ldi	r24, 0x78	; 120
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	02 c0       	rjmp	.+4      	; 0x1928 <vfprintf+0x352>
    1924:	88 e5       	ldi	r24, 0x58	; 88
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	b6 01       	movw	r22, r12
    192a:	0c c0       	rjmp	.+24     	; 0x1944 <vfprintf+0x36e>
    192c:	8a 2d       	mov	r24, r10
    192e:	86 78       	andi	r24, 0x86	; 134
    1930:	59 f0       	breq	.+22     	; 0x1948 <vfprintf+0x372>
    1932:	a1 fe       	sbrs	r10, 1
    1934:	02 c0       	rjmp	.+4      	; 0x193a <vfprintf+0x364>
    1936:	8b e2       	ldi	r24, 0x2B	; 43
    1938:	01 c0       	rjmp	.+2      	; 0x193c <vfprintf+0x366>
    193a:	80 e2       	ldi	r24, 0x20	; 32
    193c:	a7 fc       	sbrc	r10, 7
    193e:	8d e2       	ldi	r24, 0x2D	; 45
    1940:	b6 01       	movw	r22, r12
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    1948:	89 14       	cp	r8, r9
    194a:	38 f4       	brcc	.+14     	; 0x195a <vfprintf+0x384>
    194c:	b6 01       	movw	r22, r12
    194e:	80 e3       	ldi	r24, 0x30	; 48
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    1956:	9a 94       	dec	r9
    1958:	f7 cf       	rjmp	.-18     	; 0x1948 <vfprintf+0x372>
    195a:	8a 94       	dec	r8
    195c:	f3 01       	movw	r30, r6
    195e:	e8 0d       	add	r30, r8
    1960:	f1 1d       	adc	r31, r1
    1962:	80 81       	ld	r24, Z
    1964:	b6 01       	movw	r22, r12
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    196c:	81 10       	cpse	r8, r1
    196e:	f5 cf       	rjmp	.-22     	; 0x195a <vfprintf+0x384>
    1970:	22 20       	and	r2, r2
    1972:	09 f4       	brne	.+2      	; 0x1976 <vfprintf+0x3a0>
    1974:	42 ce       	rjmp	.-892    	; 0x15fa <vfprintf+0x24>
    1976:	b6 01       	movw	r22, r12
    1978:	80 e2       	ldi	r24, 0x20	; 32
    197a:	90 e0       	ldi	r25, 0x00	; 0
    197c:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <fputc>
    1980:	2a 94       	dec	r2
    1982:	f6 cf       	rjmp	.-20     	; 0x1970 <vfprintf+0x39a>
    1984:	f6 01       	movw	r30, r12
    1986:	86 81       	ldd	r24, Z+6	; 0x06
    1988:	97 81       	ldd	r25, Z+7	; 0x07
    198a:	02 c0       	rjmp	.+4      	; 0x1990 <vfprintf+0x3ba>
    198c:	8f ef       	ldi	r24, 0xFF	; 255
    198e:	9f ef       	ldi	r25, 0xFF	; 255
    1990:	2b 96       	adiw	r28, 0x0b	; 11
    1992:	e2 e1       	ldi	r30, 0x12	; 18
    1994:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <__epilogue_restores__>

00001998 <strnlen_P>:
    1998:	fc 01       	movw	r30, r24
    199a:	05 90       	lpm	r0, Z+
    199c:	61 50       	subi	r22, 0x01	; 1
    199e:	70 40       	sbci	r23, 0x00	; 0
    19a0:	01 10       	cpse	r0, r1
    19a2:	d8 f7       	brcc	.-10     	; 0x199a <strnlen_P+0x2>
    19a4:	80 95       	com	r24
    19a6:	90 95       	com	r25
    19a8:	8e 0f       	add	r24, r30
    19aa:	9f 1f       	adc	r25, r31
    19ac:	08 95       	ret

000019ae <strnlen>:
    19ae:	fc 01       	movw	r30, r24
    19b0:	61 50       	subi	r22, 0x01	; 1
    19b2:	70 40       	sbci	r23, 0x00	; 0
    19b4:	01 90       	ld	r0, Z+
    19b6:	01 10       	cpse	r0, r1
    19b8:	d8 f7       	brcc	.-10     	; 0x19b0 <strnlen+0x2>
    19ba:	80 95       	com	r24
    19bc:	90 95       	com	r25
    19be:	8e 0f       	add	r24, r30
    19c0:	9f 1f       	adc	r25, r31
    19c2:	08 95       	ret

000019c4 <fputc>:
    19c4:	0f 93       	push	r16
    19c6:	1f 93       	push	r17
    19c8:	cf 93       	push	r28
    19ca:	df 93       	push	r29
    19cc:	fb 01       	movw	r30, r22
    19ce:	23 81       	ldd	r18, Z+3	; 0x03
    19d0:	21 fd       	sbrc	r18, 1
    19d2:	03 c0       	rjmp	.+6      	; 0x19da <fputc+0x16>
    19d4:	8f ef       	ldi	r24, 0xFF	; 255
    19d6:	9f ef       	ldi	r25, 0xFF	; 255
    19d8:	2c c0       	rjmp	.+88     	; 0x1a32 <fputc+0x6e>
    19da:	22 ff       	sbrs	r18, 2
    19dc:	16 c0       	rjmp	.+44     	; 0x1a0a <fputc+0x46>
    19de:	46 81       	ldd	r20, Z+6	; 0x06
    19e0:	57 81       	ldd	r21, Z+7	; 0x07
    19e2:	24 81       	ldd	r18, Z+4	; 0x04
    19e4:	35 81       	ldd	r19, Z+5	; 0x05
    19e6:	42 17       	cp	r20, r18
    19e8:	53 07       	cpc	r21, r19
    19ea:	44 f4       	brge	.+16     	; 0x19fc <fputc+0x38>
    19ec:	a0 81       	ld	r26, Z
    19ee:	b1 81       	ldd	r27, Z+1	; 0x01
    19f0:	9d 01       	movw	r18, r26
    19f2:	2f 5f       	subi	r18, 0xFF	; 255
    19f4:	3f 4f       	sbci	r19, 0xFF	; 255
    19f6:	31 83       	std	Z+1, r19	; 0x01
    19f8:	20 83       	st	Z, r18
    19fa:	8c 93       	st	X, r24
    19fc:	26 81       	ldd	r18, Z+6	; 0x06
    19fe:	37 81       	ldd	r19, Z+7	; 0x07
    1a00:	2f 5f       	subi	r18, 0xFF	; 255
    1a02:	3f 4f       	sbci	r19, 0xFF	; 255
    1a04:	37 83       	std	Z+7, r19	; 0x07
    1a06:	26 83       	std	Z+6, r18	; 0x06
    1a08:	14 c0       	rjmp	.+40     	; 0x1a32 <fputc+0x6e>
    1a0a:	8b 01       	movw	r16, r22
    1a0c:	ec 01       	movw	r28, r24
    1a0e:	fb 01       	movw	r30, r22
    1a10:	00 84       	ldd	r0, Z+8	; 0x08
    1a12:	f1 85       	ldd	r31, Z+9	; 0x09
    1a14:	e0 2d       	mov	r30, r0
    1a16:	09 95       	icall
    1a18:	89 2b       	or	r24, r25
    1a1a:	e1 f6       	brne	.-72     	; 0x19d4 <fputc+0x10>
    1a1c:	d8 01       	movw	r26, r16
    1a1e:	16 96       	adiw	r26, 0x06	; 6
    1a20:	8d 91       	ld	r24, X+
    1a22:	9c 91       	ld	r25, X
    1a24:	17 97       	sbiw	r26, 0x07	; 7
    1a26:	01 96       	adiw	r24, 0x01	; 1
    1a28:	17 96       	adiw	r26, 0x07	; 7
    1a2a:	9c 93       	st	X, r25
    1a2c:	8e 93       	st	-X, r24
    1a2e:	16 97       	sbiw	r26, 0x06	; 6
    1a30:	ce 01       	movw	r24, r28
    1a32:	df 91       	pop	r29
    1a34:	cf 91       	pop	r28
    1a36:	1f 91       	pop	r17
    1a38:	0f 91       	pop	r16
    1a3a:	08 95       	ret

00001a3c <__ultoa_invert>:
    1a3c:	fa 01       	movw	r30, r20
    1a3e:	aa 27       	eor	r26, r26
    1a40:	28 30       	cpi	r18, 0x08	; 8
    1a42:	51 f1       	breq	.+84     	; 0x1a98 <__ultoa_invert+0x5c>
    1a44:	20 31       	cpi	r18, 0x10	; 16
    1a46:	81 f1       	breq	.+96     	; 0x1aa8 <__ultoa_invert+0x6c>
    1a48:	e8 94       	clt
    1a4a:	6f 93       	push	r22
    1a4c:	6e 7f       	andi	r22, 0xFE	; 254
    1a4e:	6e 5f       	subi	r22, 0xFE	; 254
    1a50:	7f 4f       	sbci	r23, 0xFF	; 255
    1a52:	8f 4f       	sbci	r24, 0xFF	; 255
    1a54:	9f 4f       	sbci	r25, 0xFF	; 255
    1a56:	af 4f       	sbci	r26, 0xFF	; 255
    1a58:	b1 e0       	ldi	r27, 0x01	; 1
    1a5a:	3e d0       	rcall	.+124    	; 0x1ad8 <__ultoa_invert+0x9c>
    1a5c:	b4 e0       	ldi	r27, 0x04	; 4
    1a5e:	3c d0       	rcall	.+120    	; 0x1ad8 <__ultoa_invert+0x9c>
    1a60:	67 0f       	add	r22, r23
    1a62:	78 1f       	adc	r23, r24
    1a64:	89 1f       	adc	r24, r25
    1a66:	9a 1f       	adc	r25, r26
    1a68:	a1 1d       	adc	r26, r1
    1a6a:	68 0f       	add	r22, r24
    1a6c:	79 1f       	adc	r23, r25
    1a6e:	8a 1f       	adc	r24, r26
    1a70:	91 1d       	adc	r25, r1
    1a72:	a1 1d       	adc	r26, r1
    1a74:	6a 0f       	add	r22, r26
    1a76:	71 1d       	adc	r23, r1
    1a78:	81 1d       	adc	r24, r1
    1a7a:	91 1d       	adc	r25, r1
    1a7c:	a1 1d       	adc	r26, r1
    1a7e:	20 d0       	rcall	.+64     	; 0x1ac0 <__ultoa_invert+0x84>
    1a80:	09 f4       	brne	.+2      	; 0x1a84 <__ultoa_invert+0x48>
    1a82:	68 94       	set
    1a84:	3f 91       	pop	r19
    1a86:	2a e0       	ldi	r18, 0x0A	; 10
    1a88:	26 9f       	mul	r18, r22
    1a8a:	11 24       	eor	r1, r1
    1a8c:	30 19       	sub	r19, r0
    1a8e:	30 5d       	subi	r19, 0xD0	; 208
    1a90:	31 93       	st	Z+, r19
    1a92:	de f6       	brtc	.-74     	; 0x1a4a <__ultoa_invert+0xe>
    1a94:	cf 01       	movw	r24, r30
    1a96:	08 95       	ret
    1a98:	46 2f       	mov	r20, r22
    1a9a:	47 70       	andi	r20, 0x07	; 7
    1a9c:	40 5d       	subi	r20, 0xD0	; 208
    1a9e:	41 93       	st	Z+, r20
    1aa0:	b3 e0       	ldi	r27, 0x03	; 3
    1aa2:	0f d0       	rcall	.+30     	; 0x1ac2 <__ultoa_invert+0x86>
    1aa4:	c9 f7       	brne	.-14     	; 0x1a98 <__ultoa_invert+0x5c>
    1aa6:	f6 cf       	rjmp	.-20     	; 0x1a94 <__ultoa_invert+0x58>
    1aa8:	46 2f       	mov	r20, r22
    1aaa:	4f 70       	andi	r20, 0x0F	; 15
    1aac:	40 5d       	subi	r20, 0xD0	; 208
    1aae:	4a 33       	cpi	r20, 0x3A	; 58
    1ab0:	18 f0       	brcs	.+6      	; 0x1ab8 <__ultoa_invert+0x7c>
    1ab2:	49 5d       	subi	r20, 0xD9	; 217
    1ab4:	31 fd       	sbrc	r19, 1
    1ab6:	40 52       	subi	r20, 0x20	; 32
    1ab8:	41 93       	st	Z+, r20
    1aba:	02 d0       	rcall	.+4      	; 0x1ac0 <__ultoa_invert+0x84>
    1abc:	a9 f7       	brne	.-22     	; 0x1aa8 <__ultoa_invert+0x6c>
    1abe:	ea cf       	rjmp	.-44     	; 0x1a94 <__ultoa_invert+0x58>
    1ac0:	b4 e0       	ldi	r27, 0x04	; 4
    1ac2:	a6 95       	lsr	r26
    1ac4:	97 95       	ror	r25
    1ac6:	87 95       	ror	r24
    1ac8:	77 95       	ror	r23
    1aca:	67 95       	ror	r22
    1acc:	ba 95       	dec	r27
    1ace:	c9 f7       	brne	.-14     	; 0x1ac2 <__ultoa_invert+0x86>
    1ad0:	00 97       	sbiw	r24, 0x00	; 0
    1ad2:	61 05       	cpc	r22, r1
    1ad4:	71 05       	cpc	r23, r1
    1ad6:	08 95       	ret
    1ad8:	9b 01       	movw	r18, r22
    1ada:	ac 01       	movw	r20, r24
    1adc:	0a 2e       	mov	r0, r26
    1ade:	06 94       	lsr	r0
    1ae0:	57 95       	ror	r21
    1ae2:	47 95       	ror	r20
    1ae4:	37 95       	ror	r19
    1ae6:	27 95       	ror	r18
    1ae8:	ba 95       	dec	r27
    1aea:	c9 f7       	brne	.-14     	; 0x1ade <__ultoa_invert+0xa2>
    1aec:	62 0f       	add	r22, r18
    1aee:	73 1f       	adc	r23, r19
    1af0:	84 1f       	adc	r24, r20
    1af2:	95 1f       	adc	r25, r21
    1af4:	a0 1d       	adc	r26, r0
    1af6:	08 95       	ret

00001af8 <__prologue_saves__>:
    1af8:	2f 92       	push	r2
    1afa:	3f 92       	push	r3
    1afc:	4f 92       	push	r4
    1afe:	5f 92       	push	r5
    1b00:	6f 92       	push	r6
    1b02:	7f 92       	push	r7
    1b04:	8f 92       	push	r8
    1b06:	9f 92       	push	r9
    1b08:	af 92       	push	r10
    1b0a:	bf 92       	push	r11
    1b0c:	cf 92       	push	r12
    1b0e:	df 92       	push	r13
    1b10:	ef 92       	push	r14
    1b12:	ff 92       	push	r15
    1b14:	0f 93       	push	r16
    1b16:	1f 93       	push	r17
    1b18:	cf 93       	push	r28
    1b1a:	df 93       	push	r29
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	ca 1b       	sub	r28, r26
    1b22:	db 0b       	sbc	r29, r27
    1b24:	0f b6       	in	r0, 0x3f	; 63
    1b26:	f8 94       	cli
    1b28:	de bf       	out	0x3e, r29	; 62
    1b2a:	0f be       	out	0x3f, r0	; 63
    1b2c:	cd bf       	out	0x3d, r28	; 61
    1b2e:	09 94       	ijmp

00001b30 <__epilogue_restores__>:
    1b30:	2a 88       	ldd	r2, Y+18	; 0x12
    1b32:	39 88       	ldd	r3, Y+17	; 0x11
    1b34:	48 88       	ldd	r4, Y+16	; 0x10
    1b36:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b38:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b3a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b3c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b3e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b40:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b42:	b9 84       	ldd	r11, Y+9	; 0x09
    1b44:	c8 84       	ldd	r12, Y+8	; 0x08
    1b46:	df 80       	ldd	r13, Y+7	; 0x07
    1b48:	ee 80       	ldd	r14, Y+6	; 0x06
    1b4a:	fd 80       	ldd	r15, Y+5	; 0x05
    1b4c:	0c 81       	ldd	r16, Y+4	; 0x04
    1b4e:	1b 81       	ldd	r17, Y+3	; 0x03
    1b50:	aa 81       	ldd	r26, Y+2	; 0x02
    1b52:	b9 81       	ldd	r27, Y+1	; 0x01
    1b54:	ce 0f       	add	r28, r30
    1b56:	d1 1d       	adc	r29, r1
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	ed 01       	movw	r28, r26
    1b64:	08 95       	ret

00001b66 <_exit>:
    1b66:	f8 94       	cli

00001b68 <__stop_program>:
    1b68:	ff cf       	rjmp	.-2      	; 0x1b68 <__stop_program>
